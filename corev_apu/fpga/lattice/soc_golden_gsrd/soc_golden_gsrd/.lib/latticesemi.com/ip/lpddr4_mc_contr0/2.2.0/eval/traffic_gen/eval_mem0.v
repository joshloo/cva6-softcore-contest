
/*******************************************************************************
    Verilog netlist generated by IPGEN Lattice Radiant Software (64-bit)
    2024.1.0.34.1  Patch Version(s) 22225
    Soft IP Version: 2.4.0
    2024 08 12 15:32:36
*******************************************************************************/
/*******************************************************************************
    Wrapper Module generated per user settings.
*******************************************************************************/
(* ORIG_MODULE_NAME="eval_mem0", LATTICE_IP_GENERATED="1" *) module eval_mem0 (clk_a_i, 
        clk_b_i, 
        rst_a_i, 
        rst_b_i, 
        clk_en_a_i, 
        clk_en_b_i, 
        wr_en_a_i, 
        wr_en_b_i, 
        wr_data_a_i, 
        addr_a_i, 
        rd_data_a_o, 
        wr_data_b_i, 
        addr_b_i, 
        ben_a_i, 
        ben_b_i, 
        rd_data_b_o) ;
    input clk_a_i ; 
    input clk_b_i ; 
    input rst_a_i ; 
    input rst_b_i ; 
    input clk_en_a_i ; 
    input clk_en_b_i ; 
    input wr_en_a_i ; 
    input wr_en_b_i ; 
    input [31:0] wr_data_a_i ; 
    input [13:0] addr_a_i ; 
    output [31:0] rd_data_a_o ; 
    input [31:0] wr_data_b_i ; 
    input [13:0] addr_b_i ; 
    input [3:0] ben_a_i ; 
    input [3:0] ben_b_i ; 
    output [31:0] rd_data_b_o ; 
    parameter MEM_ID = "eval_mem0" ; 
    eval_mem0_ipgen_lscc_ram_dp_true #(.FAMILY("LAV-AT"),
            .MEM_ID(MEM_ID),
            .MEM_SIZE("32,16384"),
            .ADDR_DEPTH_A(16384),
            .DATA_WIDTH_A(32),
            .ADDR_DEPTH_B(16384),
            .DATA_WIDTH_B(32),
            .ADDR_WIDTH_A(14),
            .REGMODE_A("noreg"),
            .RESETMODE_A("sync"),
            .RESET_RELEASE_A("sync"),
            .REGMODE_B("noreg"),
            .RESETMODE_B("sync"),
            .RESET_RELEASE_B("sync"),
            .BYTE_ENABLE_A(1),
            .BYTE_SIZE_A(8),
            .BYTE_SIZE_B(8),
            .BYTE_WIDTH_A(4),
            .BYTE_ENABLE_B(1),
            .WRITE_MODE_A("normal"),
            .WRITE_MODE_B("normal"),
            .BYTE_WIDTH_B(4),
            .ADDR_WIDTH_B(14),
            .ECC_ENABLE(0),
            .INIT_MODE("mem_file"),
            .INIT_FILE("C:/Work/MC_Avant/Propel/eval_mem0_gen/eval_mem0/misc/lp4test_c_eval_mem0_copy.mem"),
            .INIT_FILE_FORMAT("hex"),
            .INIT_DATA_TYPE(1),
            .INIT_VALUE_00("0x000001C02008000000C00003000000000C00003000000000000000000000000033FCFF3FCFF000000x000001C00020000000C00003000000000C000030000000003000000000010E0CF3FCFF3FCFF000010x020201C02C2C000000C03003100000000C03003110000000040000000001040473FCFF3FCFF000020x000200C02428004040A0364300001010080364300000000080004562ACFE02000154502A8AA000030x3B4F0350A8240000080F34CC4000000C00F34CC40003F38C001B06C1B06F200003FC0F3E854000010x3FCC0140C00004100C0F3080004C040C01F30C00010390DC200000000000040483904E138E5000000x110400D44400000004501540500000044501540510015144400000000000040100000000000000000x110400D4541400404CF53F4150001014CF53F41510015144451545515454044111545515455000000x000480C02129820200B43240022082080B43240208800000000000000000000100000000000000000x000C03C8010200000830380080000000830380080000A288022A8AA2A8A8040882A8AA2A8AA000000x15440010950004101015154050440401415164063107E118433F8951500000474014AF014AF000000x0CC400101515045050BF3EC1E0441411CBF3CC1C210700B8073A03E25CE0008450882208822000000x19815340600A410100EA2984111041008EA298411440002052088220882B170D40000000000000010x2646A298951586525892120922649619092120922986A298B400000000022E4ED2A8AA2A8AA154560x000373C0010141010000000C01104100000000C004400000000000000003330000000000000000030x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_01("0x030003C0000C003000000000000000000C000000000000001000010030300000030000000000000C0x030003C0100C003000000000000000000C000020000800001000010030320000030000000020000C0x000003C0090C4020544815455000551548000020000800005004010030120000032000030C20000C0x030003001F1A0001EC803E8AA03C55004000001000041000B00C010030220205511000010C2110080x08C43108150D0212900303CE702454280002E0A00E08019C00048000804000C1B09032000E0008200x01C04000790D00500CC31243300C9211C002A4000E4000000000440000000000030000040D4270100x1B0541585504467000040000014000000000505005040010150101110455000001485514841000000x374F13F43F044D300005154551545515440070F00F0C1144100245115CFF01455004CC10400154140x2B0A02A82A000A300000000000000000022060A60209800002100042008A18000080AA00042000420x038221000004003000022A8A2028AA2A8003D0A409090288000088008088108AA10022000C02A8600x1445505463058540A8913E4461BC062F40415454114501501511055140751089424415344A52DC600x1C8D32BC00038700F8822082E148202284415CFC13CF101016108950104F314400041B204500A0240x0B0823E8151E423188040000808000000110082902824208C80E00200432248223B0C613022000810x0E84428C6A298362545A2A8A6068AA2A8663F40E1B439010953989D198213900026488264552A8E60x030000000030003300000000000000000110000500014000C01C00400400140000304003000000410x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_02("0x0300307000040010000000CDC3FCFF3D0C3000000000003CFF3FCC00400400003330C000000000030x0300307000080000000000CC42DCE73C0C3000000000002CBE2FCC00800C00003320C000000000030x120130B000040000006A1640C1FCDF3C0D3000000000003C7F1FCC00C004030013304000801154560x308300600C00000000D03CC020DCDB35412000322000011C7F2F4000403E06000210000003C004560x03C800F820008C200048120E328CE3368DC0C4C3038C40C8BE2F8080E0C500C4D0000D0C02C1B06C0x0B4400781104806000251C05511CC73403C0D042034400107C1F008160C400C010140C00000000000x09049110651100011400000CC3745D1D4551545315017038EA3A85120490310531745110000000010x180D9130140004011455154CC3300C0E46F3FCE03F07C174D53540110050044F71304734415154550x02088000022000012000000CC3B8AE2F86E0CC2023028030C0300A000800030A30B82222000000000x000010C0000C000100AA2A0CC3700C0D4CC0C401130A00B4C0300400C00C0082B130082802A2A8A90x1745E13455214991A4C12D01100471114D4154171545534024098D5214102D454244D51407A2A8520x32C300347C214482900A2840108060128980BC2A024BB0C8160581411430128CC2401B0C44F294020x288A70E80A0C8281A0000006C1F83E068EB208291802809CC330CCA0E02D010A9338C2290082208B0x164DA1A47519457254AA2A4B92A42909496154962548512892248951949A168422248902440000020x000000C0000C00000000000CC3300C0C0000000000000030C0300000C00F000030300001000000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_03("0x0000000CFD07C4400C88230C20200001000120200C0000400101000000800CC000A0000000333C0C0x0000000CFC23C2000C00030C00000000000000000C0000000000020010000CC00000000000333C0C0x15450058FC13C1300004020C11000000000010000C400000000C000000000CC00340251A88333C080x150001586C02C0300800000C00000000000000000D800000000040434400008003501F3000223C000x148803404C00C0F00C0C31CCF030F00CC0303C3C3C0C03300C0CCCF34C00000073A006318CB33C820x224110704C00C030040821CC9020B01980712C383D081370190CCCB3440101013300000000717C410x00001000D51545531C05178850505515455154541D455154A6140411404005455150000001A154A50x15451154FF1FCDE31C0E3B0070B0B73BC7E3ACAC2F8DF2F4082C0C33C0C00FC773A015154453FC5F0x00000000E82282118C2823CE20281A33C841242E0F8E10581100000140A82B0153A8800002802C2A0x2A8A80A0D20908800C0A2BC020A4883908E1ACAD2E0232483924000340900307E3A40A2A881000000x068F62103513451150851448915416114541444505C55054612A4A7164510D0951540A294063545D0x008261A40E38CBA1E00B2CC0838C3C33CEC3ECEE0F8FB0FC8308C0E3CCF10B8B53F81A140003F8FB0x000022007A238A0204900189408809208102008A024840884006869028241EC40228482208B228820x2A8AD1A4A41A4193D8E822C6A12CB219C2612C2F2F8C9270990B4B6174392989710C900002E250DB0x00004000C00000014C500301000400000000000104000000000101001014100000044000000000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_04("0x000000C0000300334C80000003C000000082A0C82283C0003D00880300030003D0A0400C000000800x000000C0000300330C00000003C00000000000C00003C0003C00000000030003C040400C026050000x014401800003C0331C40000003401515450150841143C1C03C10870320030303C11C800C01D000800x3D00F0C80515C023244001050234200145C110441A4800C02C20C70120310702C21C000400C0E0400x10805200B12CC00310080004A0C4012C4BF0885C030CE0C00C1B0331C0000700C18C43050FE270000x2E0441000001C403000402434048000000504845010110D00C04430100010B40C04C01044AF22C000x00000000000345914C28040000C0000000C0C0AE030350545504C1031803154950C88005455154420x15445144551703730C54054551C4151545C1D09E1343F10CBC0DC5135403300BC0D8C00ECAE3AC410x000200200003CA220C9A000000C0800000C2E02C2383A0E8A808CB0308832B8280E420188263A8220x2A88A200AA2BC0108C00028AA0C40A2A8AC0C04C030300C01200C3030803030120CC00040AE2A4100x2C45B000A910467150591AC5B0140A2A441114221444515C751505507468254F5114962D404154550x080B8244940000C3F054048281181E250011149214447308CF3B051064382C00F314C232C0E1EC6E0x00020010220989B22C2028000060420882E0C8EC0B09A2A4B82AC2A390010A8782C8080C800200280x2A8BA26400024621184F168AA19890000091949916463158241D854260D60D4A419475394A6324750x00010010000300000C01000000C0400000C0C00C030300000000C0030043000000C01010000000100x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_05("0x380001043013C4E0000401C8E0C04F13800010000080C00CD0030032383810000000303D000000400x100001047023C0400004004040C08F02000110020A00C02CC0070020202000000008323C000020000x140042083C13C190008C08C4D1F00F044000301C05C0C00CC0000031347400400040303C000000000x244001801C02C2D0404A08C4D0700B0A4100080004C00028C7100001041401C000C0222C4080201F0x100042800C00C1C000C80002C33003070003140C370080D0C4000000B0A330CDF2F0010C400010C90x00C040801D00C000C0430002007403000301000C07009000C33000008041224DF0C0040C001000930x32401104BA1948C2401406C0C0E865230900502A0540A1945121003030301008A2041915006150400x3600010CB53BC4D200040EC4D0D4EF134800101E0FC0539CF32200313434300CF30C3A3F00E170C50x39882218FE2280E1A0281BC8E0F8AA038E80A063008802E882308832383828001108AC280AB228800x3000C000FC0108C000C003C0C0F00423000300030A0641E4203040B03030200031084E120470248A0x058A115C4A374511A815150511281D1446A054661045E16C5515464144450585A29856354551A4150x05851190C50CCF1194161B051114333C4650586132CF12E0EC364D8144452F43337CCE0ECB30ACB20x3202C2249A1B82C208C826C2C2686E0B0A2320962082C1ACA9208030B0B2088640A0BA3A806228000x24CD917865224190F49539859194890643D254E91A4F92C8463DCDE164652D499150E4244F914C9A0x3004C010300000C010C010C0C0C000030043004000050000000444703030040000004000050004000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_06("0x2283000CD22100330003340A0020103003D0E0000440438C8E0708E0C04F1380011002320E3010F40x0303000CC30200330003300C0000003003C000000C80100000040000C00F000003200010043010F00x1143030CC61E00330C03310DC000203C03C150000044C24849160491F0CF074003001001017330F10x12411308CA1F01026C02324DC010001C02C210410CC08044451A44D1700B0A41000800210D5320B20x0F082300C40E02104C003144C0300F0C00C180400040C1302C0302C13003070003340C10840300310x04090340C00C03108C403080C0100F1D00C000C3100CC0102030C2037403000300000C00809340300x030362A4630B00314895184C40342A3A4D60CC400140830C0C0B80C0E865230900501A300C3298580x1343F3FCE31C0033DCFB380D40706A3FC3F0D0000040434C4D0784D0D4EF1348001039310D3178F40x23838128A32C8072842A288EE0382E3E8280E4A00281038C8E0BC8E0F88A038680A06E320E33A0A00x03030304230C00300C01080CC030053C0120C0000C00030C0C07C0C0F004230003000C340C3300480x144492BC54178AC158B715416244460A875114EA2145D05051108511289D1446A05465094142B4D50x1444F3C0FC148F01FCEC3F816344060F0CF3143D114930505118451114B33C4650586F0541414C3F0x0B09A01C8B088212A01B228CA0B8921A4B82C8082C82632C2C2782C2686E0B0823209A388C9298E20x164631684615C5E0D46211C971246525824190F51947B258591AC59194890643D254ED2D496160910x03030000030040700000000C103000300000C0100C01130C0C0300C0C0000300430040340C3000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_07("0x0A0030088F0000F108800C03C00004030003D0A1000F0000F40A00300C000F4281003000CD2210080x040010440F0000F004000483C00440030003C083000F0000F00800203C000F0202003000CC30200C0x05C020C84F0300F04C700C03F00C00030303C45C010F0300F109C0300C0C0F0773003030CC51F0040x19C01014621B00B094700C86B00085010702C85D01026300B219C010241C0B0B730011308C81C0040x18C000103413003050300803F158C4000B00C44D030443003118C000002C0306310C02300C40C03C0x10C000000413403010300003B0C0C0350340C00C010483403020C000040D0300300410340C00C0100x1C40314C0D1285521C100D425154442B4AA160CB000D4294581C40326C6A25832300362A4630B00C0x0D40705C4F368EF20C501C46B3E88D2BCFF3E0DC000FD3F8F80D40722CFF3F8370003F3FCE31C00C0x2EC8320C8E238AA02CB80E0091A020038122A0EC204E8128A82EC8308C842A83B08078128A32C80D0x0CC0302C0C0300420C300C09B1089013030120CC000C0300480CC0300C0C0483300030304230C00C0x114A411051168DD1505A11C4D154591886B354172AC152B4D5114A41409A3D4453A8C92BC54178A30x214A4110513E8B33E05A1106B3ECAA38CFC0FC142F01F3EC3F214B4160FF03CC50BC0F3C0FC148F00x2C82B24C262A86E0AC222E4300A00201881388C82206A018E22C88B094A01E0B20881A01C8B0882C0x394D218858354890785D09829150BD160D62449535C8D16091394D216835290651D4E31684615C5B0x0C04300C0C0000000C040C0000001003000000C0104C0000000C04300C000003004070000030040D0x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_08("0x080040800C0300C0300A38C8C30C0000000028283C0003D02800C0223C0003C42200300A0F0000F40x0C0880C000010080200530C0C2080000000000003C0003C0000001003C0003C0100011040F0000F00x000010800C030040200E34C5C008C400015154143C0C03C42700C1313C0C03C101C001010F0300F10x310CC00C3B0CC330FC3424C4D310C62FCC000414098C02C857000041886C02C241C02019826300B20x0D0C0040C4330C4330C812005210C2318C6330E2110C00C4630000C0D04C00C140C02028C44300310x07002040C4310C4310C412436000C00000000042110D00C043000000104D00C040C00000044340300x0C0140C00C0300C0300E30C0C38C80000000B030350A51607100C530344A15487040350C0D4294580x0C0040D04C1304C1304D34C4C34C8515455174343F4AE3E03501C1713CDA3BC83140711D0FD2B8F80x0C0281C00C0300C0300E38C8C30C60000000B8383A0EA280BB20C832388E2A80B2E0380E0E83A8A00x0C0C00C04C1304C1304D2080C30CC22A8AA23030300C01203300C0B0300C010830C0302C0C0300480x1281511411044110441105052060432A8A500445054AD35445290641445A3745416845114152B4D50x31416104310C4310C43205051050443E8500044507CAB0FC8529064144FA2CCF8168441141F2AC3F0x248C826826098260982732C2430C1022088270B21A8A6388B20AC93098AA1B82B088B90C86A298E20x1949539499264992649A2585925864000000A46523458244E534862160D52241E174260948D160910x0C0C01C00C0300C0300C30C0C30C100000003030300000003010C030300000003010300C0C0000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_09("0x32009000822B088000F4088AC2202002000000800000000021240E3000000080F0040F000400CC300x300000080002004100F000008010300000000000004100200304082000000000F04C0F010C00CC200x310040084114040120F02000000C100001C00000058100000008093154AA2A4670C40003000044200x21004004820200C084B01880803C000201D000000000200003380D03FC55104C914045070622107C0x0200B10CC00C0CC330301C03033C03230DC1800A30C303CC0F1F0482A4501802320887090E0018030x04012000840808C330302902023C00030CF38400004E430CEC0F04924C9E050011004400020054D30x150551284115044120540445411834024052A0800041115041100C300000000030140F104422CC300x330CE314C33F0CC010FC0CCFC33C31124051508000C333C4C7000D315455154170040F000422CC310x2C8BA18092284A1200A2088A1284780000E3C020008223E082288E300000008030281F208863CC300x0E47A220922849000048088A124C300203D340900000036808204822A8AA2A0230C00F030003CC310x354941582429415264D5110A50584516845294A90985415455264142BC061B4702145018455220840x0CCB23B49C23C3F0CC3B3B08F0FCC52ACC5154640408C3F8F32E014088280A4441149014464210440x3A06808000000201B8E82000008032080BA2888212CB12A0A2088CB00000000810C82703089244180x24C921C4B629CB726493198A72D4E5164671543525866148792DC962A8AA2A4661947A1645E198660x00400040100041100001000010407000030000103000000010044C300000000030C01F030040CC300x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0A("0x0B0000C000000001300F120B0000000000000000134300F43230030000000004E0080A2A448014540x030000C000000003300F03030000000000000000324300F0003003000000000C0020A000CC2000000x360400C0000000033C0F07C610144000000000002203C0F06D21030000000004D0145515405300000x374C0054001400E00C0B0AC770002A3ECEA1540023C0C0B09D37015000500388D0081E2B04C300000x30830014FA0384C33C0307C0803CFA01CE4390E401C3C0306C080053E80E1304C33CE329C07100000x304300404E0000001C4301C040384E060400000001C1D0301C040101380000004130D000403300000x31410154551545413CF533C140000000015154551343F35C3C14015154551504C07CFF3F04F014540x17C703FCFF3FCFD3301F0347D014551547F3FCFF33C301F0353D03F3FCFF3F4CD040000004003CFC0x1A808388000A8A827C8A034A8200000003A2A8AA2703E0A036288220002A2A09E00000000000A8AA0x30000040AA2A8A003C0422C00008AA2A88A2A8AA030FC0482C000102A8AA28008020AA0882A068A80x1744F194940546914CED144753D03E250151588F1444F3D44535CE5250151A451184091B0541D4550x15CC033C220A4433C0033C45F008220883E2503A3CCC023CC51F00F0882910CF118C0B3C05633CFF0x208822C800088082989E0B80A0800000022080822901A1E0B80A0B200022020AC288002AC08220020x14C6D094AA200051E4690644D368AA2A880000001E4E5290650DC652A88001479164A0118721C0030x0000400000000000700003000100000000000000070700003000400000000001C0000000C10040010x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0B("0x00C033482C000300000000008300F422C000000000000000002300F120B000000300000002300CD20x30C033040C000300000000000300F020C000000000000000000300F0203000000300000000300CC30x10CC3318D81003000000000443C0F10D81015400000000000013C0F07C6100000300000000330CC50x100C2324DD30005000550002C0C0B22DC70000AF2FCAA1540000C0B08C77000001500000C80308CA0x10CC0310C20C01A3E804390843C0311C0803FCA01FCE4390E413C0307C0803CD400CEB24033300C40x104D0304C10C02013810000001D0301C040390E1218000000001C4301C04034200043800001340C10x0ACFD1CCC50405515455154443FC5C3C44000000000551545513CF533C140145515455154133F4730x0FC0730C5F1C0FF3FCFF3FCDC304F035CD015455154FF3FCFF3301F0347D03CFF3FCFF3FC7301CC30x08CE220C6A020E20000A2A8893E0A03688800000000AA2A8AA27C8A034A82003E220022A827388830x20CC1088C0040502A8AA2A8013C0482C0002A8AA2A8AA2A8AA07C0422C0000486108AA2A007304220x050FB1505D13C5529405168150F8D505C5F140FA140551683F14CED144753C01535441158543EC540x050003F057300CF2208A140FF0003F054F022088220FA140EB3C0033C45F0383A0F822250FC000FC0x324A722C82208B2000082080A1A4E2380A20000000088208082989E0B80A08028320020802929C8B0x2585A118531B4252A8A00005725891250DD2A8AA2A800000001E4690644D36880258A80045E168460x30C0000C0001000000000000130000300040000000000000000700003000100000000000007000030x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0C("0x00C0334C2C000000000008CD02888C03C482C0040C00C03C482C00000000000200088A00010000000x02C0330C0C000000000000CC00000C03C000C0000003C03C000C000000280000300404200F300C0C0x00CC3318D810000000000CCC00404F03C13184000400F03C1B1840000014000300004110040004050x000C2324DD308AA2D440048C00444302C2F1DC0E0C06302C271DC0A2AC051000101445000530080E0x00CC0310C100CFE21439080C21302F00C1F010000800F00C1F0100F3E0250E4030003C2800000C090x004D0300C200C9322000000C21142710C07020040400710C070000E13028000013341428041004040x2ACA918C8500000014551445030C0E2948E050002E82E2948E0500000069154501AC0C21010260900x2ACFF34CDF1045517CFF3CCF034C4F3FC4F1F4012F87E2FC4F1F4051547F3FCF01AC4D31010270900x22C4A28CEA0800003CAA2988838C8D0A88F2A0800C00D0A88F2A0800002B2A8A408C8E20820220000x00CC1088C00006A284AA214202080F0108B000080800F0108B000062A8292A886118082048A008080x160AB150591A8A50145525C55050522B451194A1114922B451194AA14081154941505106814190510x160F03F05F37C8823CA50F0EF0505330CF11FC71114A220CF11FC68220833A43C1505106C141D0510x0940722C8A28000020880ACA232C240782E0A88C2C8140782E0A880000820882B08C2C0A8EB02C2E0x1685A118531D8AA280000784D258591A419134D9194691A419134DA2A8680001E1785925C9E158590x00C0000C0004000000000100430C0C0000C0004C0C00C0000C00040000000000700C0C004C700C0C0x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0D("0x00000004000000700CD30B0000000000000000020C00F138002C0C003C4E080320E0C03D0CB000020x00000000000000300CC1030000000000000000000C00F02000280C003C08000200C0C03C0C3000C30x0546A2A0122000330CC7360411500000000000030F00F06400200C303C1D3C071010F03C436040010x0FCC00500110000308CA374C0008BE3F8A9150030700B084103804702C253C071010302C8F71C0A30x218C631C4E33003300C4304033F8813F89324C9203003070101000700C1C30020388F00C470100800x2000000C880D8C5340C03000324C86068000000007403000101004F10C0030080108740C030100410x0000000854054672A463214000000000455154550E865230A0360DA2948C280300C0EA160E11000B0x054551543D1FC132ACD327C411545515CFF3FCFF0E8FF134E0360FA2FC4D3C0310D0EB3D0F73401B0x00000008FC0BCCF128A33A8200000000CEA2A8AA1F88A23848304EB2288E1A0360E0F82A0DA220030x3A8AA2A8EA26CE730422300001A8AA2A06A2A8A81F00422000204C30108830024080F0120B0000820x1FCAA29055054542AC541646910CE9104551A0FD1289D1446A054262F4511A8891142A35416168140x140FA1487C0FCBC280FC16CD90882208CE910CAF328333C4760543E20CF11D8CD114280FC173D8140x02088220282A88901C8B228A00000000822020222686E0B08A3204A2782C2A8382C869388E02A8CB0x300000085C074461684614C762A8AA2A00000001394890643D25C8D1A4191746D1949624494374960x00000000000000300003000100000000000000001C00003004304C00000C010340C0C0000C0010C30x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0E("0x000000003000CD22200300CD30B0000C000000001000010CC408008100023002002040008C300C000x000000003000CC30100300CC0030000C000000003000030C84040002000021020000C0000D0004000x000000003030CC71C00330CC4360400C000000003546A384830C0003C00030C00000300004300C020x1001400011308C81E000308C8354C0054001400C0FCC100C2F0600C2D02817C24030F4050F113C320x1F88324C01300C40D033300C43340C014FA0384F35420380CF00C840C48033C0321031200F30C4C00x04C8000012340C00C011340C03000C0804E00000090C60400F040000FC8003C100003F200310C4C00x15455150762A4630A0032A46321404254551545410000100C60C005058813183001416204D300C000x3FCFF3F43E2ACD31B0032ACD327C4C1FCFF3FCF135455344CF0C4410F44033C311043D100F314C410x2000A2A0B8128A32C807128A33A820188000A8A820000210C10C00804CC2304300203B308C300C080x0A8AA2A030304220C0073042230000040AA2A8A00A8AA080C3380082DC4230CE0020B7108CF04C400x19405164492BC54168A82AC541646219494054691ACD4110161145A058A6058451681629814290900x3208A14CCB280FC174AC280FC16CD233C220A447320880B40F314AB0745503CC52AC1D1543C230310x200082009A01C8B0882101C8B228A02C8000880020000220600C8203888218032080EA20841024240x1A8A0004631684615C5E1684614C79094AA200051A8AA1B4953945927454254E51649D1509E198990x000000003000003004070000300010000000000000000010C01C0003000030070000C0000C700C040x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0F("0x3000F12820030003D0A2000C003C4A0800C000F4288003000F12820030003D0A2000C03D08B0000C0x3000F01020030003C041000C003C080400C000F0204003000F02010030003C081000C03C0C30000C0x30C0F064C0030303C4DF000C303C113C00C0C0F11780030C0F064E0030303C4DD000F03C4360400C0x11C0B084C0010702C85E0004702C25300041C0B227C0011C0B0A4D0210702C8DD000302C8F51C0050x01C03070C0300700C44E0300700C1C3C0C01C0311340C01C03070D0000700C44D030F00C473130010x12C43000C0110B40C00C0104B10C00300442D0300300412C43000C0010B40C00C010740C030030080x368A5230A0034AA160CA000DA2948C2800D2A85832800368A5230A0034AA160CA000EA160E1110250x3E8AF134B003CAA3D0DB000FA2BC4D2C00F2A8F436C003E8AF134B003CAA3D0DB000EA3D0E73701F0x3842A238C8078122A0EC204E10A88E3201E048A83B0813842A238C8078122A0EC204D22A0FA208180x30C04220C0070301208C004C3010883001C0C0482300130C04220C0070301208C004F0120B0000040x098BD1446A2886B354162A8262F4511A8A21ACD5058AA098BD1446A2886B354162A82A35416148990x0B8833C4762C8E80FC171AC2E20CF11D8B23A03F05C6B0B8833C4762C8E80FC171AC280FC163C4B30x1A01E0B08821881388C8220680782C22086204E2320881A01E0B08821881388C822041388E22882C0x234690645D1E0D62449535C8D1A4191747835891254D7234690645D1E0D62449535C962449436C490x300000300407000000C0104C00000C0101C0000030041300000300407000000C0104C0000C0004000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_10("0x0C00334C8800C000F43800C000F428200300F42230003000000000A0A0C003C4A0800C000F4288000x0C00330C0800C000F03000C000F000200300F000300030000000000000C003C000800C000F0108000x0C0C33187400C0C0F07700C0C0F0471003C0F05D2100300000000090D0C303C1D3000C0C0F1170000x044C23247C0041C0B0970041C0B0970000C0B09D17001140050000D0104702C2D380041C0B2074000x004C0310340C00C030630301C0306300C3C0306C30C0017CA0390CC3880700C1C3C0C01C0311340C0x040D0304300443D030130141D030030041D0300C0C802010E0000001084B10C00300442D030030040x0D8A914C2800C5A2583200C6A258322003A2583814405154551541C0C0DA2948C2800D2A858328000x0F45730C5800CC52F43600CD52F436200352F4393DC0F3FCFF3FC4D0D0FA2BC4D2C00F2A8F436C000x1E04A28CB201CAE0A03920CAE0A0392807E0A03628884228A80002E0E0E10A88E3201E048A83B0810x1C0C10843001C0C0481300C0C048230007C0482C00001028AA2A808080C3010883001C0C048230010x224AF150592A09A3D4452A09A3D4452A88A2D445250A61644115851114262F4511A8A21ACD5058AA0x21C503F058160B503CC5160B503CC52588503CC52F05C3C822250F11142E20CF11D8B23A03F05C6B0x0680722C220842A1E0B20842A1E0B22209A1E0B80A023200020808C2C8680782C22086204E2320880x38C5A11857178352906535835290651D4E5290650D8D2168A8000591948D1A4191747835891254D70x1C00000C0101C000003010C0000030040700003000040000000000C0C0C00000C0101C00000300410x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_11("0x00C000F4383003000CD3230030003D0E0C00C00334C8C00C000F4382003000CD3220030003D0E0800x00C000F0101003000CC1010030003C080000C0033080000C000F0203003000CC3030030003C0C0800x00C0C0F0671003030CC71C0030303C11C800C0C33147000C0C0F0672003030CC41D0030303C15CC00x0041C0B09720011308CA1C0010702C29C40044C232C780041C0B0B730011308C81C0010702C21C400x0C01C0306300C01300C40D0300700C18CC3004C03103C0C01C0306320C01300C40E0300700C18C430x0440D0301300410340C10C0110340C04C01040D0304300440D0301300410340C10C0110340C04C010x00C6A25432200362A4530A0031A8950C8800D8A914C2800C6A25432200362A4530A0031A8950C8800x00CD51F0352003D15CC3160033547C0D4800F45730C5800CD51F0352003D15CC3160033547C0D4800x01C842A83B08078128A32C807210AA0EC201E04A28CB201C842A83B08078128A32C807210AA0EC200x01C0C0481300070304210C0070301204C001C0C10843001C0C0481300070304210C0070301204C000x2A09A3D445268892BC54164A8268F51149A224AF150592A09A3D445268892BC54164A8268F51149A0x1607503CC521487140FC160581D40F3148521C503F0581607503CC521487140FC160581D40F314850x084A01E0B20881A01C8B08821280782C8220680722C22084A01E0B20881A01C8B08821280782C8220x17835290651D4E31684615C5E0D4A41947538C5A1185717835290651D4E31684615C5E0D4A4194750x01C0000030040700000300407000000C0101C00000C0101C0000030040700000300407000000C0100x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_12("0x0C00C000F428C003000F1283000000000000003C000000B83000CD3230030003D0E0C00C00334C8C0x0C00C000F030C003000F03030000000000002030000000003000CC0020030003C040800C003304040x040FC0C0F12740030C0F074C00000000000010360546A2643030CC71E0030303C11C000C0C33147C0x0C0341C0B22740411C0B0A4E000C562A85E294150FCC004411308C81E0010702C21CC0044C2324700x080301C0311300801C03070C03006C1B8522000C318C723081300C40D0300700C18C83004C03103C0x040341D0301300C11C43010C0100000084904C041000001090340C10C0110340C04C01040D0304300x0E06D2A85432800368A5130A000000008000100C00000030362A4530A0031A8950C8800D8A914C280x1E45F158F0368003D46F034A000455154551741D054551743D15CC3160033547C0D4800F45730C580x0C03E040A0398813840A0386806000008000208C000000B838128A32C807210AA0EC201E04A28CB20x0403C0C0481300130C04210C0040AA2A4AA2A8440A8AA21030304210C0070301204C001C0C1084300x118121ACD50586A098BD14466280AA144B016C401A8A4144492BC54164A8268F51149A224AF150590x118123503F0581A0B4433C461284A500082098D11E85004447140FC160581D40F3148521C503F0580x2E044204E2328021201E0B0A00908822400020842208A0309A01C8B08821280782C8220680722C220x0949835891254D7234690645D1E400008AA288D910000064631684615C5E0D4A41947538C5A118570x0C00C0000030041300000300405000000000004C00000030300000300407000000C0101C00000C010x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_13("0x0C00C000F428400200000000000000000000080002050300003003A0A0C003C4A0400F0000F108800x0C00C000F010C000000302000000000000002000000D03000830028080C003C080800F0000F00C000x3800C0C0F127C0000017000000545515440140000002020008100290D0C303C1D3800F0300F044700x300041C0B22700000001010200545F3F88038C2A208EA04000030CD0104702C2D3C0431700B094700x380C01C03113C0C028C333C0F3A895108973003E30CFF010E410C3C3880700C1C3808403003040300x300442D03013004000002C8493E4390E400340233EC3D0000010C141484310C04300C423403024300x2800D2A85432800100001041010000000151140004040054543003C0C0DA2944C2800D1285512C100x1C00F154F035C003000030C35354551547B37C151C4C51FCFC3443D0D0F517C0D1800F354EF02C500x3201E048A03B0812800020820300000001F12880080A00A8A93003E0E0E10A80E3201E210AA00CB80x3001C0C04813000240011140A3A8AA2A8B53A86A2080A0A8A130434040C3010843000C03004204300x198A21ACD50586A168281445B168F0168D51D4791505E0545509041114262F451198A1168DD150560x1C4713503F05C173E8280C0C8388220883B2BCC20F8FA1E4EF090C11141D10CF1184613D4B33E0510x20086204E2320082A06111410200000000A220800A0A00882A1209C2C8680782C200862806E0AC200x1747835891254D70D4962686A1A8AA2A895180EA2787A10007258691948D1A41917478354890785D0x0101C0000030041040C30300000000000000004001010000013003C0C0C00000C0101C0000000C040x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_14("0x000003000C00011154400A083204000040A22888050AA0800A000A00A0A2230003D0A1000C003C4A0x000003000C00000000000000000000000000000000000004152000000000030003C043000C003C040x00C233007C0100000000060832000000000114440000000400200000D0D3130303C41F000C303C150x0AC032803B008000000404003000000000522000000A0048A0100800105E110702C85C0004702C250x09C3330C3C08000000F80BC8030C583000A300EC000C308C2030000088400C0700C44F0300700C1C0x00C3722C3410008000C3020910480F0E400240A80008210C050040004841050B40C04C0104B10C040x2086911414144773FCD52FCD335C951542F33CCC250550480B200400C0C3034AA150CA000DA2944C0x254F430C7C0D4DD1547F104230A47F3B810000003F0FF0C80C100C00D0D313C553C0D7000F517C0D0x00C8920030000262A8BC0A483248941548A2288A2A8AA0A008000952E0E323812280EC204E10A80E0x00C03000300006E2A8AD2A885288692F42A228890A0AA090000008114041030301204C000C3010840x154B51545515845154151441407055154D5048931540A11C4B298AE114141486B354161A8262F4510x1686C2CCFA3F82F3FCBF2EC28298BF3BC5B2C8303FC88330CC14CB131414144D40FC1705C1D10CF10x0889800822204422A82A0000300000000A0000020880002498080202C8CB09881388C8020680782C0x1546525C591D8A4000B502C9E2585D354C02689B10CAA1B865154BF39496160D62449535C8D1A4190x00000000000000000000000070000000040000010040001030000151C0C303000000C0104C00000C0x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_15("0x024200383830CF432C003000F13830000000000038C8C000F438C0038C831942A2240C250AA080330x054000101030CF010C003000F0203000000000002080C000F020C0020806100000040900000010200x00000024243C0F13DC1030C0F044F002455154551444C0C0F12780834C42000000000800000000320x28020004170C8B20D84011C0B084F0000552A8FF24C441C8B227C0104448000280000C000A0000040x0C030030A03C0311CC0001C03070C000C1B06C1B130201C0311340213020000303300C000C30C0320x01421000811D0300C08010C43000C00000000000010240D0300300301021100202640500082190310x02810030303A85438440368A5130A0000000000030C0D158583280430C07114151140D05055050230x03C3003434354F035CD03D45F03460014551545534C4F004F43580034C4733C3F33C0F0F0FF0F0230x0082423838348A03E8883842A038C8180000000038C8E048A03B09038C83028AA2208C0A8AA088230x000201D0103C0481C00030C04210C0108AA2A8AA1040C0C04813014104030E82A2207C3A0AA084D10x128E9184450ACD505856098BD1446620CFE2A89405052158D5058AE0505C15442244511540A114440x33C2F3C4450503F054F1074433C461214433A440050513003F05861050583FCE20CCF33FC8833CEC0x248002B0B210CE2388A01A01E0B080048220882232C26204E23200632C250208000084088000083B0x1946D3E46525891250DD234690645D39000000002585835891254F92585A1C0EA264F930CAA19CE60x0C0041703030000300043000003004140000000030C0C000003005030C03040400005C10400004430x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_16("0x228022283D054482A08D054482A0803200000C030000105454008880A0400004222888054520A8200x1000303008000000000810000000102100000C0300000000000000004000000000000000000000010x0000212434000000000800000000003100C23C030C40000000004880A000000001144400000000020x02000104CC000082004C0000820000050AC338823C02000000104400C000000012200000002080100x030000B00C0000C0384C0000C038C03109C03C0F0E0000000F208B80B0D70C002300EC0000300C930x320200808400005018C410005018503100C3742C1C0402000C0C0FA078C037840340E400001104A30x210030301D254441504D15444150502380D3D415050571FCFD16CFD0FCF51544B33CCC25451054120x330031341F3FCCC3F0CF3FCCC3F0F02385300C0E0F41925457390130C44F3EC84000003FCF30FC320x2244B2380E2A8A82A0AE0A8A82A08823006018020C00830003388BA0EC0F2FCE22288A0A8AA0A8280x020050101E0A8882A09E0A8882A0871100C030000C0063A8AA368A81689A1BC4A228890A8A20A8240x2E89414441154510A411154510A415044571545515464154511543110435154750489315454128450x32CFC144432A8BA088332A8BA0882F0C4682C88E2ECC22FCFB3E89332C9F3ECDA2C8302E8AE2208C0x2008B0B0B6200A200826200A2008283B088180880A0942A8A2288222C82A2A8820802228028200890x16CDE16468100392A4B8100392A49F264552585E1746A1000B140B93A4971D4702689B1000E1A86E0x004470300C000100001C000100000503000000000000000000000001C000000100000100004000040x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_17("0x0A0A2354590A88903454248A8200CC000030003000045154002880E01000010282A0811542A220020x04042200100000102001000000408C000030003000000000000000C00000000000000000000000450x0505210000000000200000000000840308F004F004000000001880A00000000041504000000000800x090DE200000A0000300000880000902B0CE200EC020000001010008000000001820000000280102C0x08840300000C0CC0100000C0C300C42700F030F02000000CE02F80F034630002C038C000030310C00x0080C100300809B01003008092C0C0030DE0B0D90002000C0C0C8C03303C3900D0384000020270C30x0C0C1354510544503455044541408E034F505051114DF3FC563FC4F17C55150BC3F0C915415110820x0D0D13FCF30FCCF03CFF0CCFC3C08E14C03034F035C30000FD1548D280FF2E0541504F3FC3F330830x0E0E03A8822A888238A80A8A82208C01806000C00009A2A8F00300C120FB1D800000222A8AA228000x340413A88E0A8881F8A8388A821C440300C000C0004BA2A8B62A816224A63D0A82A0922A82A224000x2141505455108911445515029054D115C95154551641515055110501C45515C510A43515442244520x314140FCEF388333CCFE3F8230FCB11A0B233CEB3E0BF3F8FE3B0A2268FF2F06B08C1B3FCE20CCB30x2C8CB18020200002180202000020EC220600208A0140A2A0A80200C080AA0A8820080A00080008640x394962001C3A8993E001338A927C99154961746536890008D40B87A1647715C092A4B4000EA26C990x1C0C0300041000017000110000140C000000000000000000000001C000000040000010000400040C0x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_18("0x0E0B4154222883415422288030C0000300C000041545002820384000040A0A820154482A080090800x0C02000000000210000000042040000300C0000000000000001000000000000000000000004150000x0509000000000200000000003000320F00C3100000000018202800000001054100000000008000000x09C30000220043000022000001C8B30E80B3008000001014001000000006080000000820042200800x28430000300E430000300EC03008700F03C380000003E028E41DC5C3000B00CB00000C0384C300C00x240100001406C1300014064C3000331D0B3304020003030CE00CC031E40310C90000050188C0F08C0x0C076154111443515411144420E037350541445D3FCF51BCF43FCD51542F0FC3215444150480A0400x0D07F3FC333CC3F3FC333CCC20E44C030383D0661545F2404C3143F3B810000033FCCC3F0C80F0C00x0E03A2A8A2288B82A8A2288220C01806008300230000F228E83B03E3FC8A0A8282A8A82A0A0020920x000782A822288782A8222881D040300C0003001B2A8AB1A8A11A8692F42A0A8242A8882A090000810x114C5154442904515444290541145D154551549115445150C5010D5154D41284D154510A4150ACA50x1148E2A8E8220CE2A8E8220BC314A23283A3BC0A3FCEF3A84F0B87F3BC6A320C23A8BA088330F0BF0x2C8DA008880209A00888020A32C82120820288522A88A2208A320AA2A8082008A200A200826120020x194A1000E6298E1000E62987E19456164791D4A90002D108E72985D354C21A86D000392A4B9254B70x0C030000400007000040000140C000000000000000000000013000000040000040001000010300110x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_19("0x000002108038C8F000C003000044551002822804000040A0A820003340A2220000C000000081200E0x01000110001040A000C003000000000000003000000000000000003300000000000000100041000C0x00000000002484E00CC01F00400000000182080000000010541000330000000000003000000000050x004000008024C7A04CA00EC02000000101003000000000608000092300A0000090C8B004000020050x310131D0D01201208CC30F420000003E02F2BC4D1CC000B00E3F410320C03B4F10087C104371340C0x330233F0901241105C8B0D0400200030C0F2044C034E40340E32030320C43B0830003C3043F320040x030103304030C071B445050511DCFF354BF33C5F154542F0FC32029140F3330822E0303040C3100C0x11031050C034C47340C31F035264551F854174A43FCB8150541642F3C051114923E44410C111300D0x080200048838C832A4800C000230000F829238E23ECFE0A0A820022208A2220020C032008000608E0x24006080870000700C000C0001B8AA2B4AA29889298F42A0A829801080A2228200403900062020700x1E8D415C970505035455154561145505451040711545714429054671540624456114572B4451E4710x07C3E3B0BD050580B0B33E8FE0ACFF2FCAB0C88A3FCBD2AC230CCEC3BC8E0CC3E314A13CCEE32CD10x088A82200832C252600208881128AA0A8220B0822A8A8088020981B2A008088612C8220A8882008C0x2D45E19C9F2585A1949716476290002D40B228591DC57024A92206611CA6260861945B154E61E4F90x040040040530C03000000000000000000000300000001000000000000400000000C001000400405C0x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_1A("0x008000000201000080802088F000C003000044551002822804000040A08A080003D0220A080008000x000000004101000000C000C06000C0030000000000000010000000000000000003C00000000008000x008030000000000000C010C4200CC01F0040000000018218000000001045040003C00000000004030x2442B010C3030011804011C7A04CA00EC020000001010030000000006080100242C0220040024C2B0x04827300DF0F0F11D0700A01000CC30F420000003E02F2BC4D1CC000B0E32FC440C833238DF048270x0C003300FF0F0F20A073084210DC8B0D4400200030C0F2048C034E4034E31C80C0C837234C80C0030x0AC83000F303030040C500C071F445050511DCFF354BF33C5F154542F0CF0C80A150330F0C80AC830x0BC9510044050501C0DF11C47300C31F035264551F854174A43FCB8150450584B3F011050590BC940x08C030802000430088CB20C832A4800C000230000F829238E23ECFE0A08A08008280A20A08008C030x0040324008180AE284230200700C000C0001B8AA2B4AA29889298F42A08A0A480120220A0A2004030x190551EC9139C5F19439150503545515456114550545104071154571441A11459354441A415190550x2B05A274FB030353BC2F170580B0B33E8FE0ACFF2FCAB0C88A3FCBD2AC38330FB0ECEC38C333B05A0x26C220282222022208C20AC252600208881128AA0A8220B0822A8A808820224863A8082082606C220x198552D45939CBF09CA51485A1949716476290002D40B228591DC570249A18819244E61A488198550x00C000400010404004C000C030000000000000000000003000000010000000000000400000000C000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_1B("0x2104F108222208413002028280080D000C00C0300000400022020E0100001088A220000F40A0A0800x1000F0000000040020000101018C0C000800C0300000000000000C00000000000000000F000000000x3104F00000000CC130000343434008100803C0330400001012020A00000000045110000F000000000x3281B00820040C2270A20243701818000CC3A02F0080000010000800000000488004090B00A000010x330C302C383B0CC31093230A203027080403C0F72000E000EB32C7431830048C03B0D10308C038DC0x330C302868260CC3100201090000870F04D348CB0102F30CC33205C30CCE100D03B0430308C138C40x12085104111104823801030302444F158DF144511145D194733F0F5314551ECCF330822540F0F0C80x3208A30C33330C823853034341D4DC3F4F50C0E3344A335855054DA03CFB25445114923F805050590x2408A2882222810230020B838280CE3E0EA18023000BB22CC0180CE2BCB718000000020A820000000x0000420822224000000204000064EE298C0300030007A18CAA2A8282286F1688A228600480A0A0A20x1641D1504624455044561444521C9015431154551585117454144070D45515412244561D4501A4150x3CCB23E8CE0CCFB0C46A3C4452B0723F41B0A0EB2F02B36C6E34C2823CFB398B20CC3A338E838C330x2986E0A000008061B0880B0B2164A42A8660208222462298A8288C80A8A22A020088692E0A0208260x1E4990D86626C79264561E4652884A1D099194E53589B124C2360A52DC751409A260861907A1A4880x04000040000041003000070300000C000C0000000000000000000C004000000000000000010000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_1C("0x2882000C0020C8E0C08C00C000A455120902100030030000011544C200A0200C2008400004A088880x000120800000C0C0800C00C0005000010401000030030008000000C00000000C00000000000000000x000120480000849000FC01C710000001041100C0304F0018000000C10060200C10080000001044440x0103229C2820C4D314FA008F00900000400280C4280FC000400000810040000810000000006080100x0EC330C8243402C100FC0CC380000000430330C6230C80808000000200B830006088D20C00B0A0EC0x098330C4002C020340382C4301100000020020E3220C01002C00001004181141000CC2338431E0DC0x1441208C8010C0C0C0D41441417455110513545111052144551544511454100551045115465044440x3CC3208C9430C4D0C0CC0DC3D07CFF334E33E806314D105CBE2A88B22CF8300FE30CB33EC9F0CCCC0x2888408C0022C8E0C0D800030038AA2A0A93A04100040080522A8A90A408080940203B2DC40000020x288400000021000080F000030018AA20862320CA000C2000F62A88325CA12403E118A21BC6A088890x290551105525051128151545518055164C5008551545915C541545D16445054953101515454118910x230FC3B05A2F0511280B0F8BF308FF3ECAB0200B274E1350BA2A8A23A8EA0F83F228BB3ECDA318330x0008126C2202C2C26040080A027000098481440000002024000002E0180A028C81402228880220200x298DE1985527859194991D85D1A8000E0AD2A853274641D856000390E4272D4942B89F1D4421989B0x0004400C0001C0C0C0C00000003000040043000000000000000001004001040000D00400000000010x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_1D("0x0C8CC3000C00C700C00C0000C0C0030445504000000C80280802040000480C080220A208003340880x08C843000C008100C00C00000080000000000000000C00000004000000000C0100000004823300000x084873007C01C1C0C07C01C0000C101000000400000C40180806000000000C0201105104403300000x00C432203B0042C1A03B0080E27C0020000000011048401000000000000408040220040C0A6300880x080C330C3D088CC18C3A080C409C80000000C02A0040802C8C038C60C008310883383B0CC30308CE0x05443188331048E0C0381008407C0402000040383C01004808110423384030400158150CC303089A0x0CCD91441414C55044141446C0C445154550445506054154440504515464054501105104821140440x0CCF43087809CA01846405C9C0CCD33B8AA088AA0D4B82E8C80D08A2A8940BCB0330F3088233C0CC0x0CCE90081808C84008180884C0CC02098AA22C37000922680A0A02F2DC4A0BC22220A2290200A0880x3CC83000300088C20030000A80CC001B8AA0886B368391E8190208A1BC6933C91220A210001080880x1101515455150351545515052214573145511455154D525051184151545519451044A415447154110x3300022CBA3A08029869258F222CFE0B8AA2A82A2942E2B8F2328AA2A899338E2288883A8CC3BCB30x0645C020800A430020800A4060680B10000208620A0E0180020480A288822E894088082A49B0A0000x398A925C591D8A509C591D8C9194D6290003B4BD340932487B1A4B71D4433942B264A637866134990x1CCC00000000C00000000000C0C0000000011000000010001100010000010000D0000011000010000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_1E("0x0000000003000F42800300000000000C00334C800308E000000000003C4D090931CC0C080C302C080x0000000003000F03000300000000000C00330000000000840C00002034450D0D0004450D0830080D0x0000000023300F13400300000000110C0C331470010450000F3FCFD30449030B30CC490F0830180B0x1189510020300B20440114005000F3044C2324780204D080093F8AD304CF0F071018CB030420180B0x074390E433300311048117CA0390C8004C0310340F03C280891588000CCB0B07231CCB0B0400608F0x18000000013403000002010E000000048D03003004010280C324418304C707071204C707054100070x0045515453298543240115455154910D8A914C280300C044500000100C4D0D0D314C4D0D0C11540D0x15CFF3FCF32BCF037C433FCFF3FCB70F8AB30C6C0304D0C4E11545711CCE0F0F329C8F0F0C32A80F0x00CAA2A8A7128A03B822080022A8A21E04A20CB20348E0A4C00000208C0E0C0E320C8C0E0C23C82C0x2A4AA2A8873004800001028AA2A8001C0C10803000400098C22A8AA24C3C3CCCF22C3C3CCC03E41C0x254551A0D42A4D50585A1644115896124AF150592885111467018FA14051114140505111416158110x08CE910CBC28C3F05CC83C822250FE32CA03F05C28C511341E088212D0F223C3C220A333C3C2E0230x0082202029018E23288308002080222680722C200B02C220480000208406240690C4A4068632AC440x2A0000001E1609124C76168A80005538C5A1185716C591B4962A8A82D87939C9E2887939C96148B90x0000000007000003001000000000001C00000C010340C010000000004C1C1C4C700C1C1C4C0000DC0x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_1F("0x00000008841489001400004000000000030000000C0E000C003D0A000C00000000C00F12800000000x0000000400034010800028000004001582100000080E800C003C08000C00000000C00F03000000000x004003084003040000100003F3F0F3008303FCFF300F000CC03C49000C00000000F00F04400000000x000011044003440010100001F3F4F3000301A8BF34070000C02C8D100450004000300B0A4100A8810x2488D1403C0FC2020C3008C2A2405128000318C63004C20CC00C4412045F3A0E42F003070180FCE80x0001C0001F0F0200007200C790F890110000000000018044D00C000008090E00007403000000E4380x1542A18C0414C1105410144000000000400000000E8F600CA6150C900865158AA0E86513090000000x3FC6E38C4000C420BC143C0151545115C11154551D4FD10CAE3C0DB108EF3F8AA1E8FF034F4054550x2A81729C8828CA80BC3C2A8000000800848000000E0F802C4A280EE088AA2A8AA0D0AA038E2000000x2A03D0500828020014202982A2A8A22A8402A8AA2808801CC0120000040A2A8AA0F00420000068AA0x1A06A19051090451685519070170A705C402A8A501401150A93541616869104551289D144652503E0x10CEE3B05B230663ACE93B8E20A020228D13E850014091F0A30FC16320E208CA5328333C47C288220x020022AC2202C08280082A0800000800084220882C8F022406388CA20CA0000882406E0B0A8000000x00455178592986D1547D0386A2A8AE2A8D900000094A917858244931D85A2A00019489064371A8AA0x0000001C0000C0400014010000000400044000000C0F001C00000C004000000000C00003001000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_20("0x03C4E000C003C4E000C003C4E000010002820000300000000000888300000000000888000C0000000x03C0C000C003C0C000C003C0C000940000000000300000000004000300000000004404000C0000000x03C15300C303C19300C303C1D300380000410000300000000104848300000000100040000C0000000x02C2D3004702C2D3004702C2D300EC0003400000050011500008C4C05001150000844400014004540x00C1C30C0300C1C30C0300C1C30C7F004230BCD41ACE804C922C03A1ACE804C922403B3906B3A0130x10C043044B10C043044F10C04304020000113420204381000000014204381000000017100810E0400x3D48C300DF3D48C300DF3D48C300690003031455154551545504C0C154551545504C0D11455154550x03CCD000F003CCD000F003CCD000170003437CFF3FCFF3FCFF1CC4D3FCFF3FCFF1CC4F37CFF3FCFF0x0A88A380E10A88A380E10A88A3808A150B83003E220000A8AA09C8C220000A8AA09C8C038880002A0x0108C300C30108C300C30108C300021500000486108AA2A8A801000108AA2A8A801001218422A8AA0x3F4511BC373F4511BC373F4511BC681A4450401515894054681505115894054681505005456250150x00CF11C00C00CF11C00C00CF11C01605CC50783A0F8220A4433F0510F8220A4433F0520783E088290x0782C288680782C288680782C28888220B23002832000088080AC2C32000088080AC2C028C8000220x1A4191D48D1A4191D48D1A4191D4563F4E526880258AA2000117859258AA200011785A240962A8800x0000C040C00000C040C00000C040001507030000000000000001C0C000000000001C0C00000000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_21("0x004C711030300430000C000C0000E00000000050140800C00F34C84030003D0E0000000CC8E0E0C00x000C300030300030000C000C0000910000001405000400C00B30804030003C082000040C80C0C0C00x0008200020300030000C050C0000200FCFF3C000030B00C0CB31878030303C4DD000800CC41050C30x0004100030200020002C0A08000001068AF3C00003090044C232C70010702C8DE000330804D010430x0080B2A01000CF20380C00003000600C4B12C43B0F0B0008C031030200B00C44E0C0CC10C1C3880B0x0084D3E0100540314C4C000140405000000000200B070044D030430210740C04C0409830434148470x100C300070154511441115055144F00000000050140CA2D8AD1CC3C034FF170CF0004405C0C0C0DF0x120C3008702A4522882115065244F105455154F53C0CB2FCF730C5003C553C0D4000CC15C5D0D0F00x3A0E3048BA274B1214002D88C2C0F800000000A0288C80E8E22089A07812280AE204880088A0A0E10x000C3000301582215C00000540C0D00A8AA2A8AA280C00C0C108C3003030120CC0040004C0C0C0C30x2040419040154561687514055154001FCEA2A40401415134A71505F3CC7F354173FC911A051114370x28424110482A46628885280A5098011503E250A02BC1621CF83F050104D40FC140503B330511140C0x190E9244393209321492054C8180740882208802008C8248AF22C2809881388CA088442EC2C2C8680x26C9E3B86625CE6168651A897254A910000000A029C9518C5A118571E0D62449535C99098591948D0x010C300431000000000000400000F40000000000004C00C00000C0107000000C01040000C0C0C0C00x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_22("0x15440154500144110054004051543C00CC0370000000000003034030001F0C0000F000000013740C0x2A8B3228EC268AA2C8900E82A3A83C00CC0330000000000003030030000F0C0000F000000003300C0x0C4C0164700A4833005C3F0041343C004C0130000000000002030032000F0C0000F00800000130040x19050194140DC411406014C0707428008C03389115805140000301300C8E080000A000200002200C0x15411114441545504044054151540C00C141C4473F05E138433FC033003E0C0000F00C30C22088080x0B8D12A0B42A8BA34CEC2FC2E2A809104401C0181B0700000100CC12003139403064440C0E318C040x1802A33C8834C0708840020132201515C6635455154551545115451154171545505455114503101D0x2647B0005C118711C8480000D0DC3D35C883F4FF3F4F5154531FCF32D83B3DC750F4D5334D83109D0x05400150400545500054144041148A2CC00328AA2A8AA2A8AB290121A40F3A8C12E8B4320F8310AD0x298D92A8F4388FA348A43E82E2BC1000C823202A2A8AA2A8A2030202000F300030800C210C03100C0x0D422250080581F080F4214141182D150E60B47E258083FC011546606C641D4750B45105451064130x084F31D0BC0649B3C00C0D4143000D3F088024E2080832BCB01ECC82808C3DCEF034F32E8F1044100x14405154401445500450004041547A224021088000008088A728010104010A8181E886198A43384D0x2A4CA2B8701A84832CB02B8BB3B0A9118942E46A2A0A00000A3DC6525876194252A44926C7B2EC9A0x180BD0D46E2CC402C01E13CF21C44000C0030000000000000400000000030000010000000043004C0x348D41A4F63082734C6611416184FF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_23("0x000000040115454000000000005040054510004500011154550441515054140041505505005154050x2A8AA2A8C93ACBB0E8AA2A8AC068B21B4EA320662A0BB2B8E8088A51286A1B0AE058EA26C382F8CA0x3FCFF3FC020704C03CFF3FCF82B0C02801F000310001139C510C033320181C0A4010760700521C0D0x1545515443358E5014551545C2C05034C9510056000133081504C0B340F415044180ED05406184440x000000004015451040000001001411150541004515015144150041515454110451541504414150410x2A8AA2AC412B8AD268AA2A8AC260D22A87F13022340EA2E8A90C8E01702B1D0A9148AA3741A26C4E0x3FCFF3F48A104C60BCFF3FCF00AC231105422045000B71480800485054320200C3C80C208AC360810x15455150CB1E4930D455154540D07105021320010F08F2042200493300663B0C23D0192DCB0214C10x000000000415450000000000415400154140000515055014410445515455100451545514005110050x2A8AA2AC4A1A4BD068AA2A8B42A0D3228AB120B7340EA2A8A9068B01606D0D0B805CEB1349A2BC460x3FCFF3F08C1F0922BCFF3FCD83402015C18200080300F010C10845512421120611142814829200AB0x1545515CC40B04F2D4551544C11CF0194173000E250D8004820C0611D4181F0643C0C607C3712CEC0x000000000105050100000000005401114540141114055154540004511415100551544514055150010x2A8AA2AC0F2A8DC2A8AA2A8B4384C12B883014D9000BA2ACB0068E11B4A41C8AC058A9070AA29C260x3FCFF3F8C10104B3FCFF3FCC8050BA318F2330C11785B1D0470A840110370B0551484D32CD3058CA0x1545515C400603D154551547C06CDB0340B11CB2318641D8790D04603C202D018174C80B44617C4D"),
            .INIT_VALUE_24("0x014411540114055150451541505015114501445514004140540141511445110551545014455154410x020B22E8CB2B0AA3F0AB2B8BA2B0EA2A4AC2ECFA2882228C820B8AA3BCAE2A0AA2A8E80ECFE3AC890x0BCB301CC13B073040491DC1704039134F0104030000C048B808017004C3030F22044034451070420x080521C4400500C360C00D83407025320D41807E340041886407C1B2308B230C41F43010409358430x050411540514051150551544414055150441545514411140150445511454150551505401405154400x0A8E23E88A2A0BB2E0AE2E8AE2E0682A8B43A8BA2C83A2C8810A82A3A8AE290BB3A8A82B8AE2B8810x0500207C0C0C04111024378C4140BD060D807C4300C01304140AC2E1F0143D8911E03401C071048A0x0D08126C09180411D04D23400140F81D04C30877188311841B0CCCD1EC4C1085C2904000C051E40B0x054511544515055114511045515014154401545114415140550445111451140500545415454154440x0B8421200B200EE2BCEA2ACBE2C06A3ACB43A8EA3E8BA388410A83B0A8FB38CEA2ACAA2BCBE3AC4A0x0D47B1000E2A87901040200C5008A81C84A044320400C040A50CCD11300012840050CC150401F04F0x0A4CA09CCE1581633C3310832358D40947E314F13040B2405900040034A21583006C181987C0B0050x054050100510055144550545514455154411541510415144550540501455144551545515455050000x0AC8A2A80A388AB2A8EA2FCBA288FA1BC332ACBF2B4EA268000A8AA2ACDA2C8AA3A8E82B8AB2A80E0x09436030EA13C7C044260508737C15080EC124013208B30C042200C0207537C34294402C891010C30x0501D0106501873344D500067254C9368771542C228A6308F62FC0901C3921845164770C01406041"),
            .INIT_VALUE_25("0x040551445410455144541445115041144151101515055040551444515415050551505405401140540x2F8AB2ACAA0C8AB3ACBA2A8EB2A8333ACAA2BCAA3A8EA230BF3E8AB2B8BA2B0682682B0A0C21B0BB0x040D9044640CC0D244101C841190301C41E1103611059030C4040091DC17040BD1107C0CCCB1B0830x050E42C054348D810C4800420150D308C19014390B0150D03630C400D836070F8110350904A050650x144450544410455110511544511041154511505111451040551545515444140141141105405040540x3A8AF2A8EB088BA2A8BB2BCEA3AC222ACEB2E8AB3A8BA320EE2F8EE2E8AA2E06A3A8AD0B08A2E09A0x104C00DC0230C05020421C007008C30349104070034C02C05134064378C0148A81003628006008D40x0800B0B88A20C6510071138CE22882360431200232CA22805D23C0D23408148D40341326C0D088840x114551545010455154511544514041154441445515454040511545110455154551545005445154450x3B8AF2A8BB0C8FA2BCFE3ACFA2EC322E8AA2ECAB3A8AE330AB3B8AA2ACBA2C8FA3ECED2944A258A50x024D41B41D228143D0001D40D07083014081087506C470884100000200CD00C17104920D00C154800x3141E164C41A4C60CCA23DC8931853194401C44725871248B32747310836354CA0F05F08CC91FC4A0x114511545101444154101504514401154551445415454100541505505455140551545014005104500x3ECBB2E8AD23CAE2A8BE2B8FA2B4823E8AF3F8EE3B8AB188EA2E8AA2FCBE28CAB2C8CC2A80B388A80x004D132CC40C4C41E4103504B3003A050F4000741C8F003C041106605087370E40003B180C813C130x22CC10D4920708C19014380552681931833288F013466218F41101500067250961D49D3404601841"),
            .INIT_VALUE_26("0x114151040115455054511540405454114141541015454150511145101455114511144514405110550x2BCBA2F0C23E8AE2ECBB2ACB30B8AA2A8BE3A88C2A8FA3B8AB3B8A8328AF2B8EA2ACAE2A0CF2B8AA0x30016120CA050F5044D1344E3010AC11C001640C30C641407001490330361104132405240C1310790x02C0518C493183006CC12706D0485C1002C054342D810370023045312C61034200108114C4C230640x154541040511055144551540405045154551441015451054551541101455044451541504405154450x2BCAE2F08F2B8AA3A8AE2A8F20B8EB2E8BE2E8C82B8AA2FCAB3ACAC228EA2A8EE2FCAB2B08A2BCAE0x3507000C013107810C642F05C0404619C51300B030442008750700B03014084093001C02C0C0D8440x078E82680C2306508C9216408070490507B288A0364500A4472E82A03495004C50EC3A0A80B1840D0x144550040515445114141540405455054451501015455114541544101455154451541510405154110x2ECAB2B0CA2BCAE3A8BE3A8F30F8EA2B8EE2B8CC2F8AB2B8EE3A8EC32CEA2FCFB2BCEA3B0CA3A8AA0x344D13084C0D84501C00164592041401C4711CA62143D110741D07A1A05334001350341D80C050210x3049C114CB1840D3002C054A62ACD50BC061C4161C48C018F019C1109C183388B37827044CD254010x154550100515411154551441011455114551504114415150551544405411150411441511005154550x2B8AA3D80A3A8AB3E8BE2E8982B8FA2A8BA2AC633ACAA2E8AB2A8B60F8BA2A8FA2ECEA2D80B3A8BF0x190BC280CC0502009C513000311C03034923C80C1C41E040D90BC2031C11390431442F040E814CD00x248590A04D254022507B28821018E8138491908708C19120E4258481C831240532045612067060CE"),
            .INIT_VALUE_27("0x110051505014015154410540515014154550545505405054541141015454150511145010455144510x28C041A8EA0701B2ECB12A8AA3DC2F1A8C90A8BE2ECAF2B8AB3A88C2A8FA3B8AB3B8AF0C8AB3ACBA0x1183901070320A4050C202805008342EC9C0C0D9050000C8F11040C30C6414070014950CC0D244410x10C1D050200B0B733853050050CC013D04E0B4840DC0B00464018342D8103700230456348D810C700x150010545414005154101545515014044450545411455144541541015451054551541010455110550x2AC052B8AB1B09B2A8D92EC1B3AC2F1A8A80ACAA2BCAF2ACAB3ACC82B8AA2FCAB3ACAF088BA2A8FE0x0302808C0E1C0280306216489130C02C00D0C05020054304650707030442008750700130C05020090x3542F008D215033164331804015453384400D8540281E0405635820364500A4472E82920C65100A50x144111145411055054041145504414014550545514451154441541415455114541544010455154150x2F4292B8BA1D0AA2ACDA3B84E2B42B2ACA00BCAA3ACBB2E8EA2B8CC2F8AB2B8EE3A8EB0C8FA2B8BB0x0483C12C0C020E10642C11864048BE014E12844F144D111C00104622143D110741D0702A8143D4110x31C1B11C603B07D010F41045105C9F0183C27063004811B8881E4921C48C018F019C12124C60C01B0x140051545510011114001444114014150501504515455154501544114415150551544101444154510x2B4303F8F10D0EA2B4CF2EC2A2B4AB3F8A83E8EA2B8AE2A8BB1A4633ACAA2E8AB2A8BD23CAE2A8EA0x008041181112000010B2304411C8EC1104307047210243341E1F00C1C41E040D90BC180C4C41E0430x17C012C4C41F03310CD20CCC013C950D071320C614852064C60B08708C19120E42586A0708C19423"),
            .INIT_VALUE_28("0x154051540410000000000000515450154501000000000000541540400000010040545505454004150x3C8CE2A8AE23CFF3FCFF3FCCA2B8AA2B84C2FCFF3FCFF3F0AA2B8C62A8AA2AC222E8EE2A4843EC8A0x038C93440430CFF3FCFF3FC8F1E4703E4383FCFF3FCFF3E0D834C0B3FCFF3F00405C260D4F4084280x29447274000045515455154C6104600948C1545515455170741E44D154551540C010D10D8700801F0x144051445511000000000040115455154500000000000040151504000000004011541115044110540x1AC8A2ECAF21CFF3FCFF3F8EE0C82F2B02C3FCFF3FCFF3B0EB2AC462A8AA2B40A2ACBB2B8A01B80A0x1C027300F112CFF3FCFF3FC01110403CC700FCFF3FCFF3C0321C4AB3FCFF3D821344101508C2D0400x0C826388BC13455154551544301C1A3E414054551545515025190ED1545514C21264020904C3801C0x054051545510000000000004504415150441000000000010551501000000000151445511444054550x2B4EA3FCFA11CFF3FCFF3FC462A8BA328341FCFF3FCFF3D06F0BC6A2A8AA2B4062E8BB2A8F01B80B0x0D00A000540ACFF3FCFF3F4AA0C81D030582FCFF3FCFF360A0390BF3FCFF3C82220C4533C6C2CC540x0400D0B0473B45515455150ED0442D2F00C3545515455130DA14CD51545517C101CCFD200283F8670x150011504504000000000000115455110400000000000000150500000000000150145515451054450x3A82A3B8660BCFF3FCFF3FC672BCCA3AC741FCFF3FCFF3D0662DC3A2A8AA2B0132A8AA3E8C22282B0x270E10C8053FCFF3FCFF3F088104471340A2FCFF3FCFF328B7048CF3FCFF3EC19018DD1001F0DCC80x160503F081154551545515CCF178180103E35455154551F8E303C451545517414000981D41509C03"),
            .INIT_VALUE_29("0x000000000000000000000000000000000000000000000000000000000000054501545414055154550x0000000000000000000000000000000000000000000000000000000000002BCB22ECAA2B0AB2C8A60x00000000000000000000000000000000000000000000000000000000000038050104583F0E4000D20x000000000000000000000000000000000000000000000000000000000000260201F034190961D49D0x000000000000000000000000000000000000000000000000000000000000144511545514055144510x0000000000000000000000000000000000000000000000000000000000002A8A32C8AB2E0A21A0AA0x00000000000000000000000000000000000000000000000000000000000014CB0200F2148F5044130x000000000000000000000000000000000000000000000000000000000000048630D4A5148E1040720x000000000000000000000000000000000000000000000000000000000000154511445514051050150x0000000000000000000000000000000000000000000000000000000000002B8820A0AF078AB2A8AA0x000000000000000000000000000000000000000000000000000000000000118E204420300A1000060x0000000000000000000000000000000000000000000000000000000000001C4133405A190500D01D0x000000000000000000000000000000000000000000000000000000000000150410501500455154550x0000000000000000000000000000000000000000000000000000000000003B8822A8A628CEB3B8FA0x00000000000000000000000000000000000000000000000000000000000215038000370305D0141C0x0000000000000000000000000000000000000000000000000000000000022505B0D02301C283C0C9"),
            .INIT_VALUE_2A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_30("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_31("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_32("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_33("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_34("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_35("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_36("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_37("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_38("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_39("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_40("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_41("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_42("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_43("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_44("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_45("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_46("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_47("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_48("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_49("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_50("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_51("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_52("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_53("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_54("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_55("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_56("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_57("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_58("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_59("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_60("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_61("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_62("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_63("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_64("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_65("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_66("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_67("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_68("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_69("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_70("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_71("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_72("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_73("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_74("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_75("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_76("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_77("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_78("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_79("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) lscc_ram_dp_true_inst (.clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .wr_data_a_i(wr_data_a_i[31:0]), 
                .addr_a_i(addr_a_i[13:0]), 
                .rd_data_a_o(rd_data_a_o[31:0]), 
                .wr_data_b_i(wr_data_b_i[31:0]), 
                .addr_b_i(addr_b_i[13:0]), 
                .ben_a_i(ben_a_i[3:0]), 
                .ben_b_i(ben_b_i[3:0]), 
                .rd_data_b_o(rd_data_b_o[31:0]), 
                .ecc_one_err_a_o(), 
                .ecc_two_err_a_o(), 
                .ecc_one_err_b_o(), 
                .ecc_two_err_b_o()) ; 
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2023 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem0_ipgen_lscc_ram_dp_true #(parameter FAMILY = "common", 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_DATA_TYPE = 1, 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = 9, 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter WRITE_MODE_A = "normal", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = 9, 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter WRITE_MODE_B = "normal", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "36,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    localparam T_FAMILY = ((((((FAMILY == "LFD2NX") || (FAMILY == "LFCPNX")) || (FAMILY == "LFMXO5")) || (FAMILY == "UT24C")) || (FAMILY == "UT24CP")) ? "LIFCL" : FAMILY) ; 
    localparam INIT_DATA = ((INIT_DATA_TYPE == 0) ? "STATIC" : "DYNAMIC") ; 
    eval_mem0_ipgen_lscc_ram_dp_true_main #(.FAMILY(T_FAMILY),
            .ADDR_DEPTH_A(ADDR_DEPTH_A),
            .ADDR_WIDTH_A(ADDR_WIDTH_A),
            .DATA_WIDTH_A(DATA_WIDTH_A),
            .ADDR_DEPTH_B(ADDR_DEPTH_B),
            .ADDR_WIDTH_B(ADDR_WIDTH_B),
            .DATA_WIDTH_B(DATA_WIDTH_B),
            .REGMODE_A(REGMODE_A),
            .REGMODE_B(REGMODE_B),
            .GSR(GSR),
            .RESETMODE_A(RESETMODE_A),
            .RESETMODE_B(RESETMODE_B),
            .RESET_RELEASE_A(RESET_RELEASE_A),
            .RESET_RELEASE_B(RESET_RELEASE_B),
            .INIT_FILE(INIT_FILE),
            .INIT_FILE_FORMAT(INIT_FILE_FORMAT),
            .MODULE_TYPE(MODULE_TYPE),
            .INIT_DATA(INIT_DATA),
            .INIT_MODE(INIT_MODE),
            .BYTE_ENABLE_A(BYTE_ENABLE_A),
            .BYTE_SIZE_A(BYTE_SIZE_A),
            .BYTE_WIDTH_A(BYTE_WIDTH_A),
            .BYTE_EN_POL_A(BYTE_EN_POL_A),
            .WRITE_MODE_A(WRITE_MODE_A),
            .BYTE_ENABLE_B(BYTE_ENABLE_B),
            .BYTE_SIZE_B(BYTE_SIZE_B),
            .BYTE_WIDTH_B(BYTE_WIDTH_B),
            .BYTE_EN_POL_B(BYTE_EN_POL_B),
            .WRITE_MODE_B(WRITE_MODE_B),
            .PIPELINES(PIPELINES),
            .ECC_ENABLE(ECC_ENABLE),
            .MEM_ID(MEM_ID),
            .MEM_SIZE(MEM_SIZE),
            .INIT_VALUE_00(INIT_VALUE_00),
            .INIT_VALUE_01(INIT_VALUE_01),
            .INIT_VALUE_02(INIT_VALUE_02),
            .INIT_VALUE_03(INIT_VALUE_03),
            .INIT_VALUE_04(INIT_VALUE_04),
            .INIT_VALUE_05(INIT_VALUE_05),
            .INIT_VALUE_06(INIT_VALUE_06),
            .INIT_VALUE_07(INIT_VALUE_07),
            .INIT_VALUE_08(INIT_VALUE_08),
            .INIT_VALUE_09(INIT_VALUE_09),
            .INIT_VALUE_0A(INIT_VALUE_0A),
            .INIT_VALUE_0B(INIT_VALUE_0B),
            .INIT_VALUE_0C(INIT_VALUE_0C),
            .INIT_VALUE_0D(INIT_VALUE_0D),
            .INIT_VALUE_0E(INIT_VALUE_0E),
            .INIT_VALUE_0F(INIT_VALUE_0F),
            .INIT_VALUE_10(INIT_VALUE_10),
            .INIT_VALUE_11(INIT_VALUE_11),
            .INIT_VALUE_12(INIT_VALUE_12),
            .INIT_VALUE_13(INIT_VALUE_13),
            .INIT_VALUE_14(INIT_VALUE_14),
            .INIT_VALUE_15(INIT_VALUE_15),
            .INIT_VALUE_16(INIT_VALUE_16),
            .INIT_VALUE_17(INIT_VALUE_17),
            .INIT_VALUE_18(INIT_VALUE_18),
            .INIT_VALUE_19(INIT_VALUE_19),
            .INIT_VALUE_1A(INIT_VALUE_1A),
            .INIT_VALUE_1B(INIT_VALUE_1B),
            .INIT_VALUE_1C(INIT_VALUE_1C),
            .INIT_VALUE_1D(INIT_VALUE_1D),
            .INIT_VALUE_1E(INIT_VALUE_1E),
            .INIT_VALUE_1F(INIT_VALUE_1F),
            .INIT_VALUE_20(INIT_VALUE_20),
            .INIT_VALUE_21(INIT_VALUE_21),
            .INIT_VALUE_22(INIT_VALUE_22),
            .INIT_VALUE_23(INIT_VALUE_23),
            .INIT_VALUE_24(INIT_VALUE_24),
            .INIT_VALUE_25(INIT_VALUE_25),
            .INIT_VALUE_26(INIT_VALUE_26),
            .INIT_VALUE_27(INIT_VALUE_27),
            .INIT_VALUE_28(INIT_VALUE_28),
            .INIT_VALUE_29(INIT_VALUE_29),
            .INIT_VALUE_2A(INIT_VALUE_2A),
            .INIT_VALUE_2B(INIT_VALUE_2B),
            .INIT_VALUE_2C(INIT_VALUE_2C),
            .INIT_VALUE_2D(INIT_VALUE_2D),
            .INIT_VALUE_2E(INIT_VALUE_2E),
            .INIT_VALUE_2F(INIT_VALUE_2F),
            .INIT_VALUE_30(INIT_VALUE_30),
            .INIT_VALUE_31(INIT_VALUE_31),
            .INIT_VALUE_32(INIT_VALUE_32),
            .INIT_VALUE_33(INIT_VALUE_33),
            .INIT_VALUE_34(INIT_VALUE_34),
            .INIT_VALUE_35(INIT_VALUE_35),
            .INIT_VALUE_36(INIT_VALUE_36),
            .INIT_VALUE_37(INIT_VALUE_37),
            .INIT_VALUE_38(INIT_VALUE_38),
            .INIT_VALUE_39(INIT_VALUE_39),
            .INIT_VALUE_3A(INIT_VALUE_3A),
            .INIT_VALUE_3B(INIT_VALUE_3B),
            .INIT_VALUE_3C(INIT_VALUE_3C),
            .INIT_VALUE_3D(INIT_VALUE_3D),
            .INIT_VALUE_3E(INIT_VALUE_3E),
            .INIT_VALUE_3F(INIT_VALUE_3F),
            .INIT_VALUE_40(INIT_VALUE_40),
            .INIT_VALUE_41(INIT_VALUE_41),
            .INIT_VALUE_42(INIT_VALUE_42),
            .INIT_VALUE_43(INIT_VALUE_43),
            .INIT_VALUE_44(INIT_VALUE_44),
            .INIT_VALUE_45(INIT_VALUE_45),
            .INIT_VALUE_46(INIT_VALUE_46),
            .INIT_VALUE_47(INIT_VALUE_47),
            .INIT_VALUE_48(INIT_VALUE_48),
            .INIT_VALUE_49(INIT_VALUE_49),
            .INIT_VALUE_4A(INIT_VALUE_4A),
            .INIT_VALUE_4B(INIT_VALUE_4B),
            .INIT_VALUE_4C(INIT_VALUE_4C),
            .INIT_VALUE_4D(INIT_VALUE_4D),
            .INIT_VALUE_4E(INIT_VALUE_4E),
            .INIT_VALUE_4F(INIT_VALUE_4F),
            .INIT_VALUE_50(INIT_VALUE_50),
            .INIT_VALUE_51(INIT_VALUE_51),
            .INIT_VALUE_52(INIT_VALUE_52),
            .INIT_VALUE_53(INIT_VALUE_53),
            .INIT_VALUE_54(INIT_VALUE_54),
            .INIT_VALUE_55(INIT_VALUE_55),
            .INIT_VALUE_56(INIT_VALUE_56),
            .INIT_VALUE_57(INIT_VALUE_57),
            .INIT_VALUE_58(INIT_VALUE_58),
            .INIT_VALUE_59(INIT_VALUE_59),
            .INIT_VALUE_5A(INIT_VALUE_5A),
            .INIT_VALUE_5B(INIT_VALUE_5B),
            .INIT_VALUE_5C(INIT_VALUE_5C),
            .INIT_VALUE_5D(INIT_VALUE_5D),
            .INIT_VALUE_5E(INIT_VALUE_5E),
            .INIT_VALUE_5F(INIT_VALUE_5F),
            .INIT_VALUE_60(INIT_VALUE_60),
            .INIT_VALUE_61(INIT_VALUE_61),
            .INIT_VALUE_62(INIT_VALUE_62),
            .INIT_VALUE_63(INIT_VALUE_63),
            .INIT_VALUE_64(INIT_VALUE_64),
            .INIT_VALUE_65(INIT_VALUE_65),
            .INIT_VALUE_66(INIT_VALUE_66),
            .INIT_VALUE_67(INIT_VALUE_67),
            .INIT_VALUE_68(INIT_VALUE_68),
            .INIT_VALUE_69(INIT_VALUE_69),
            .INIT_VALUE_6A(INIT_VALUE_6A),
            .INIT_VALUE_6B(INIT_VALUE_6B),
            .INIT_VALUE_6C(INIT_VALUE_6C),
            .INIT_VALUE_6D(INIT_VALUE_6D),
            .INIT_VALUE_6E(INIT_VALUE_6E),
            .INIT_VALUE_6F(INIT_VALUE_6F),
            .INIT_VALUE_70(INIT_VALUE_70),
            .INIT_VALUE_71(INIT_VALUE_71),
            .INIT_VALUE_72(INIT_VALUE_72),
            .INIT_VALUE_73(INIT_VALUE_73),
            .INIT_VALUE_74(INIT_VALUE_74),
            .INIT_VALUE_75(INIT_VALUE_75),
            .INIT_VALUE_76(INIT_VALUE_76),
            .INIT_VALUE_77(INIT_VALUE_77),
            .INIT_VALUE_78(INIT_VALUE_78),
            .INIT_VALUE_79(INIT_VALUE_79),
            .INIT_VALUE_7A(INIT_VALUE_7A),
            .INIT_VALUE_7B(INIT_VALUE_7B),
            .INIT_VALUE_7C(INIT_VALUE_7C),
            .INIT_VALUE_7D(INIT_VALUE_7D),
            .INIT_VALUE_7E(INIT_VALUE_7E),
            .INIT_VALUE_7F(INIT_VALUE_7F)) mem_main (.addr_a_i(addr_a_i), 
                .addr_b_i(addr_b_i), 
                .wr_data_a_i(wr_data_a_i), 
                .wr_data_b_i(wr_data_b_i), 
                .clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .ben_a_i(ben_a_i), 
                .ben_b_i(ben_b_i), 
                .rd_data_a_o(rd_data_a_o), 
                .rd_data_b_o(rd_data_b_o), 
                .ecc_one_err_a_o(ecc_one_err_a_o), 
                .ecc_two_err_a_o(ecc_two_err_a_o), 
                .ecc_one_err_b_o(ecc_one_err_b_o), 
                .ecc_two_err_b_o(ecc_two_err_b_o)) ; 
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [31:0] getByteSize ; 
        input [31:0] data_width ; 
        input [31:0] dev_code ; 
        reg dev_code_fam ; 
        begin
            if ((((((((((((dev_code == "LFD2NX") || (dev_code == "LFCPNX")) || (dev_code == "LFMXO5")) || (dev_code == "UT24C")) || (dev_code == "UT24CP")) || (dev_code == "LIFCL")) || (dev_code == "ap6a400")) || (dev_code == "ap6a00b")) || (dev_code == "ap6a00")) || (dev_code == "LATG1")) || (dev_code == "LAV-AT"))) 
                begin
                    dev_code_fam = 1 ;
                end
            else
                begin
                    dev_code_fam = 0 ;
                end
            case (dev_code_fam)
            1 : 
                begin
                    if (((data_width % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2023 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_main.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem0_ipgen_lscc_ram_dp_true_main #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "ap6a400") ? _FCODE_AP6_ : ((FAMILY == "ap6a00b") ? _FCODE_AP6_ : ((FAMILY == "ap6a00") ? _FCODE_AP6_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_)))))), 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_DATA = "DYNAMIC", 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter WRITE_MODE_A = "normal", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter WRITE_MODE_B = "normal", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    wire [(DATA_WIDTH_A - 1):0] mem_out_a_w ; 
    wire [(DATA_WIDTH_B - 1):0] mem_out_b_w ; 
    eval_mem0_ipgen_lscc_write_through #(.FAMILY(FAMILY),
            .DATA_WIDTH(DATA_WIDTH_A),
            .REGMODE(REGMODE_A),
            .WRITE_MODE(WRITE_MODE_A)) inst_wr_a (.clk_i(clk_a_i), 
                .clk_en_i(clk_en_a_i), 
                .wr_en_i(wr_en_a_i), 
                .rst_i(rst_a_i), 
                .wr_data_i(wr_data_a_i), 
                .mem_out_i(mem_out_a_w), 
                .rd_data_o(rd_data_a_o)) ; 
    eval_mem0_ipgen_lscc_write_through #(.FAMILY(FAMILY),
            .DATA_WIDTH(DATA_WIDTH_B),
            .REGMODE(REGMODE_B),
            .WRITE_MODE(WRITE_MODE_B)) inst_wr_b (.clk_i(clk_b_i), 
                .clk_en_i(clk_en_b_i), 
                .wr_en_i(wr_en_b_i), 
                .rst_i(rst_b_i), 
                .wr_data_i(wr_data_b_i), 
                .mem_out_i(mem_out_b_w), 
                .rd_data_o(rd_data_b_o)) ; 
    localparam T_REG_MODE_A = ((WRITE_MODE_A == "write-through") ? "noreg" : REGMODE_A) ; 
    localparam T_REG_MODE_B = ((WRITE_MODE_B == "write-through") ? "noreg" : REGMODE_B) ; 
    eval_mem0_ipgen_lscc_ram_dp_true_inst #(.FAMILY(FAMILY),
            .ADDR_DEPTH_A(ADDR_DEPTH_A),
            .ADDR_WIDTH_A(ADDR_WIDTH_A),
            .DATA_WIDTH_A(DATA_WIDTH_A),
            .ADDR_DEPTH_B(ADDR_DEPTH_B),
            .ADDR_WIDTH_B(ADDR_WIDTH_B),
            .DATA_WIDTH_B(DATA_WIDTH_B),
            .REGMODE_A(T_REG_MODE_A),
            .REGMODE_B(T_REG_MODE_B),
            .GSR(GSR),
            .RESETMODE_A(RESETMODE_A),
            .RESETMODE_B(RESETMODE_B),
            .RESET_RELEASE_A(RESET_RELEASE_A),
            .RESET_RELEASE_B(RESET_RELEASE_B),
            .INIT_FILE(INIT_FILE),
            .INIT_FILE_FORMAT(INIT_FILE_FORMAT),
            .MODULE_TYPE(MODULE_TYPE),
            .INIT_DATA(INIT_DATA),
            .INIT_MODE(INIT_MODE),
            .BYTE_ENABLE_A(BYTE_ENABLE_A),
            .BYTE_SIZE_A(BYTE_SIZE_A),
            .BYTE_WIDTH_A(BYTE_WIDTH_A),
            .BYTE_EN_POL_A(BYTE_EN_POL_A),
            .BYTE_ENABLE_B(BYTE_ENABLE_B),
            .BYTE_SIZE_B(BYTE_SIZE_B),
            .BYTE_WIDTH_B(BYTE_WIDTH_B),
            .BYTE_EN_POL_B(BYTE_EN_POL_B),
            .PIPELINES(PIPELINES),
            .ECC_ENABLE(ECC_ENABLE),
            .MEM_ID(MEM_ID),
            .MEM_SIZE(MEM_SIZE),
            .INIT_VALUE_00(INIT_VALUE_00),
            .INIT_VALUE_01(INIT_VALUE_01),
            .INIT_VALUE_02(INIT_VALUE_02),
            .INIT_VALUE_03(INIT_VALUE_03),
            .INIT_VALUE_04(INIT_VALUE_04),
            .INIT_VALUE_05(INIT_VALUE_05),
            .INIT_VALUE_06(INIT_VALUE_06),
            .INIT_VALUE_07(INIT_VALUE_07),
            .INIT_VALUE_08(INIT_VALUE_08),
            .INIT_VALUE_09(INIT_VALUE_09),
            .INIT_VALUE_0A(INIT_VALUE_0A),
            .INIT_VALUE_0B(INIT_VALUE_0B),
            .INIT_VALUE_0C(INIT_VALUE_0C),
            .INIT_VALUE_0D(INIT_VALUE_0D),
            .INIT_VALUE_0E(INIT_VALUE_0E),
            .INIT_VALUE_0F(INIT_VALUE_0F),
            .INIT_VALUE_10(INIT_VALUE_10),
            .INIT_VALUE_11(INIT_VALUE_11),
            .INIT_VALUE_12(INIT_VALUE_12),
            .INIT_VALUE_13(INIT_VALUE_13),
            .INIT_VALUE_14(INIT_VALUE_14),
            .INIT_VALUE_15(INIT_VALUE_15),
            .INIT_VALUE_16(INIT_VALUE_16),
            .INIT_VALUE_17(INIT_VALUE_17),
            .INIT_VALUE_18(INIT_VALUE_18),
            .INIT_VALUE_19(INIT_VALUE_19),
            .INIT_VALUE_1A(INIT_VALUE_1A),
            .INIT_VALUE_1B(INIT_VALUE_1B),
            .INIT_VALUE_1C(INIT_VALUE_1C),
            .INIT_VALUE_1D(INIT_VALUE_1D),
            .INIT_VALUE_1E(INIT_VALUE_1E),
            .INIT_VALUE_1F(INIT_VALUE_1F),
            .INIT_VALUE_20(INIT_VALUE_20),
            .INIT_VALUE_21(INIT_VALUE_21),
            .INIT_VALUE_22(INIT_VALUE_22),
            .INIT_VALUE_23(INIT_VALUE_23),
            .INIT_VALUE_24(INIT_VALUE_24),
            .INIT_VALUE_25(INIT_VALUE_25),
            .INIT_VALUE_26(INIT_VALUE_26),
            .INIT_VALUE_27(INIT_VALUE_27),
            .INIT_VALUE_28(INIT_VALUE_28),
            .INIT_VALUE_29(INIT_VALUE_29),
            .INIT_VALUE_2A(INIT_VALUE_2A),
            .INIT_VALUE_2B(INIT_VALUE_2B),
            .INIT_VALUE_2C(INIT_VALUE_2C),
            .INIT_VALUE_2D(INIT_VALUE_2D),
            .INIT_VALUE_2E(INIT_VALUE_2E),
            .INIT_VALUE_2F(INIT_VALUE_2F),
            .INIT_VALUE_30(INIT_VALUE_30),
            .INIT_VALUE_31(INIT_VALUE_31),
            .INIT_VALUE_32(INIT_VALUE_32),
            .INIT_VALUE_33(INIT_VALUE_33),
            .INIT_VALUE_34(INIT_VALUE_34),
            .INIT_VALUE_35(INIT_VALUE_35),
            .INIT_VALUE_36(INIT_VALUE_36),
            .INIT_VALUE_37(INIT_VALUE_37),
            .INIT_VALUE_38(INIT_VALUE_38),
            .INIT_VALUE_39(INIT_VALUE_39),
            .INIT_VALUE_3A(INIT_VALUE_3A),
            .INIT_VALUE_3B(INIT_VALUE_3B),
            .INIT_VALUE_3C(INIT_VALUE_3C),
            .INIT_VALUE_3D(INIT_VALUE_3D),
            .INIT_VALUE_3E(INIT_VALUE_3E),
            .INIT_VALUE_3F(INIT_VALUE_3F),
            .INIT_VALUE_40(INIT_VALUE_40),
            .INIT_VALUE_41(INIT_VALUE_41),
            .INIT_VALUE_42(INIT_VALUE_42),
            .INIT_VALUE_43(INIT_VALUE_43),
            .INIT_VALUE_44(INIT_VALUE_44),
            .INIT_VALUE_45(INIT_VALUE_45),
            .INIT_VALUE_46(INIT_VALUE_46),
            .INIT_VALUE_47(INIT_VALUE_47),
            .INIT_VALUE_48(INIT_VALUE_48),
            .INIT_VALUE_49(INIT_VALUE_49),
            .INIT_VALUE_4A(INIT_VALUE_4A),
            .INIT_VALUE_4B(INIT_VALUE_4B),
            .INIT_VALUE_4C(INIT_VALUE_4C),
            .INIT_VALUE_4D(INIT_VALUE_4D),
            .INIT_VALUE_4E(INIT_VALUE_4E),
            .INIT_VALUE_4F(INIT_VALUE_4F),
            .INIT_VALUE_50(INIT_VALUE_50),
            .INIT_VALUE_51(INIT_VALUE_51),
            .INIT_VALUE_52(INIT_VALUE_52),
            .INIT_VALUE_53(INIT_VALUE_53),
            .INIT_VALUE_54(INIT_VALUE_54),
            .INIT_VALUE_55(INIT_VALUE_55),
            .INIT_VALUE_56(INIT_VALUE_56),
            .INIT_VALUE_57(INIT_VALUE_57),
            .INIT_VALUE_58(INIT_VALUE_58),
            .INIT_VALUE_59(INIT_VALUE_59),
            .INIT_VALUE_5A(INIT_VALUE_5A),
            .INIT_VALUE_5B(INIT_VALUE_5B),
            .INIT_VALUE_5C(INIT_VALUE_5C),
            .INIT_VALUE_5D(INIT_VALUE_5D),
            .INIT_VALUE_5E(INIT_VALUE_5E),
            .INIT_VALUE_5F(INIT_VALUE_5F),
            .INIT_VALUE_60(INIT_VALUE_60),
            .INIT_VALUE_61(INIT_VALUE_61),
            .INIT_VALUE_62(INIT_VALUE_62),
            .INIT_VALUE_63(INIT_VALUE_63),
            .INIT_VALUE_64(INIT_VALUE_64),
            .INIT_VALUE_65(INIT_VALUE_65),
            .INIT_VALUE_66(INIT_VALUE_66),
            .INIT_VALUE_67(INIT_VALUE_67),
            .INIT_VALUE_68(INIT_VALUE_68),
            .INIT_VALUE_69(INIT_VALUE_69),
            .INIT_VALUE_6A(INIT_VALUE_6A),
            .INIT_VALUE_6B(INIT_VALUE_6B),
            .INIT_VALUE_6C(INIT_VALUE_6C),
            .INIT_VALUE_6D(INIT_VALUE_6D),
            .INIT_VALUE_6E(INIT_VALUE_6E),
            .INIT_VALUE_6F(INIT_VALUE_6F),
            .INIT_VALUE_70(INIT_VALUE_70),
            .INIT_VALUE_71(INIT_VALUE_71),
            .INIT_VALUE_72(INIT_VALUE_72),
            .INIT_VALUE_73(INIT_VALUE_73),
            .INIT_VALUE_74(INIT_VALUE_74),
            .INIT_VALUE_75(INIT_VALUE_75),
            .INIT_VALUE_76(INIT_VALUE_76),
            .INIT_VALUE_77(INIT_VALUE_77),
            .INIT_VALUE_78(INIT_VALUE_78),
            .INIT_VALUE_79(INIT_VALUE_79),
            .INIT_VALUE_7A(INIT_VALUE_7A),
            .INIT_VALUE_7B(INIT_VALUE_7B),
            .INIT_VALUE_7C(INIT_VALUE_7C),
            .INIT_VALUE_7D(INIT_VALUE_7D),
            .INIT_VALUE_7E(INIT_VALUE_7E),
            .INIT_VALUE_7F(INIT_VALUE_7F)) uinst_0 (.addr_a_i(addr_a_i), 
                .addr_b_i(addr_b_i), 
                .wr_data_a_i(wr_data_a_i), 
                .wr_data_b_i(wr_data_b_i), 
                .clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .ben_a_i(ben_a_i), 
                .ben_b_i(ben_b_i), 
                .rd_data_a_o(mem_out_a_w), 
                .rd_data_b_o(mem_out_b_w), 
                .ecc_one_err_a_o(ecc_one_err_a_o), 
                .ecc_two_err_a_o(ecc_two_err_a_o), 
                .ecc_one_err_b_o(ecc_one_err_b_o), 
                .ecc_two_err_b_o(ecc_two_err_b_o)) ; 
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [31:0] getByteSize ; 
        input [31:0] data_width ; 
        input [31:0] dev_code ; 
        begin
            case (dev_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((data_width % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
endmodule



module eval_mem0_ipgen_lscc_write_through #(parameter FAMILY = "common", 
        parameter DATA_WIDTH = 36, 
        parameter REGMODE = "noreg", 
        parameter WRITE_MODE = "normal") (
    input clk_i, 
    input clk_en_i, 
    input wr_en_i, 
    input rst_i, 
    input [(DATA_WIDTH - 1):0] wr_data_i, 
    input [(DATA_WIDTH - 1):0] mem_out_i, 
    output [(DATA_WIDTH - 1):0] rd_data_o) ;
    if ((WRITE_MODE == "write-through")) 
        begin : WRITE_THROUGH
            reg [(DATA_WIDTH - 1):0] wr_data_p_r ; 
            reg wr_en_p_r ; 
            always
                @(posedge clk_i or 
                    posedge rst_i)
                begin
                    if (rst_i) 
                        begin
                            wr_data_p_r <=  {DATA_WIDTH{1'b0}} ;
                            wr_en_p_r <=  1'b0 ;
                        end
                    else
                        begin
                            wr_data_p_r <=  wr_data_i ;
                            wr_en_p_r <=  wr_en_i ;
                        end
                end
            if ((REGMODE == "noreg")) 
                begin : _NoRegMode
                    assign rd_data_o = (wr_en_p_r ? wr_data_p_r : mem_out_i) ; 
                end
            else
                begin : _RegMode
                    reg [(DATA_WIDTH - 1):0] rd_data_r ; 
                    wire [(DATA_WIDTH - 1):0] rd_data_nxt_w = (wr_en_p_r ? wr_data_p_r : mem_out_i) ; 
                    assign rd_data_o = rd_data_r ; 
                    always
                        @(posedge clk_i or 
                            posedge rst_i)
                        begin
                            if (rst_i) 
                                begin
                                    rd_data_r <=  {DATA_WIDTH{1'b0}} ;
                                end
                            else
                                begin
                                    rd_data_r <=  rd_data_nxt_w ;
                                end
                        end
                end
        end
    else
        begin : NORMAL
            assign rd_data_o = mem_out_i ; 
        end
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2023 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_inst.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem0_ipgen_lscc_ram_dp_true_inst #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "ap6a400") ? _FCODE_AP6_ : ((FAMILY == "ap6a00b") ? _FCODE_AP6_ : ((FAMILY == "ap6a00") ? _FCODE_AP6_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_)))))), 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_DATA = "DYNAMIC", 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    localparam STRING_LENGTH = 82 ; 
    genvar i0, 
        i1 ; 
    generate
        if ((FAMILY == "common")) 
            begin : behavioral
                (* syn_ramstyle="block_ram" *) reg [(DATA_WIDTH_A - 1):0] mem [((2 ** ADDR_WIDTH_A) - 1):0] ; 
                integer mem_i0 ; 
                initial
                    begin
                        if (((INIT_MODE == "mem_file") && (INIT_FILE != "none"))) 
                            begin
                                if ((INIT_FILE_FORMAT == "hex")) 
                                    begin
                                        $readmemh (INIT_FILE,
                                                mem,
                                                0,
                                                (ADDR_DEPTH_A - 1)) ;
                                    end
                                else
                                    begin
                                        $readmemb (INIT_FILE,
                                                mem,
                                                0,
                                                (ADDR_DEPTH_A - 1)) ;
                                    end
                            end
                    end
                reg [(DATA_WIDTH_A - 1):0] dataout_reg_a_r = {DATA_WIDTH_A{1'b0}} ; 
                reg [(DATA_WIDTH_A - 1):0] dataout_reg_buff_a_r = {DATA_WIDTH_A{1'b0}} ; 
                assign rd_data_a_o = ((REGMODE_A == "reg") ? dataout_reg_a_r : dataout_reg_buff_a_r) ; 
                always
                    @(posedge clk_a_i)
                    begin
                        if ((clk_en_a_i == 1'b1)) 
                            begin
                                if ((wr_en_a_i == 1'b1)) 
                                    begin
                                        mem[addr_a_i] <=  wr_data_a_i ;
                                    end
                                else
                                    begin
                                        dataout_reg_buff_a_r <=  mem[addr_a_i] ;
                                    end
                            end
                    end
                if ((REGMODE_A == "reg")) 
                    begin : _reg_a
                        if ((RESETMODE_A == "sync")) 
                            begin : _sync_rst_a
                                always
                                    @(posedge clk_a_i)
                                    begin
                                        if ((rst_a_i == 1'b1)) 
                                            begin
                                                dataout_reg_a_r <=  'h0 ;
                                            end
                                        else
                                            if ((wr_en_a_i == 1'b0)) 
                                                begin
                                                    dataout_reg_a_r <=  dataout_reg_buff_a_r ;
                                                end
                                    end
                            end
                        else
                            if ((RESET_RELEASE_A == "sync")) 
                                begin : _sync_rel_a
                                    always
                                        @(posedge clk_a_i or 
                                            posedge rst_a_i)
                                        begin
                                            if ((rst_a_i == 1'b1)) 
                                                begin
                                                    dataout_reg_a_r <=  'h0 ;
                                                end
                                            else
                                                if ((wr_en_a_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_a_r <=  dataout_reg_buff_a_r ;
                                                    end
                                        end
                                end
                            else
                                begin : _async_rel_a
                                    reg [(DATA_WIDTH_A - 1):0] dataout_reg_a_buffered_r = {DATA_WIDTH_A{1'b0}} ; 
                                    always
                                        @(*)
                                        begin
                                            if ((rst_a_i == 1'b1)) 
                                                begin
                                                    dataout_reg_a_r = 'h0 ;
                                                end
                                            else
                                                if ((wr_en_a_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_a_r = dataout_reg_a_buffered_r ;
                                                    end
                                        end
                                    always
                                        @(posedge clk_a_i)
                                        begin
                                            dataout_reg_a_buffered_r <=  dataout_reg_buff_a_r ;
                                        end
                                end
                    end
                reg [(DATA_WIDTH_B - 1):0] dataout_reg_b_r = {DATA_WIDTH_B{1'b0}} ; 
                reg [(DATA_WIDTH_B - 1):0] dataout_reg_buff_b_r = {DATA_WIDTH_B{1'b0}} ; 
                assign rd_data_b_o = ((REGMODE_B == "reg") ? dataout_reg_b_r : dataout_reg_buff_b_r) ; 
                always
                    @(posedge clk_b_i)
                    begin
                        if ((clk_en_b_i == 1'b1)) 
                            begin
                                if ((wr_en_b_i == 1'b1)) 
                                    begin
                                        mem[addr_b_i] <=  wr_data_b_i ;
                                    end
                                else
                                    begin
                                        dataout_reg_buff_b_r <=  mem[addr_b_i] ;
                                    end
                            end
                    end
                if ((REGMODE_B == "reg")) 
                    begin : _reg_b
                        if ((RESETMODE_B == "sync")) 
                            begin : _sync_rst_b
                                always
                                    @(posedge clk_b_i)
                                    begin
                                        if ((rst_b_i == 1'b1)) 
                                            begin
                                                dataout_reg_b_r <=  'h0 ;
                                            end
                                        else
                                            if ((wr_en_b_i == 1'b0)) 
                                                begin
                                                    dataout_reg_b_r <=  dataout_reg_buff_b_r ;
                                                end
                                    end
                            end
                        else
                            if ((RESET_RELEASE_B == "sync")) 
                                begin : _sync_rel_b
                                    always
                                        @(posedge clk_b_i or 
                                            posedge rst_b_i)
                                        begin
                                            if ((rst_b_i == 1'b1)) 
                                                begin
                                                    dataout_reg_b_r <=  'h0 ;
                                                end
                                            else
                                                if ((wr_en_b_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_b_r <=  dataout_reg_buff_b_r ;
                                                    end
                                        end
                                end
                            else
                                begin : _async_rel_b
                                    reg [(DATA_WIDTH_B - 1):0] dataout_reg_b_buffered_r = {DATA_WIDTH_B{1'b0}} ; 
                                    always
                                        @(*)
                                        begin
                                            if ((rst_b_i == 1'b1)) 
                                                begin
                                                    dataout_reg_b_r = 'h0 ;
                                                end
                                            else
                                                if ((wr_en_b_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_b_r = dataout_reg_b_buffered_r ;
                                                    end
                                        end
                                    always
                                        @(posedge clk_b_i)
                                        begin
                                            dataout_reg_b_buffered_r <=  dataout_reg_buff_b_r ;
                                        end
                                end
                    end
            end
        else
            begin : prim
                // ---------------------------------------
                // ------ SAME WIDTH Implementation ------
                // ---------------------------------------
                if (((ADDR_DEPTH_A == ADDR_DEPTH_B) && (DATA_WIDTH_A == DATA_WIDTH_B))) 
                    begin : NON_MIX
                        // ---------------------------------------------------
                        // ------ Local Parameters for EBR Optimization ------
                        // ---------------------------------------------------
                        localparam OPT_DATA_WIDTH = getMinimaData(ADDR_DEPTH_A,
                                    DATA_WIDTH_A,
                                    (BYTE_ENABLE_A || BYTE_ENABLE_B),
                                    BYTE_SIZE_A,
                                    FAMILY_CODE) ; 
                        localparam OPT_ADDR_DEPTH = data_to_addr(OPT_DATA_WIDTH,
                                    FAMILY_CODE) ; 
                        localparam OPT_ADDR_WIDTH = clog2(OPT_ADDR_DEPTH) ; 
                        localparam EBR_DATA = roundUP(DATA_WIDTH_A,
                                    OPT_DATA_WIDTH) ; 
                        localparam EBR_ADDR = roundUP(ADDR_DEPTH_A,
                                    OPT_ADDR_DEPTH) ; 
                        //Set the value of BWID to 1 when BYTE_ENABLE is disabled 
                        localparam BWID_A = ((BYTE_ENABLE_A == 0) ? 1 : (((OPT_DATA_WIDTH == 36) || (OPT_DATA_WIDTH == 32)) ? 4 : (((OPT_DATA_WIDTH == 18) || (OPT_DATA_WIDTH == 16)) ? 2 : 1))) ; 
                        localparam BWID_B = ((BYTE_ENABLE_B == 0) ? 1 : (((OPT_DATA_WIDTH == 36) || (OPT_DATA_WIDTH == 32)) ? 4 : (((OPT_DATA_WIDTH == 18) || (OPT_DATA_WIDTH == 16)) ? 2 : 1))) ; 
                        /* localparam BWID_A   = (OPT_DATA_WIDTH == 36 || OPT_DATA_WIDTH == 32) ? 4 :
                                  (OPT_DATA_WIDTH == 18 || OPT_DATA_WIDTH == 16) ? 2 : 1;
            localparam BWID_B   = (OPT_DATA_WIDTH == 36 || OPT_DATA_WIDTH == 32) ? 4 :
                                  (OPT_DATA_WIDTH == 18 || OPT_DATA_WIDTH == 16) ? 2 : 1; */
                        // ------ PORT A & B Output MUX ------
                        wire [(DATA_WIDTH_A - 1):0] rd_data_raw_a_w [(EBR_ADDR - 1):0] ; 
                        wire [(DATA_WIDTH_B - 1):0] rd_data_raw_b_w [(EBR_ADDR - 1):0] ; 
                        // ------ PORT A Address Wiring ------
                        wire [(OPT_ADDR_WIDTH - 1):0] addr_a_w ; 
                        if ((OPT_ADDR_WIDTH > ADDR_WIDTH_A)) 
                            begin : port_a_wiring
                                assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                assign addr_a_w[(OPT_ADDR_WIDTH - 1):ADDR_WIDTH_A] = {(OPT_ADDR_WIDTH - ADDR_WIDTH_A){1'b0}} ; 
                            end
                        else
                            begin : genblk1
                                assign addr_a_w = addr_a_i[(OPT_ADDR_WIDTH - 1):0] ; 
                            end
                        // ------ PORT B Address Wiring ------
                        wire [(OPT_ADDR_WIDTH - 1):0] addr_b_w ; 
                        if ((OPT_ADDR_WIDTH > ADDR_WIDTH_B)) 
                            begin : port_b_wiring
                                assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                assign addr_b_w[(OPT_ADDR_WIDTH - 1):ADDR_WIDTH_B] = {(OPT_ADDR_WIDTH - ADDR_WIDTH_B){1'b0}} ; 
                            end
                        else
                            begin : genblk2
                                assign addr_b_w = addr_b_i[(OPT_ADDR_WIDTH - 1):0] ; 
                            end
                        // ------ Address Loop (Same Width) ------
                        for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                        begin : xADDR
                            // ------ PORT A output ports ------
                            wire [(DATA_WIDTH_A - 1):0] raw_out_a_w ; 
                            assign rd_data_raw_a_w[i0] = raw_out_a_w ; 
                            // ------ PORT A Address Control Signal ------
                            wire chk_addr_a_w ; 
                            if ((EBR_ADDR > 1)) 
                                begin : genblk1
                                    assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):OPT_ADDR_WIDTH] == i0) ? 1'b1 : 1'b0) ; 
                                end
                            else
                                begin : genblk1
                                    assign chk_addr_a_w = 1'b1 ; 
                                end
                            // ------ PORT B output ports ------
                            wire [(DATA_WIDTH_B - 1):0] raw_out_b_w ; 
                            assign rd_data_raw_b_w[i0] = raw_out_b_w ; 
                            // ------ PORT B Address Control Signal ------
                            wire chk_addr_b_w ; 
                            if ((EBR_ADDR > 1)) 
                                begin : genblk2
                                    assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):OPT_ADDR_WIDTH] == i0) ? 1'b1 : 1'b0) ; 
                                end
                            else
                                begin : genblk2
                                    assign chk_addr_b_w = 1'b1 ; 
                                end
                            // ------ Data Loop (Same Width) ------
                            for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                            begin : xDATA
                                localparam ECO_POSX = (i1 * OPT_DATA_WIDTH) ; 
                                localparam ECO_POSY = (i0 * OPT_ADDR_DEPTH) ; 
                                // ------ PORT A Data Wiring ------
                                wire [(OPT_DATA_WIDTH - 1):0] in_a_w ; 
                                wire [(OPT_DATA_WIDTH - 1):0] out_a_w ; 
                                if (((OPT_DATA_WIDTH * (i1 + 1)) < DATA_WIDTH_A)) 
                                    begin : ASSIGN_A
                                        assign in_a_w = wr_data_a_i[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        assign raw_out_a_w[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] = out_a_w ; 
                                    end
                                else
                                    begin : genblk1
                                        assign in_a_w[(DATA_WIDTH_A - (1 + (OPT_DATA_WIDTH * i1))):0] = wr_data_a_i[(DATA_WIDTH_A - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        if ((OPT_DATA_WIDTH > (DATA_WIDTH_A - (OPT_DATA_WIDTH * i1)))) 
                                            begin : genblk1
                                                assign in_a_w[(OPT_DATA_WIDTH - 1):(DATA_WIDTH_A - (OPT_DATA_WIDTH * i1))] = {(OPT_DATA_WIDTH - (DATA_WIDTH_A - (OPT_DATA_WIDTH * i1))){1'b0}} ; 
                                            end
                                        assign raw_out_a_w[(DATA_WIDTH_A - 1):(OPT_DATA_WIDTH * i1)] = out_a_w[(DATA_WIDTH_A - (1 + (OPT_DATA_WIDTH * i1))):0] ; 
                                    end
                                // ------ PORT B Data Wiring ------
                                wire [(OPT_DATA_WIDTH - 1):0] in_b_w ; 
                                wire [(OPT_DATA_WIDTH - 1):0] out_b_w ; 
                                if (((OPT_DATA_WIDTH * (i1 + 1)) < DATA_WIDTH_B)) 
                                    begin : ASSIGN_B
                                        assign in_b_w = wr_data_b_i[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        assign raw_out_b_w[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] = out_b_w ; 
                                    end
                                else
                                    begin : genblk2
                                        assign in_b_w[(DATA_WIDTH_B - (1 + (OPT_DATA_WIDTH * i1))):0] = wr_data_b_i[(DATA_WIDTH_B - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        if ((OPT_DATA_WIDTH > (DATA_WIDTH_B - (OPT_DATA_WIDTH * i1)))) 
                                            begin : genblk1
                                                assign in_b_w[(OPT_DATA_WIDTH - 1):(DATA_WIDTH_B - (OPT_DATA_WIDTH * i1))] = {(OPT_DATA_WIDTH - (DATA_WIDTH_B - (OPT_DATA_WIDTH * i1))){1'b0}} ; 
                                            end
                                        assign raw_out_b_w[(DATA_WIDTH_B - 1):(OPT_DATA_WIDTH * i1)] = out_b_w[(DATA_WIDTH_B - (1 + (OPT_DATA_WIDTH * i1))):0] ; 
                                    end
                                wire [(BWID_A - 1):0] ben_a_w ; 
                                wire [(BWID_B - 1):0] ben_b_w ; 
                                // ------ Byte-Enable Wiring ------
                                if (((BWID_A == 2) || (BWID_A == 4))) 
                                    begin : BEN_MULT_A
                                        if ((BYTE_ENABLE_A == 1)) 
                                            begin : genblk1
                                                if ((((i1 + 1) * BWID_A) < BYTE_WIDTH_A)) 
                                                    begin : _A
                                                        assign ben_a_w = ben_a_i[(((i1 + 1) * BWID_A) - 1):(i1 * BWID_A)] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_a_w[(BYTE_WIDTH_A - (1 + (i1 * BWID_A))):0] = ben_a_i[(BYTE_WIDTH_A - 1):(i1 * BWID_A)] ; 
                                                        if ((((i1 + 1) * BWID_A) > BYTE_WIDTH_A)) 
                                                            begin : genblk1
                                                                assign ben_a_w[(BWID_A - 1):(BYTE_WIDTH_A - (i1 * BWID_A))] = {(BWID_A - (BYTE_WIDTH_A - (i1 * BWID_A))){1'b0}} ; 
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_a_w = {BWID_A{1'b1}} ; 
                                            end
                                    end
                                else
                                    begin : BEN_SING_A
                                        if ((BYTE_ENABLE_A == 1)) 
                                            begin : genblk1
                                                if ((OPT_DATA_WIDTH >= 8)) 
                                                    begin : genblk1
                                                        assign ben_a_w = ben_a_i[i1] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_a_w = ben_a_i[(((i1 * OPT_DATA_WIDTH) * BYTE_WIDTH_A) / DATA_WIDTH_A)] ; 
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_a_w = {BWID_A{1'b1}} ; 
                                            end
                                    end
                                if (((BWID_B == 2) || (BWID_B == 4))) 
                                    begin : BEN_MULT_B
                                        if ((BYTE_ENABLE_B == 1)) 
                                            begin : genblk1
                                                if ((((i1 + 1) * 2) < BYTE_WIDTH_B)) 
                                                    begin : _B
                                                        assign ben_b_w = ben_b_i[(((i1 + 1) * BWID_B) - 1):(i1 * BWID_B)] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_b_w[(BYTE_WIDTH_B - (1 + (i1 * BWID_B))):0] = ben_b_i[(BYTE_WIDTH_B - 1):(i1 * BWID_B)] ; 
                                                        if ((((i1 + 1) * BWID_B) > BYTE_WIDTH_B)) 
                                                            begin : genblk1
                                                                assign ben_b_w[(BWID_B - 1):(BYTE_WIDTH_B - (i1 * BWID_B))] = {(BWID_B - (BYTE_WIDTH_B - (i1 * BWID_B))){1'b0}} ; 
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_b_w = {BWID_B{1'b1}} ; 
                                            end
                                    end
                                else
                                    begin : BEN_SING_B
                                        if ((BYTE_ENABLE_B == 1)) 
                                            begin : genblk1
                                                if ((OPT_DATA_WIDTH >= 8)) 
                                                    begin : genblk1
                                                        assign ben_b_w = ben_b_i[i1] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_b_w = ben_b_i[(((i1 * OPT_DATA_WIDTH) * BYTE_WIDTH_B) / DATA_WIDTH_B)] ; 
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_b_w = {BWID_B{1'b1}} ; 
                                            end
                                    end
                                // ------------------------------------
                                // ------ SINGLE MEMORY INSTANCE ------
                                // ------------------------------------
                                if ((INIT_MODE == "mem_file")) 
                                    begin : mem_file
                                        eval_mem0_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                ._FCODE_AP6_(_FCODE_AP6_),
                                                ._FCODE_COMMON_(_FCODE_COMMON_),
                                                .FAMILY(FAMILY),
                                                .INIT_DATA(INIT_DATA),
                                                .INIT_MODE(INIT_MODE),
                                                .MEM_SIZE(MEM_SIZE),
                                                .MEM_ID(MEM_ID),
                                                .POSx(ECO_POSX),
                                                .POSy(ECO_POSY),
                                                .DATA_WIDTH_A(OPT_DATA_WIDTH),
                                                .REGMODE_A(REGMODE_A),
                                                .RESETMODE_A(RESETMODE_A),
                                                .RESET_RELEASE_A(RESET_RELEASE_A),
                                                .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                .DATA_WIDTH_B(OPT_DATA_WIDTH),
                                                .REGMODE_B(REGMODE_B),
                                                .RESETMODE_B(RESETMODE_B),
                                                .RESET_RELEASE_B(RESET_RELEASE_B),
                                                .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                .BYTE_EN_POL_B(BYTE_EN_POL_B),
                                                .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                // ------ PORT A PARAMETERS ------
                                                // ------ PORT B PARAMETERS ------
                                                // ------ INIT PARAMETERS ------
                                                // ------ PORT A signals ------
                                                .clk_a_i(clk_a_i), 
                                                    .clk_en_a_i(clk_en_a_i), 
                                                    .rst_a_i(rst_a_i), 
                                                    .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                    .ben_a_i(ben_a_w), 
                                                    .addr_a_i(addr_a_w), 
                                                    .wr_data_a_i(in_a_w), 
                                                    .rd_data_a_o(out_a_w), 
                                                    // ------ PORT B signals ------
                                                .clk_b_i(clk_b_i), 
                                                    .clk_en_b_i(clk_en_b_i), 
                                                    .rst_b_i(rst_b_i), 
                                                    .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                    .ben_b_i(ben_b_w), 
                                                    .addr_b_i(addr_b_w), 
                                                    .wr_data_b_i(in_b_w), 
                                                    .rd_data_b_o(out_b_w)) ; 
                                    end
                                else
                                    begin : no_mem_file
                                        eval_mem0_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                ._FCODE_AP6_(_FCODE_AP6_),
                                                ._FCODE_COMMON_(_FCODE_COMMON_),
                                                .FAMILY(FAMILY),
                                                .INIT_DATA(INIT_DATA),
                                                .INIT_MODE(INIT_MODE),
                                                .MEM_SIZE(MEM_SIZE),
                                                .MEM_ID(MEM_ID),
                                                .POSx(ECO_POSX),
                                                .POSy(ECO_POSY),
                                                .DATA_WIDTH_A(OPT_DATA_WIDTH),
                                                .REGMODE_A(REGMODE_A),
                                                .RESETMODE_A(RESETMODE_A),
                                                .RESET_RELEASE_A(RESET_RELEASE_A),
                                                .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                .DATA_WIDTH_B(OPT_DATA_WIDTH),
                                                .REGMODE_B(REGMODE_B),
                                                .RESETMODE_B(RESETMODE_B),
                                                .RESET_RELEASE_B(RESET_RELEASE_B),
                                                .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                .BYTE_EN_POL_B(BYTE_EN_POL_B)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                // ------ PORT A PARAMETERS ------
                                                // ------ PORT B PARAMETERS ------
                                                // ------ PORT A signals ------
                                                .clk_a_i(clk_a_i), 
                                                    .clk_en_a_i(clk_en_a_i), 
                                                    .rst_a_i(rst_a_i), 
                                                    .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                    .ben_a_i(ben_a_w), 
                                                    .addr_a_i(addr_a_w), 
                                                    .wr_data_a_i(in_a_w), 
                                                    .rd_data_a_o(out_a_w), 
                                                    // ------ PORT B signals ------
                                                .clk_b_i(clk_b_i), 
                                                    .clk_en_b_i(clk_en_b_i), 
                                                    .rst_b_i(rst_b_i), 
                                                    .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                    .ben_b_i(ben_b_w), 
                                                    .addr_b_i(addr_b_w), 
                                                    .wr_data_b_i(in_b_w), 
                                                    .rd_data_b_o(out_b_w)) ; 
                                    end
                            end
                        end
                        if ((EBR_ADDR == 1)) 
                            begin : ONE_OUT
                                assign rd_data_a_o = rd_data_raw_a_w[0] ; 
                                assign rd_data_b_o = rd_data_raw_b_w[0] ; 
                            end
                        else
                            begin : MULT_OUT
                                // ------ PORT A output assignment
                                reg [(DATA_WIDTH_A - 1):0] a_out_buff_r ; 
                                reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                assign rd_data_a_o = a_out_buff_r ; 
                                always
                                    @(*)
                                    begin
                                        a_out_buff_r = rd_data_raw_a_w[addr_a_p_r[(ADDR_WIDTH_A - 1):OPT_ADDR_WIDTH]] ;
                                    end
                                if ((REGMODE_A == "noreg")) 
                                    begin : genblk1
                                        if ((RESETMODE_A == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            if (clk_en_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i or 
                                                        posedge rst_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            if (clk_en_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                    end
                                            end
                                    end
                                else
                                    begin : genblk1
                                        reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r ; 
                                        if ((RESETMODE_A == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            if (clk_en_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i or 
                                                        posedge rst_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            if (clk_en_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                    end
                                            end
                                    end
                                // ------ PORT B output assignment
                                reg [(DATA_WIDTH_B - 1):0] b_out_buff_r ; 
                                reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r ; 
                                assign rd_data_b_o = b_out_buff_r ; 
                                always
                                    @(*)
                                    begin
                                        b_out_buff_r = rd_data_raw_b_w[addr_b_p_r[(ADDR_WIDTH_B - 1):OPT_ADDR_WIDTH]] ;
                                    end
                                if ((REGMODE_B == "noreg")) 
                                    begin : genblk2
                                        if ((RESETMODE_B == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            if (clk_en_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i or 
                                                        posedge rst_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            if (clk_en_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                    end
                                            end
                                    end
                                else
                                    begin : genblk2
                                        reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r ; 
                                        if ((RESETMODE_B == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            if (clk_en_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i or 
                                                        posedge rst_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            if (clk_en_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                    end
                                            end
                                    end
                            end
                    end
                else
                    // ---------------------------------------------------------
                    // ------ Mixed WIDTH Implementation (no Byte-Enable) ------
                    // ---------------------------------------------------------
                    if (((BYTE_ENABLE_A == 0) && (BYTE_ENABLE_B == 0))) 
                        begin : MIX_N_BEN
                            // ---------------------------------------------------
                            // ------ Local Parameters for EBR Optimization ------
                            // ---------------------------------------------------
                            localparam Q_FACTOR = ((DATA_WIDTH_A > DATA_WIDTH_B) ? (DATA_WIDTH_A / DATA_WIDTH_B) : (DATA_WIDTH_B / DATA_WIDTH_A)) ; 
                            localparam MAX_DATA = ((DATA_WIDTH_A > DATA_WIDTH_B) ? DATA_WIDTH_A : DATA_WIDTH_B) ; 
                            localparam MAX_PORT = ((DATA_WIDTH_A > DATA_WIDTH_B) ? "A" : "B") ; 
                            localparam MIN_DEPTH = ((MAX_PORT == "A") ? ADDR_DEPTH_A : ADDR_DEPTH_B) ; 
                            localparam PROC_MAX_DATA = procData(MAX_DATA,
                                        FAMILY_CODE) ; 
                            localparam PROC_MIN_DEPTH = (2 ** clog2(MIN_DEPTH)) ; 
                            localparam PROC_MIN_DATA = (PROC_MAX_DATA / Q_FACTOR) ; 
                            localparam PROC_MAX_DEPTH = (PROC_MIN_DEPTH * Q_FACTOR) ; 
                            localparam PORT_A_DATA_USE = ((MAX_PORT == "A") ? PROC_MAX_DATA : PROC_MIN_DATA) ; 
                            localparam PORT_A_DEPTH_USE = ((MAX_PORT == "A") ? PROC_MIN_DEPTH : PROC_MAX_DEPTH) ; 
                            localparam PORT_A_DEPTH_WIDTH = clog2(PORT_A_DEPTH_USE) ; 
                            localparam PORT_B_DATA_USE = ((MAX_PORT == "B") ? PROC_MAX_DATA : PROC_MIN_DATA) ; 
                            localparam PORT_B_DEPTH_USE = ((MAX_PORT == "B") ? PROC_MIN_DEPTH : PROC_MAX_DEPTH) ; 
                            localparam PORT_B_DEPTH_WIDTH = clog2(PORT_B_DEPTH_USE) ; 
                            localparam A_DWID_IMPL = getCASE1DataImpl(PORT_A_DEPTH_USE,
                                        PORT_A_DATA_USE,
                                        PORT_B_DEPTH_USE,
                                        PORT_B_DATA_USE,
                                        1'b1,
                                        0,
                                        FAMILY_CODE) ; 
                            localparam A_DEPTH_IMPL = data_to_addr(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam A_AWID_IMPL = clog2(A_DEPTH_IMPL) ; 
                            localparam B_DWID_IMPL = getCASE1DataImpl(PORT_A_DEPTH_USE,
                                        PORT_A_DATA_USE,
                                        PORT_B_DEPTH_USE,
                                        PORT_B_DATA_USE,
                                        1'b0,
                                        0,
                                        FAMILY_CODE) ; 
                            localparam B_DEPTH_IMPL = data_to_addr(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_AWID_IMPL = clog2(B_DEPTH_IMPL) ; 
                            localparam EBR_ADDR = roundUP(PORT_A_DEPTH_USE,
                                        A_DEPTH_IMPL) ; 
                            localparam EBR_DATA = roundUP(PORT_A_DATA_USE,
                                        A_DWID_IMPL) ; 
                            // ------ Port A address truncation ------
                            wire [(A_AWID_IMPL - 1):0] addr_a_w ; 
                            if ((A_AWID_IMPL > ADDR_WIDTH_A)) 
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):ADDR_WIDTH_A] = {(A_AWID_IMPL - ADDR_WIDTH_A){1'b0}} ; 
                                    assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                end
                            else
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):0] = addr_a_i[(A_AWID_IMPL - 1):0] ; 
                                end
                            // ------ Port B address truncation ------
                            wire [(B_AWID_IMPL - 1):0] addr_b_w ; 
                            if ((B_AWID_IMPL > ADDR_WIDTH_B)) 
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):ADDR_WIDTH_B] = {(B_AWID_IMPL - ADDR_WIDTH_B){1'b0}} ; 
                                    assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                end
                            else
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):0] = addr_b_i[(B_AWID_IMPL - 1):0] ; 
                                end
                            // ------ TOP level wiring ports ------
                            wire [(PORT_A_DATA_USE - 1):0] in_a_top_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] in_b_top_w ; 
                            wire [(PORT_A_DATA_USE - 1):0] out_a_top_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_top_w ; 
                            // ------ EBR level wiring ports ------
                            wire [(PORT_A_DATA_USE - 1):0] in_a_ebr_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] in_b_ebr_w ; 
                            wire [(PORT_A_DATA_USE - 1):0] out_a_ebr_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_ebr_w ; 
                            // ------ Output Port MUX ------
                            wire [(PORT_A_DATA_USE - 1):0] out_a_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            // ------------------------------------------------
                            // ------ WIRING translation from TOP to EBR ------
                            // ------------------------------------------------
                            if ((PORT_A_DATA_USE > PORT_B_DATA_USE)) 
                                begin : A_OVR_B
                                    // ------ PORT B (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    genvar i_0, 
                                        i_1 ; 
                                    if ((PORT_B_DATA_USE > DATA_WIDTH_B)) 
                                        begin : genblk1
                                            assign in_b_top_w[(PORT_B_DATA_USE - 1):DATA_WIDTH_B] = {(PORT_B_DATA_USE - DATA_WIDTH_B){1'b0}} ; 
                                        end
                                    assign in_b_top_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_top_w[(DATA_WIDTH_B - 1):0] ; 
                                    // ------ PORT A (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(PORT_B_DATA_USE - 1):0] inp_a_buff_seg_w [((PORT_A_DATA_USE / PORT_B_DATA_USE) - 1):0] ; 
                                    wire [(PORT_B_DATA_USE - 1):0] out_a_buff_seg_w [((PORT_A_DATA_USE / PORT_B_DATA_USE) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign inp_a_buff_seg_w[i_0] = wr_data_a_i[((DATA_WIDTH_B * (i_0 + 1)) - 1):(DATA_WIDTH_B * i_0)] ; 
                                        assign rd_data_a_o[((DATA_WIDTH_B * (i_0 + 1)) - 1):(DATA_WIDTH_B * i_0)] = out_a_buff_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        assign in_a_top_w[(((i_0 * PORT_B_DATA_USE) + PORT_B_DATA_USE) - 1):(i_0 * PORT_B_DATA_USE)] = inp_a_buff_seg_w[i_0] ; 
                                        assign out_a_buff_seg_w[i_0] = out_a_top_w[(((i_0 * PORT_B_DATA_USE) + PORT_B_DATA_USE) - 1):(i_0 * PORT_B_DATA_USE)] ; 
                                    end
                                    // ------ PORT B (TOP level to EBR level splt) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    assign in_b_ebr_w = in_b_top_w ; 
                                    assign out_b_top_w = out_b_ebr_w ; 
                                    // ------ PORT A (TOP level to EBR level splt) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(B_DWID_IMPL - 1):0] in_a_ebr_seg_w [((PORT_A_DATA_USE / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_DWID_IMPL - 1):0] out_a_ebr_seg_w [((PORT_A_DATA_USE / B_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk4
                                        for (i_1 = 0;(i_1 < (PORT_A_DATA_USE / (B_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_a_ebr_seg_w[(((PORT_A_DATA_USE / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = in_a_top_w[((((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk5
                                        assign in_a_ebr_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = in_a_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk6
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_a_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_a_ebr_w[((((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk7
                                        assign out_a_top_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = out_a_ebr_seg_w[i_0] ; 
                                    end
                                end
                            else
                                begin : B_OVR_A
                                    // ------ PORT A (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    genvar i_0, 
                                        i_1 ; 
                                    if ((PORT_A_DATA_USE > DATA_WIDTH_A)) 
                                        begin : genblk1
                                            assign in_a_top_w[(PORT_A_DATA_USE - 1):DATA_WIDTH_A] = {(PORT_A_DATA_USE - DATA_WIDTH_A){1'b0}} ; 
                                        end
                                    assign in_a_top_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_top_w ; 
                                    // ------ PORT B (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(PORT_A_DATA_USE - 1):0] inp_b_buff_seg_w [((PORT_B_DATA_USE / PORT_A_DATA_USE) - 1):0] ; 
                                    wire [(PORT_A_DATA_USE - 1):0] out_b_buff_seg_w [((PORT_B_DATA_USE / PORT_A_DATA_USE) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign inp_b_buff_seg_w[i_0] = wr_data_b_i[((DATA_WIDTH_A * (i_0 + 1)) - 1):(DATA_WIDTH_A * i_0)] ; 
                                        assign rd_data_b_o[((DATA_WIDTH_A * (i_0 + 1)) - 1):(DATA_WIDTH_A * i_0)] = out_b_buff_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        assign in_b_top_w[(((i_0 * PORT_A_DATA_USE) + PORT_A_DATA_USE) - 1):(i_0 * PORT_A_DATA_USE)] = inp_b_buff_seg_w[i_0] ; 
                                        assign out_b_buff_seg_w[i_0] = out_b_top_w[(((i_0 * PORT_A_DATA_USE) + PORT_A_DATA_USE) - 1):(i_0 * PORT_A_DATA_USE)] ; 
                                    end
                                    // ------ PORT A (TOP level to EBR level splt) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    assign in_a_ebr_w = in_a_top_w ; 
                                    assign out_a_top_w = out_a_ebr_w ; 
                                    // ------ PORT B (TOP level to EBR level splt) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(A_DWID_IMPL - 1):0] in_b_ebr_seg_w [((PORT_B_DATA_USE / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_DWID_IMPL - 1):0] out_b_ebr_seg_w [((PORT_B_DATA_USE / A_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk4
                                        for (i_1 = 0;(i_1 < (PORT_B_DATA_USE / (A_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_b_ebr_seg_w[(((PORT_B_DATA_USE / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = in_b_top_w[((((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk5
                                        assign in_b_ebr_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = in_b_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk6
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_b_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_b_ebr_w[((((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk7
                                        assign out_b_top_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = out_b_ebr_seg_w[i_0] ; 
                                    end
                                end
                            // ------ Address Loop (Mixed Width no Byte-Enable) ------
                            for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                            begin : xADDR
                                // ------ PORT A output ports ------
                                wire [(PORT_A_DATA_USE - 1):0] raw_out_a_w ; 
                                assign out_a_ebr_raw_w[i0] = raw_out_a_w ; 
                                // ------ PORT A Address Control Signal ------
                                wire chk_addr_a_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk1
                                        assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):A_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk1
                                        assign chk_addr_a_w = 1'b1 ; 
                                    end
                                // ------ PORT B output ports ------
                                wire [(PORT_B_DATA_USE - 1):0] raw_out_b_w ; 
                                assign out_b_ebr_raw_w[i0] = raw_out_b_w ; 
                                // ------ PORT B Address Control Signal ------
                                wire chk_addr_b_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk2
                                        assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):B_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk2
                                        assign chk_addr_b_w = 1'b1 ; 
                                    end
                                // ------ Data Loop (Mixed Width no Byte-Enable) ------                
                                for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                                begin : xDATA
                                    localparam ECO_POSX = (i1 * A_DWID_IMPL) ; 
                                    localparam ECO_POSY = (i0 * A_DEPTH_IMPL) ; 
                                    // ------ PORT A Data Wiring ------
                                    wire [(A_DWID_IMPL - 1):0] in_a_w ; 
                                    wire [(A_DWID_IMPL - 1):0] out_a_w ; 
                                    if ((PORT_A_DATA_USE > (A_DWID_IMPL * (i1 + 1)))) 
                                        begin : genblk1
                                            assign in_a_w = in_a_ebr_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] ; 
                                            assign raw_out_a_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] = out_a_w ; 
                                        end
                                    else
                                        begin : genblk1
                                            assign in_a_w[(PORT_A_DATA_USE - (1 + (A_DWID_IMPL * i1))):0] = in_a_ebr_w[(PORT_A_DATA_USE - 1):(A_DWID_IMPL * i1)] ; 
                                            if ((A_DWID_IMPL > (PORT_A_DATA_USE - (A_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_a_w[(A_DWID_IMPL - 1):(PORT_A_DATA_USE - (A_DWID_IMPL * i1))] = {(A_DWID_IMPL - (PORT_A_DATA_USE - (A_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            assign raw_out_a_w[(PORT_A_DATA_USE - 1):(A_DWID_IMPL * i1)] = out_a_w[(PORT_A_DATA_USE - (1 + (A_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------ PORT B Data Wiring ------
                                    wire [(B_DWID_IMPL - 1):0] in_b_w ; 
                                    wire [(B_DWID_IMPL - 1):0] out_b_w ; 
                                    if ((PORT_B_DATA_USE > (B_DWID_IMPL * (i1 + 1)))) 
                                        begin : genblk2
                                            assign in_b_w = in_b_ebr_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] ; 
                                            assign raw_out_b_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] = out_b_w ; 
                                        end
                                    else
                                        begin : genblk2
                                            assign in_b_w[(PORT_B_DATA_USE - (1 + (B_DWID_IMPL * i1))):0] = in_b_ebr_w[(PORT_B_DATA_USE - 1):(B_DWID_IMPL * i1)] ; 
                                            if ((B_DWID_IMPL > (PORT_B_DATA_USE - (B_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_b_w[(B_DWID_IMPL - 1):(PORT_B_DATA_USE - (B_DWID_IMPL * i1))] = {(B_DWID_IMPL - (PORT_B_DATA_USE - (B_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            assign raw_out_b_w[(PORT_B_DATA_USE - 1):(B_DWID_IMPL * i1)] = out_b_w[(PORT_B_DATA_USE - (1 + (B_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------------------------------------
                                    // ------ SINGLE MEMORY INSTANCE ------
                                    // ------------------------------------
                                    if ((INIT_MODE == "mem_file")) 
                                        begin : mem_file
                                            eval_mem0_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_DATA(INIT_DATA),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(0),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(0),
                                                    .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ INIT PARAMETERS ------
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(1'b1), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(1'b1), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                    else
                                        begin : no_mem_file
                                            eval_mem0_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_DATA(INIT_DATA),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(0),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(0)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(1'b1), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(1'b1), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                end
                            end
                            if ((EBR_ADDR == 1)) 
                                begin : genblk5
                                    assign out_a_ebr_w = out_a_ebr_raw_w[0] ; 
                                    assign out_b_ebr_w = out_b_ebr_raw_w[0] ; 
                                end
                            else
                                begin : genblk5
                                    // ------ PORT A output assignment ------
                                    reg [(PORT_A_DATA_USE - 1):0] a_out_buff_r ; 
                                    reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                    assign out_a_ebr_w = a_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            a_out_buff_r = out_a_ebr_raw_w[addr_a_p_r[(ADDR_WIDTH_A - 1):A_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_A == "noreg")) 
                                        begin : genblk1
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_a_i) 
                                                                    begin
                                                                        addr_a_p_r <=  addr_a_i ;
                                                                    end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_a_i) 
                                                                    begin
                                                                        addr_a_p_r <=  addr_a_i ;
                                                                    end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk1
                                            reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r ; 
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_a_i) 
                                                                    begin
                                                                        addr_a_p2_r <=  addr_a_i ;
                                                                        addr_a_p_r <=  addr_a_p2_r ;
                                                                    end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_a_i) 
                                                                    begin
                                                                        addr_a_p2_r <=  addr_a_i ;
                                                                        addr_a_p_r <=  addr_a_p2_r ;
                                                                    end
                                                        end
                                                end
                                        end
                                    // ------ PORT B output assignment ------
                                    reg [(PORT_B_DATA_USE - 1):0] b_out_buff_r ; 
                                    reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r ; 
                                    assign out_b_ebr_w = b_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            b_out_buff_r = out_b_ebr_raw_w[addr_b_p_r[(ADDR_WIDTH_B - 1):B_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_B == "noreg")) 
                                        begin : genblk2
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_b_i) 
                                                                    begin
                                                                        addr_b_p_r <=  addr_b_i ;
                                                                    end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_b_i) 
                                                                    begin
                                                                        addr_b_p_r <=  addr_b_i ;
                                                                    end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk2
                                            reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r ; 
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_b_i) 
                                                                    begin
                                                                        addr_b_p2_r <=  addr_b_i ;
                                                                        addr_b_p_r <=  addr_b_p2_r ;
                                                                    end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_b_i) 
                                                                    begin
                                                                        addr_b_p2_r <=  addr_b_i ;
                                                                        addr_b_p_r <=  addr_b_p2_r ;
                                                                    end
                                                        end
                                                end
                                        end
                                end
                        end
                    else
                        begin : MIX_Y_BEN
                            // ---------------------------------------------------
                            // ------ Local Parameters for EBR Optimization ------
                            // ---------------------------------------------------
                            localparam A_DWID_IMPL = getCASE1DataImpl_wBEN(ADDR_DEPTH_A,
                                        DATA_WIDTH_A,
                                        ADDR_DEPTH_B,
                                        DATA_WIDTH_B,
                                        1'b1,
                                        FAMILY_CODE) ; 
                            localparam A_DEPTH_IMPL = data_to_addr(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam A_AWID_IMPL = clog2(A_DEPTH_IMPL) ; 
                            localparam A_BWID_IMPL = getImplByteWidth(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_DWID_IMPL = getCASE1DataImpl_wBEN(ADDR_DEPTH_A,
                                        DATA_WIDTH_A,
                                        ADDR_DEPTH_B,
                                        DATA_WIDTH_B,
                                        1'b0,
                                        FAMILY_CODE) ; 
                            localparam B_DEPTH_IMPL = data_to_addr(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_AWID_IMPL = clog2(B_DEPTH_IMPL) ; 
                            localparam B_BWID_IMPL = getImplByteWidth(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam EBR_ADDR = roundUP(ADDR_DEPTH_A,
                                        A_DEPTH_IMPL) ; 
                            localparam EBR_DATA = roundUP(DATA_WIDTH_A,
                                        A_DWID_IMPL) ; 
                            // ------ Port A address truncation ------
                            wire [(A_AWID_IMPL - 1):0] addr_a_w ; 
                            if ((A_AWID_IMPL > ADDR_WIDTH_A)) 
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):ADDR_WIDTH_A] = {(A_AWID_IMPL - ADDR_WIDTH_A){1'b0}} ; 
                                    assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                end
                            else
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):0] = addr_a_i[(A_AWID_IMPL - 1):0] ; 
                                end
                            // ------ Port B address truncation ------
                            wire [(B_AWID_IMPL - 1):0] addr_b_w ; 
                            if ((B_AWID_IMPL > ADDR_WIDTH_B)) 
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):ADDR_WIDTH_B] = {(B_AWID_IMPL - ADDR_WIDTH_B){1'b0}} ; 
                                    assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                end
                            else
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):0] = addr_b_i[(B_AWID_IMPL - 1):0] ; 
                                end
                            // ------ EBR level wiring ports ------
                            wire [(DATA_WIDTH_A - 1):0] in_a_ebr_w ; 
                            wire [(DATA_WIDTH_B - 1):0] in_b_ebr_w ; 
                            wire [(DATA_WIDTH_A - 1):0] out_a_ebr_w ; 
                            wire [(DATA_WIDTH_B - 1):0] out_b_ebr_w ; 
                            wire [(BYTE_WIDTH_A - 1):0] ben_a_ebr_w ; 
                            wire [(BYTE_WIDTH_B - 1):0] ben_b_ebr_w ; 
                            // ------ Output Port MUX ------
                            wire [(DATA_WIDTH_A - 1):0] out_a_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            wire [(DATA_WIDTH_B - 1):0] out_b_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            if ((DATA_WIDTH_A > DATA_WIDTH_B)) 
                                begin : A_OVR_B
                                    // ------ PORT B (TOP to EBR level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    assign in_b_ebr_w = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_ebr_w ; 
                                    assign ben_b_ebr_w = ben_b_i ; 
                                    genvar i_0, 
                                        i_1 ; 
                                    // ------ PORT A (TOP to EBR level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(B_DWID_IMPL - 1):0] in_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_BWID_IMPL - 1):0] ben_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_DWID_IMPL - 1):0] out_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk1
                                        for (i_1 = 0;(i_1 < (DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_a_ebr_seg_w[(((DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = wr_data_a_i[((((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL))] ; 
                                            assign ben_a_ebr_seg_w[(((DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = ben_a_i[((((i_0 * B_BWID_IMPL) + ((i_1 * EBR_DATA) * B_BWID_IMPL)) + B_BWID_IMPL) - 1):((i_0 * B_BWID_IMPL) + ((i_1 * EBR_DATA) * B_BWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign in_a_ebr_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = in_a_ebr_seg_w[i_0] ; 
                                        assign ben_a_ebr_w[(((i_0 * B_BWID_IMPL) + B_BWID_IMPL) - 1):(i_0 * B_BWID_IMPL)] = ben_a_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / DATA_WIDTH_B));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_a_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_a_ebr_w[((((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk4
                                        assign rd_data_a_o[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = out_a_ebr_seg_w[i_0] ; 
                                    end
                                end
                            else
                                begin : B_OVR_A
                                    // ------ PORT A (TOP to EBR level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    assign in_a_ebr_w = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_ebr_w ; 
                                    assign ben_a_ebr_w = ben_a_i ; 
                                    genvar i_0, 
                                        i_1 ; 
                                    // ------ PORT B (TOP to EBR level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(A_DWID_IMPL - 1):0] in_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_BWID_IMPL - 1):0] ben_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_DWID_IMPL - 1):0] out_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk1
                                        for (i_1 = 0;(i_1 < (DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_b_ebr_seg_w[(((DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = wr_data_b_i[((((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL))] ; 
                                            assign ben_b_ebr_seg_w[(((DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = ben_b_i[((((i_0 * A_BWID_IMPL) + ((i_1 * EBR_DATA) * A_BWID_IMPL)) + A_BWID_IMPL) - 1):((i_0 * A_BWID_IMPL) + ((i_1 * EBR_DATA) * A_BWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign in_b_ebr_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = in_b_ebr_seg_w[i_0] ; 
                                        assign ben_b_ebr_w[(((i_0 * A_BWID_IMPL) + A_BWID_IMPL) - 1):(i_0 * A_BWID_IMPL)] = ben_b_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / DATA_WIDTH_A));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_b_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_b_ebr_w[((((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk4
                                        assign rd_data_b_o[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = out_b_ebr_seg_w[i_0] ; 
                                    end
                                end
                            // ------ Address Loop (Mixed Width w/ Byte-Enable) ------
                            for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                            begin : xADDR
                                // ------ PORT A output ports ------
                                wire [(DATA_WIDTH_A - 1):0] raw_out_a_w ; 
                                assign out_a_ebr_raw_w[i0] = raw_out_a_w ; 
                                // ------ PORT A Address Control Signal ------
                                wire chk_addr_a_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk1
                                        assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):A_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk1
                                        assign chk_addr_a_w = 1'b1 ; 
                                    end
                                // ------ PORT B output ports ------
                                wire [(DATA_WIDTH_B - 1):0] raw_out_b_w ; 
                                assign out_b_ebr_raw_w[i0] = raw_out_b_w ; 
                                // ------ PORT B Address Control Signal ------
                                wire chk_addr_b_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk2
                                        assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):B_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk2
                                        assign chk_addr_b_w = 1'b1 ; 
                                    end
                                // ------ Data Loop (Mixed Width w/ Byte-Enable) ------     
                                for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                                begin : xDATA
                                    localparam ECO_POSX = (i1 * A_DWID_IMPL) ; 
                                    localparam ECO_POSY = (i0 * A_DEPTH_IMPL) ; 
                                    // ------ PORT A Data Wiring ------
                                    wire [(A_DWID_IMPL - 1):0] in_a_w ; 
                                    wire [(A_BWID_IMPL - 1):0] ben_a_w ; 
                                    wire [(A_DWID_IMPL - 1):0] out_a_w ; 
                                    if (((A_DWID_IMPL * (i1 + 1)) < DATA_WIDTH_A)) 
                                        begin : genblk1
                                            assign in_a_w = in_a_ebr_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] ; 
                                            assign raw_out_a_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] = out_a_w ; 
                                            assign ben_a_w = ((BYTE_ENABLE_A == 1) ? ben_a_ebr_w[((A_BWID_IMPL * (i1 + 1)) - 1):(A_BWID_IMPL * i1)] : {A_BWID_IMPL{1'b1}}) ; 
                                        end
                                    else
                                        begin : genblk1
                                            assign in_a_w[(DATA_WIDTH_A - (1 + (A_DWID_IMPL * i1))):0] = in_a_ebr_w[(DATA_WIDTH_A - 1):(A_DWID_IMPL * i1)] ; 
                                            if ((A_DWID_IMPL > (DATA_WIDTH_A - (A_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_a_w[(A_DWID_IMPL - 1):(DATA_WIDTH_A - (A_DWID_IMPL * i1))] = {(A_DWID_IMPL - (DATA_WIDTH_A - (A_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            if ((BYTE_ENABLE_A == 1)) 
                                                begin : genblk2
                                                    assign ben_a_w[(BYTE_WIDTH_A - (1 + (A_BWID_IMPL * i1))):0] = ben_a_ebr_w[(BYTE_WIDTH_A - 1):(A_BWID_IMPL * i1)] ; 
                                                    if ((A_BWID_IMPL > (BYTE_WIDTH_A - (A_BWID_IMPL * i1)))) 
                                                        begin : genblk1
                                                            assign ben_a_w[(A_BWID_IMPL - 1):(BYTE_WIDTH_A - (A_BWID_IMPL * i1))] = {(A_BWID_IMPL - (BYTE_WIDTH_A - (A_BWID_IMPL * i1))){1'b1}} ; 
                                                        end
                                                end
                                            else
                                                begin : genblk2
                                                    assign ben_a_w = {A_BWID_IMPL{1'b1}} ; 
                                                end
                                            assign raw_out_a_w[(DATA_WIDTH_A - 1):(A_DWID_IMPL * i1)] = out_a_w[(DATA_WIDTH_A - (1 + (A_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------ PORT B Data Wiring ------
                                    wire [(B_DWID_IMPL - 1):0] in_b_w ; 
                                    wire [(B_BWID_IMPL - 1):0] ben_b_w ; 
                                    wire [(B_DWID_IMPL - 1):0] out_b_w ; 
                                    if (((B_DWID_IMPL * (i1 + 1)) < DATA_WIDTH_B)) 
                                        begin : genblk2
                                            assign in_b_w = in_b_ebr_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] ; 
                                            assign raw_out_b_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] = out_b_w ; 
                                            assign ben_b_w = ((BYTE_ENABLE_B == 1) ? ben_b_ebr_w[((B_BWID_IMPL * (i1 + 1)) - 1):(B_BWID_IMPL * i1)] : {B_BWID_IMPL{1'b1}}) ; 
                                        end
                                    else
                                        begin : genblk2
                                            assign in_b_w[(DATA_WIDTH_B - (1 + (B_DWID_IMPL * i1))):0] = in_b_ebr_w[(DATA_WIDTH_B - 1):(B_DWID_IMPL * i1)] ; 
                                            if ((B_DWID_IMPL > (DATA_WIDTH_B - (B_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_b_w[(B_DWID_IMPL - 1):(DATA_WIDTH_B - (B_DWID_IMPL * i1))] = {(B_DWID_IMPL - (DATA_WIDTH_B - (B_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            if ((BYTE_ENABLE_B == 1)) 
                                                begin : genblk2
                                                    assign ben_b_w[(BYTE_WIDTH_B - (1 + (B_BWID_IMPL * i1))):0] = ben_b_ebr_w[(BYTE_WIDTH_B - 1):(B_BWID_IMPL * i1)] ; 
                                                    if ((B_BWID_IMPL > (DATA_WIDTH_B - (B_BWID_IMPL * i1)))) 
                                                        begin : genblk1
                                                            assign ben_b_w[(B_BWID_IMPL - 1):(BYTE_WIDTH_B - (B_BWID_IMPL * i1))] = {(B_BWID_IMPL - (BYTE_WIDTH_B - (B_BWID_IMPL * i1))){1'b1}} ; 
                                                        end
                                                end
                                            else
                                                begin : genblk2
                                                    assign ben_b_w = {B_BWID_IMPL{1'b1}} ; 
                                                end
                                            assign raw_out_b_w[(DATA_WIDTH_B - 1):(B_DWID_IMPL * i1)] = out_b_w[(DATA_WIDTH_B - (1 + (B_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------------------------------------
                                    // ------ SINGLE MEMORY INSTANCE ------
                                    // ------------------------------------
                                    if ((INIT_MODE == "mem_file")) 
                                        begin : mem_file
                                            eval_mem0_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_DATA(INIT_DATA),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                    .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                    .BYTE_EN_POL_B(BYTE_EN_POL_B),
                                                    .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ INIT PARAMETERS ------
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(ben_a_w), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(ben_b_w), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                    else
                                        begin : no_mem_file
                                            eval_mem0_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_DATA(INIT_DATA),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                    .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                    .BYTE_EN_POL_B(BYTE_EN_POL_B)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(ben_a_w), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(ben_b_w), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                end
                            end
                            if ((EBR_ADDR == 1)) 
                                begin : genblk5
                                    assign out_a_ebr_w = out_a_ebr_raw_w[0] ; 
                                    assign out_b_ebr_w = out_b_ebr_raw_w[0] ; 
                                end
                            else
                                begin : genblk5
                                    // ------ PORT A output assignment ------
                                    reg [(DATA_WIDTH_A - 1):0] a_out_buff_r ; 
                                    reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                    assign out_a_ebr_w = a_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            a_out_buff_r = out_a_ebr_raw_w[addr_a_p_r[(ADDR_WIDTH_A - 1):A_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_A == "noreg")) 
                                        begin : genblk1
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_a_i) 
                                                                    begin
                                                                        addr_a_p_r <=  addr_a_i ;
                                                                    end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_a_i) 
                                                                    begin
                                                                        addr_a_p_r <=  addr_a_i ;
                                                                    end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk1
                                            reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r = {ADDR_WIDTH_A{1'b0}} ; 
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_a_i) 
                                                                    begin
                                                                        addr_a_p2_r <=  addr_a_i ;
                                                                        addr_a_p_r <=  addr_a_p2_r ;
                                                                    end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_a_i) 
                                                                    begin
                                                                        addr_a_p2_r <=  addr_a_i ;
                                                                        addr_a_p_r <=  addr_a_p2_r ;
                                                                    end
                                                        end
                                                end
                                        end
                                    // ------ PORT B output assignment ------
                                    reg [(DATA_WIDTH_B - 1):0] b_out_buff_r = {DATA_WIDTH_B{1'b0}} ; 
                                    reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r = {ADDR_WIDTH_B{1'b0}} ; 
                                    assign out_b_ebr_w = b_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            b_out_buff_r = out_b_ebr_raw_w[addr_b_p_r[(ADDR_WIDTH_B - 1):B_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_B == "noreg")) 
                                        begin : genblk2
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_b_i) 
                                                                    begin
                                                                        addr_b_p_r <=  addr_b_i ;
                                                                    end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_b_i) 
                                                                    begin
                                                                        addr_b_p_r <=  addr_b_i ;
                                                                    end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk2
                                            reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r = {ADDR_WIDTH_B{1'b0}} ; 
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_b_i) 
                                                                    begin
                                                                        addr_b_p2_r <=  addr_b_i ;
                                                                        addr_b_p_r <=  addr_b_p2_r ;
                                                                    end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                if (clk_en_b_i) 
                                                                    begin
                                                                        addr_b_p2_r <=  addr_b_i ;
                                                                        addr_b_p_r <=  addr_b_p2_r ;
                                                                    end
                                                        end
                                                end
                                        end
                                end
                        end
            end
    endgenerate
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [1:0] checkINIT ; 
        input [31:0] val ; 
        begin
            case (val)
            _FCODE_LIFCL_ : 
                checkINIT = 1 ;
            _FCODE_AP6_ : 
                checkINIT = 2 ;
            default : 
                checkINIT = 0 ;
            endcase 
        end
    endfunction
    function [31:0] getImplByteWidth ; 
        input [31:0] dwid ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (dwid)
                    18 : 
                        getImplByteWidth = 2 ;
                    16 : 
                        getImplByteWidth = 2 ;
                    9 : 
                        getImplByteWidth = 1 ;
                    default : 
                        getImplByteWidth = 1 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (dwid)
                    36 : 
                        getImplByteWidth = 4 ;
                    32 : 
                        getImplByteWidth = 4 ;
                    18 : 
                        getImplByteWidth = 2 ;
                    16 : 
                        getImplByteWidth = 2 ;
                    9 : 
                        getImplByteWidth = 1 ;
                    default : 
                        getImplByteWidth = 1 ;
                    endcase 
                end
            default : 
                getImplByteWidth = 1 ;
            endcase 
        end
    endfunction
    function [31:0] getDatabase ; 
        input [31:0] base_count ; 
        input [31:0] index ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (base_count)
                    9 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 9 ;
                            default : 
                                getDatabase = 18 ;
                            endcase 
                        end
                    8 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 1 ;
                            1 : 
                                getDatabase = 2 ;
                            2 : 
                                getDatabase = 4 ;
                            3 : 
                                getDatabase = 8 ;
                            default : 
                                getDatabase = 16 ;
                            endcase 
                        end
                    default : 
                        getDatabase = 16 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (base_count)
                    9 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 9 ;
                            1 : 
                                getDatabase = 18 ;
                            default : 
                                getDatabase = 36 ;
                            endcase 
                        end
                    8 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 1 ;
                            1 : 
                                getDatabase = 2 ;
                            2 : 
                                getDatabase = 4 ;
                            3 : 
                                getDatabase = 8 ;
                            4 : 
                                getDatabase = 16 ;
                            default : 
                                getDatabase = 32 ;
                            endcase 
                        end
                    default : 
                        getDatabase = 16 ;
                    endcase 
                end
            default : 
                getDatabase = base_count ;
            endcase 
        end
    endfunction
    function [31:0] getCASE1DataImpl_wBEN ; 
        input [31:0] addr_a_depth ; 
        input [31:0] data_a_width ; 
        input [31:0] addr_b_depth ; 
        input [31:0] data_b_width ; 
        input is_taking_port_a ; 
        input [31:0] family_code ; 
        reg [31:0] max_width, 
            min_width, 
            byte_size ; 
        reg [31:0] temp_00, 
            temp_01, 
            upper_factor, 
            lower_factor ; 
        reg [31:0] wr_addr_chk, 
            wr_data_chk, 
            rd_addr_chk, 
            rd_data_chk, 
            wr_data_div, 
            rd_data_div ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    if ((data_a_width > data_b_width)) 
                        begin
                            if (is_taking_port_a) 
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 18 ;
                                    else
                                        getCASE1DataImpl_wBEN = 16 ;
                                end
                            else
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 9 ;
                                    else
                                        getCASE1DataImpl_wBEN = 8 ;
                                end
                        end
                    else
                        begin
                            if (is_taking_port_a) 
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 9 ;
                                    else
                                        getCASE1DataImpl_wBEN = 8 ;
                                end
                            else
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 18 ;
                                    else
                                        getCASE1DataImpl_wBEN = 16 ;
                                end
                        end
                end
            _FCODE_AP6_ : 
                begin
                    max_width = ((data_a_width > data_b_width) ? data_a_width : data_b_width) ;
                    min_width = ((data_a_width < data_b_width) ? data_a_width : data_b_width) ;
                    byte_size = (((max_width % 9) == 0) ? 9 : 8) ;
                    if (((max_width / min_width) == 4)) 
                        begin
                            if ((data_a_width > data_b_width)) 
                                begin
                                    if ((is_taking_port_a == 1)) 
                                        getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                    else
                                        getCASE1DataImpl_wBEN = byte_size ;
                                end
                            else
                                begin
                                    if ((is_taking_port_a == 1)) 
                                        getCASE1DataImpl_wBEN = byte_size ;
                                    else
                                        getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                end
                        end
                    else
                        begin
                            if ((data_a_width > data_b_width)) 
                                begin
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(36,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 36 : 32) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_00 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_00 = 32'hffffffff ;
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(9,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 9 : 8) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_01 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_01 = 32'hffffffff ;
                                    if ((temp_00 < temp_01)) 
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                        end
                                    else
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = byte_size ;
                                        end
                                end
                            else
                                begin
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(36,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 36 : 32) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_00 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_00 = 32'hffffffff ;
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(9,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 9 : 8) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_01 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_01 = 32'hffffffff ;
                                    if ((temp_00 < temp_01)) 
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                        end
                                    else
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = byte_size ;
                                            else
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                        end
                                end
                        end
                end
            default : 
                getCASE1DataImpl_wBEN = 8 ;
            endcase 
        end
    endfunction
    function [31:0] getCASE1DataImpl ; 
        input [31:0] addr_a_depth ; 
        input [31:0] data_a_width ; 
        input [31:0] addr_b_depth ; 
        input [31:0] data_b_width ; 
        input is_taking_port_a ; 
        input is_taking_total_ebr ; 
        input [31:0] family_code ; 
        reg [5:0] num0, 
            num1, 
            limit ; 
        reg [31:0] divisor, 
            addr_div_prtA, 
            data_div_prtA, 
            addr_div_prtB, 
            data_div_prtB ; 
        reg [31:0] portA_addr_chk, 
            portA_data_chk, 
            portB_addr_chk, 
            portB_data_chk ; 
        reg [31:0] EBR_usage, 
            PROD ; 
        begin
            divisor = ((addr_a_depth > addr_b_depth) ? (addr_a_depth / addr_b_depth) : (addr_b_depth / addr_a_depth)) ;
            EBR_usage = {32{1'b1}} ;
            getCASE1DataImpl = 0 ;
            if ((((family_code == _FCODE_LIFCL_) && (divisor <= 2)) || ((family_code == _FCODE_AP6_) && (divisor <= 4)))) 
                begin
                    limit = ((family_code == _FCODE_LIFCL_) ? 2 : 3) ;
                    for (num0 = 0 ; (num0 < limit) ; num0 = (num0 + 1))
                        begin
                            data_div_prtA = getDatabase(9,
                                    num0,
                                    family_code) ;
                            addr_div_prtA = data_to_addr(data_div_prtA,
                                    family_code) ;
                            portA_addr_chk = roundUP(addr_a_depth,
                                    addr_div_prtA) ;
                            portA_data_chk = roundUP(data_a_width,
                                    data_div_prtA) ;
                            for (num1 = 0 ; (num1 < limit) ; num1 = (num1 + 1))
                                begin
                                    data_div_prtB = getDatabase(9,
                                            num1,
                                            family_code) ;
                                    addr_div_prtB = data_to_addr(data_div_prtB,
                                            family_code) ;
                                    portB_addr_chk = roundUP(addr_b_depth,
                                            addr_div_prtB) ;
                                    portB_data_chk = roundUP(data_b_width,
                                            data_div_prtB) ;
                                    if (((portA_addr_chk == portB_addr_chk) && (portA_data_chk == portB_data_chk))) 
                                        begin
                                            if ((((data_a_width % data_div_prtA) == 0) && ((data_b_width % data_div_prtB) == 0))) 
                                                begin
                                                    PROD = (portA_addr_chk * portA_data_chk) ;
                                                    if ((PROD < EBR_usage)) 
                                                        begin
                                                            EBR_usage = PROD ;
                                                            if ((is_taking_total_ebr == 1'b1)) 
                                                                getCASE1DataImpl = EBR_usage ;
                                                            else
                                                                if ((is_taking_port_a == 1'b1)) 
                                                                    getCASE1DataImpl = data_div_prtA ;
                                                                else
                                                                    getCASE1DataImpl = data_div_prtB ;
                                                        end
                                                end
                                        end
                                end
                        end
                end
            limit = ((family_code == _FCODE_LIFCL_) ? 5 : 6) ;
            for (num0 = 0 ; (num0 < limit) ; num0 = (num0 + 1))
                begin
                    data_div_prtA = getDatabase(8,
                            num0,
                            family_code) ;
                    addr_div_prtA = data_to_addr(data_div_prtA,
                            family_code) ;
                    portA_addr_chk = roundUP(addr_a_depth,
                            addr_div_prtA) ;
                    portA_data_chk = roundUP(data_a_width,
                            data_div_prtA) ;
                    for (num1 = 0 ; (num1 < limit) ; num1 = (num1 + 1))
                        begin
                            data_div_prtB = getDatabase(8,
                                    num1,
                                    family_code) ;
                            addr_div_prtB = data_to_addr(data_div_prtB,
                                    family_code) ;
                            portB_addr_chk = roundUP(addr_b_depth,
                                    addr_div_prtB) ;
                            portB_data_chk = roundUP(data_b_width,
                                    data_div_prtB) ;
                            if (((portA_addr_chk == portB_addr_chk) && (portA_data_chk == portB_data_chk))) 
                                begin
                                    if ((((data_a_width % data_div_prtA) == 0) && ((data_b_width % data_div_prtB) == 0))) 
                                        begin
                                            PROD = (portA_addr_chk * portA_data_chk) ;
                                            if ((PROD < EBR_usage)) 
                                                begin
                                                    EBR_usage = PROD ;
                                                    if ((is_taking_total_ebr == 1'b1)) 
                                                        getCASE1DataImpl = EBR_usage ;
                                                    else
                                                        if ((is_taking_port_a == 1'b1)) 
                                                            getCASE1DataImpl = data_div_prtA ;
                                                        else
                                                            getCASE1DataImpl = data_div_prtB ;
                                                end
                                        end
                                end
                        end
                end
        end
    endfunction
    function [31:0] procData ; 
        input [31:0] max_data ; 
        input [31:0] family_code ; 
        begin
            procData = 1 ;
            while ((procData < max_data))
                begin
                    case (family_code)
                    _FCODE_LIFCL_,
                            _FCODE_AP6_ : 
                        begin
                            if ((procData < 8)) 
                                begin
                                    procData = (procData * 2) ;
                                end
                            else
                                begin
                                    if ((procData == 8)) 
                                        begin
                                            procData = 9 ;
                                        end
                                    else
                                        if (((procData % 9) == 0)) 
                                            begin
                                                procData = ((procData / 9) * 16) ;
                                            end
                                        else
                                            begin
                                                procData = ((procData / 8) * 9) ;
                                            end
                                end
                        end
                    default : 
                        procData = max_data ;
                    endcase 
                end
        end
    endfunction
    function [31:0] data_to_addr ; 
        input [31:0] data_size ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (data_size)
                    18 : 
                        data_to_addr = 1024 ;
                    16 : 
                        data_to_addr = 1024 ;
                    9 : 
                        data_to_addr = 2048 ;
                    8 : 
                        data_to_addr = 2048 ;
                    4 : 
                        data_to_addr = 4096 ;
                    2 : 
                        data_to_addr = 8192 ;
                    default : 
                        data_to_addr = 16384 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (data_size)
                    36 : 
                        data_to_addr = 1024 ;
                    32 : 
                        data_to_addr = 1024 ;
                    18 : 
                        data_to_addr = 2048 ;
                    16 : 
                        data_to_addr = 2048 ;
                    9 : 
                        data_to_addr = 4096 ;
                    8 : 
                        data_to_addr = 4096 ;
                    4 : 
                        data_to_addr = 8192 ;
                    2 : 
                        data_to_addr = 16384 ;
                    default : 
                        data_to_addr = 32768 ;
                    endcase 
                end
            default : 
                data_to_addr = 1024 ;
            endcase 
        end
    endfunction
    function [31:0] getMinimaData ; 
        input [31:0] depth_impl ; 
        input [31:0] width_impl ; 
        input is_byte_en ; 
        input [31:0] byte_size ; 
        input [31:0] family_code ; 
        reg [31:0] temp_00, 
            temp_01, 
            temp_02, 
            temp_03, 
            temp_04, 
            temp_05 ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    temp_00 = EBR_impl(depth_impl,
                            width_impl,
                            1024,
                            18) ;
                    temp_01 = EBR_impl(depth_impl,
                            width_impl,
                            2048,
                            9) ;
                    temp_02 = EBR_impl(depth_impl,
                            width_impl,
                            4096,
                            4) ;
                    temp_03 = EBR_impl(depth_impl,
                            width_impl,
                            8192,
                            2) ;
                    temp_04 = EBR_impl(depth_impl,
                            width_impl,
                            16384,
                            1) ;
                    if (((is_byte_en == 1) && ((width_impl % 9) != 0))) 
                        begin
                            temp_00 = EBR_impl(depth_impl,
                                    width_impl,
                                    1024,
                                    16) ;
                            temp_01 = EBR_impl(depth_impl,
                                    width_impl,
                                    2048,
                                    8) ;
                            if (((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04))) 
                                getMinimaData = 16 ;
                            else
                                if ((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04))) 
                                    getMinimaData = 8 ;
                                else
                                    if (((temp_02 < temp_03) && (temp_02 < temp_04))) 
                                        getMinimaData = 4 ;
                                    else
                                        if ((temp_03 < temp_04)) 
                                            getMinimaData = 2 ;
                                        else
                                            getMinimaData = 1 ;
                        end
                    else
                        begin
                            if (((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04))) 
                                getMinimaData = 18 ;
                            else
                                if ((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04))) 
                                    getMinimaData = 9 ;
                                else
                                    if (((temp_02 < temp_03) && (temp_02 < temp_04))) 
                                        getMinimaData = 4 ;
                                    else
                                        if ((temp_03 < temp_04)) 
                                            getMinimaData = 2 ;
                                        else
                                            getMinimaData = 1 ;
                        end
                end
            _FCODE_AP6_ : 
                begin
                    temp_00 = EBR_impl(depth_impl,
                            width_impl,
                            1024,
                            36) ;
                    temp_01 = EBR_impl(depth_impl,
                            width_impl,
                            2048,
                            18) ;
                    temp_02 = EBR_impl(depth_impl,
                            width_impl,
                            4096,
                            9) ;
                    temp_03 = EBR_impl(depth_impl,
                            width_impl,
                            8192,
                            4) ;
                    temp_04 = EBR_impl(depth_impl,
                            width_impl,
                            16384,
                            2) ;
                    temp_05 = EBR_impl(depth_impl,
                            width_impl,
                            32768,
                            1) ;
                    if (((is_byte_en == 1) && ((width_impl % 9) != 0))) 
                        begin
                            temp_00 = EBR_impl(depth_impl,
                                    width_impl,
                                    1024,
                                    32) ;
                            temp_01 = EBR_impl(depth_impl,
                                    width_impl,
                                    2048,
                                    16) ;
                            temp_02 = EBR_impl(depth_impl,
                                    width_impl,
                                    4096,
                                    8) ;
                            if ((((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04)) && (temp_00 < temp_05))) 
                                getMinimaData = 32 ;
                            else
                                if (((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04)) && (temp_01 < temp_05))) 
                                    getMinimaData = 16 ;
                                else
                                    if ((((temp_02 < temp_03) && (temp_02 < temp_04)) && (temp_02 < temp_05))) 
                                        getMinimaData = 8 ;
                                    else
                                        if (((temp_03 < temp_04) && (temp_03 < temp_05))) 
                                            getMinimaData = 4 ;
                                        else
                                            if ((temp_04 < temp_05)) 
                                                getMinimaData = 2 ;
                                            else
                                                getMinimaData = 1 ;
                        end
                    else
                        begin
                            if ((((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04)) && (temp_00 < temp_05))) 
                                getMinimaData = 36 ;
                            else
                                if (((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04)) && (temp_01 < temp_05))) 
                                    getMinimaData = 18 ;
                                else
                                    if ((((temp_02 < temp_03) && (temp_02 < temp_04)) && (temp_02 < temp_05))) 
                                        getMinimaData = 9 ;
                                    else
                                        if (((temp_03 < temp_04) && (temp_03 < temp_05))) 
                                            getMinimaData = 4 ;
                                        else
                                            if ((temp_04 < temp_05)) 
                                                getMinimaData = 2 ;
                                            else
                                                getMinimaData = 1 ;
                        end
                end
            default : 
                getMinimaData = 8 ;
            endcase 
        end
    endfunction
    function [31:0] getByteSize ; 
        input [31:0] data_width ; 
        input [31:0] dev_code ; 
        begin
            case (dev_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((data_width % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
    function [31:0] EBR_impl ; 
        input [31:0] DEPTH_IMPL ; 
        input [31:0] WIDTH_IMPL ; 
        input [31:0] ADDR_DEPTH_X ; 
        input [31:0] DATA_WIDTH_X ; 
        begin
            EBR_impl = (roundUP(DEPTH_IMPL,
                    ADDR_DEPTH_X) * roundUP(WIDTH_IMPL,
                    DATA_WIDTH_X)) ;
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2023 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_core.v
// Title                 :
// Dependencies          :
// Description           : Implements a single true dual port EBR primitive.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem0_ipgen_lscc_ram_dp_true_core #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "ap6a400") ? _FCODE_AP6_ : ((FAMILY == "ap6a00b") ? _FCODE_AP6_ : ((FAMILY == "ap6a00") ? _FCODE_AP6_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_)))))), 
        parameter DATA_WIDTH_A = 18, 
        parameter ADDR_WIDTH_A = getAddrWidth(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter REGMODE_A = "reg", 
        parameter RESETMODE_A = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(FAMILY_CODE,
                DATA_WIDTH_A), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 0) ? 1 : roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A)), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter DATA_WIDTH_B = 18, 
        parameter ADDR_WIDTH_B = getAddrWidth(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter REGMODE_B = "reg", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(FAMILY_CODE,
                DATA_WIDTH_B), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 0) ? 1 : roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B)), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter POSx = 0, 
        parameter POSy = 0, 
        parameter STRING_SIZE = calculateStringSize(POSx,
                POSy), 
        parameter INIT_DATA = "DYNAMIC", 
        parameter INIT_MODE = "none", 
        parameter INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_20 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_21 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_22 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_23 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_24 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_25 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_26 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_27 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_28 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_29 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_30 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_31 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_32 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_33 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_34 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_35 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_36 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_37 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_38 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_39 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_40 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_41 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_42 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_43 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_44 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_45 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_46 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_47 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_48 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_49 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_50 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_51 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_52 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_53 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_54 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_55 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_56 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_57 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_58 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_59 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_60 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_61 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_62 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_63 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_64 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_65 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_66 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_67 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_68 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_69 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_70 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_71 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_72 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_73 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_74 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_75 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_76 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_77 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_78 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_79 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000") (
    // ---------------------------
    // --------- Family parameters
    // ---------------------------
    // ---------------------------
    // --------- PORT A parameters
    // ---------------------------
    // ---------------------------
    // --------- PORT B parameters
    // ---------------------------
    // ---------------------------
    // --------- Common parameters
    // ---------------------------
    // ---------------------------
    // - PORT A input/output ports
    // ---------------------------
    input clk_a_i, 
    input clk_en_a_i, 
    input rst_a_i, 
    input wr_en_a_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    // ---------------------------
    // - PORT B input/output ports
    // ---------------------------
    input clk_b_i, 
    input clk_en_b_i, 
    input rst_b_i, 
    input wr_en_b_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o) ;
    // -----------------------------------------------------------------------------
    // Local Parameters
    // -----------------------------------------------------------------------------
    localparam POS_X0 = (POSx % 10) ; 
    localparam POS_X1 = ((POSx / 10) % 10) ; 
    localparam POS_X2 = ((POSx / 100) % 10) ; 
    localparam POS_X3 = ((POSx / 1000) % 10) ; 
    localparam POS_X4 = ((POSx / 10000) % 10) ; 
    localparam POS_X5 = ((POSx / 100000) % 10) ; 
    localparam POS_X6 = ((POSx / 1000000) % 10) ; 
    localparam POS_X7 = ((POSx / 10000000) % 10) ; 
    localparam POS_Y0 = (POSy % 10) ; 
    localparam POS_Y1 = ((POSy / 10) % 10) ; 
    localparam POS_Y2 = ((POSy / 100) % 10) ; 
    localparam POS_Y3 = ((POSy / 1000) % 10) ; 
    localparam POS_Y4 = ((POSy / 10000) % 10) ; 
    localparam POS_Y5 = ((POSy / 100000) % 10) ; 
    localparam POS_Y6 = ((POSy / 1000000) % 10) ; 
    localparam POS_Y7 = ((POSy / 10000000) % 10) ; 
    localparam [79:0] NUM_STRING = "9876543210" ; 
    localparam BLOCK_POS = getStringFromPos(POSx,
                POSy) ; 
    localparam BLOCK_SIZE = ((DATA_WIDTH_A == 36) ? "[36,1024]" : ((DATA_WIDTH_A == 32) ? "[32,1024]" : ((DATA_WIDTH_A == 18) ? ((((((FAMILY == "ap6a400") || (FAMILY == "ap6a00b")) || (FAMILY == "ap6a00")) || (FAMILY == "LATG1")) || (FAMILY == "LAV-AT")) ? "[18,1024]" : "[18,2048]") : ((DATA_WIDTH_A == 16) ? ((((((FAMILY == "ap6a400") || (FAMILY == "ap6a00b")) || (FAMILY == "ap6a00")) || (FAMILY == "LATG1")) || (FAMILY == "LAV-AT")) ? "[16,1024]" : "[16,2048]") : ((DATA_WIDTH_A == 9) ? ((((((FAMILY == "ap6a400") || (FAMILY == "ap6a00b")) || (FAMILY == "ap6a00")) || (FAMILY == "LATG1")) || (FAMILY == "LAV-AT")) ? "[9,2048]" : "[9,4096]") : ((DATA_WIDTH_A == 8) ? ((((((FAMILY == "ap6a400") || (FAMILY == "ap6a00b")) || (FAMILY == "ap6a00")) || (FAMILY == "LATG1")) || (FAMILY == "LAV-AT")) ? "[8,2048]" : "[8,4096]") : ((DATA_WIDTH_A == 4) ? ((((((FAMILY == "ap6a400") || (FAMILY == "ap6a00b")) || (FAMILY == "ap6a00")) || (FAMILY == "LATG1")) || (FAMILY == "LAV-AT")) ? "[4,4096]" : "[4,8192]") : ((DATA_WIDTH_A == 2) ? ((((((FAMILY == "ap6a400") || (FAMILY == "ap6a00b")) || (FAMILY == "ap6a00")) || (FAMILY == "LATG1")) || (FAMILY == "LAV-AT")) ? "[2,8192]" : "[2,16384]") : ((((((FAMILY == "ap6a400") || (FAMILY == "ap6a00b")) || (FAMILY == "ap6a00")) || (FAMILY == "LATG1")) || (FAMILY == "LAV-AT")) ? "[1,16384]" : "[1,32768]"))))))))) ; 
    if ((FAMILY_CODE == _FCODE_LIFCL_)) 
        begin : LIFCL
            wire [13:0] addr_a_w ; 
            wire [17:0] in_a_w ; 
            wire [17:0] out_a_w ; 
            wire [13:0] addr_b_w ; 
            wire [17:0] in_b_w ; 
            wire [17:0] out_b_w ; 
            if (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16))) 
                begin : genblk1
                    assign addr_a_w[13:4] = addr_a_i ; 
                    assign addr_a_w[3:2] = 2'b11 ; 
                    assign addr_a_w[1:0] = ((BYTE_ENABLE_A == 1) ? ben_a_i : 2'b11) ; 
                    if ((DATA_WIDTH_A == 18)) 
                        begin : genblk1
                            assign in_a_w = wr_data_a_i ; 
                            assign rd_data_a_o = out_a_w ; 
                        end
                    else
                        begin : genblk1
                            assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                            assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                            assign in_a_w[8] = 1'b0 ; 
                            assign in_a_w[17] = 1'b0 ; 
                            assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                            assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                        end
                end
            else
                begin : genblk1
                    assign addr_a_w[13:(14 - ADDR_WIDTH_A)] = addr_a_i ; 
                    if ((ADDR_WIDTH_A != 14)) 
                        begin : genblk1
                            assign addr_a_w[(14 - (ADDR_WIDTH_A + 1)):0] = {(14 - ADDR_WIDTH_A){1'b1}} ; 
                        end
                    assign in_a_w[17:DATA_WIDTH_A] = {(18 - DATA_WIDTH_A){1'b0}} ; 
                    assign in_a_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                    assign rd_data_a_o = out_a_w[(DATA_WIDTH_A - 1):0] ; 
                end
            if (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16))) 
                begin : genblk2
                    assign addr_b_w[13:4] = addr_b_i ; 
                    assign addr_b_w[3:2] = 2'b11 ; 
                    assign addr_b_w[1:0] = ((BYTE_ENABLE_B == 1) ? ben_b_i : 2'b11) ; 
                    if ((DATA_WIDTH_B == 18)) 
                        begin : genblk1
                            assign in_b_w = wr_data_b_i ; 
                            assign rd_data_b_o = out_b_w ; 
                        end
                    else
                        begin : genblk1
                            assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                            assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                            assign in_b_w[8] = 1'b0 ; 
                            assign in_b_w[17] = 1'b0 ; 
                            assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                            assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                        end
                end
            else
                begin : genblk2
                    assign addr_b_w[13:(14 - ADDR_WIDTH_B)] = addr_b_i ; 
                    if ((ADDR_WIDTH_B != 14)) 
                        begin : genblk1
                            assign addr_b_w[(14 - (ADDR_WIDTH_B + 1)):0] = {(14 - ADDR_WIDTH_B){1'b1}} ; 
                        end
                    assign in_b_w[17:DATA_WIDTH_B] = {(18 - DATA_WIDTH_B){1'b0}} ; 
                    assign in_b_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                    assign rd_data_b_o = out_b_w[(DATA_WIDTH_B - 1):0] ; 
                end
            wire t_wr_en_a_i = (((BYTE_ENABLE_A == 0) || (BYTE_WIDTH_A > 1)) ? wr_en_a_i : (wr_en_a_i & ben_a_i)) ; 
            wire t_wr_en_b_i = (((BYTE_ENABLE_B == 0) || (BYTE_WIDTH_B > 1)) ? wr_en_b_i : (wr_en_b_i & ben_b_i)) ; 
            wire [17:0] DIA = in_a_w ; 
            wire [17:0] DIB = in_b_w ; 
            wire [13:0] ADA = addr_a_w ; 
            wire [13:0] ADB = addr_b_w ; 
            wire CLKA = clk_a_i ; 
            wire CLKB = clk_b_i ; 
            wire CEA = clk_en_a_i ; 
            wire CEB = clk_en_b_i ; 
            wire WEA = t_wr_en_a_i ; 
            wire WEB = t_wr_en_b_i ; 
            wire [2:0] CSA = {clk_en_a_i,
                        clk_en_a_i,
                        clk_en_a_i} ; 
            wire [2:0] CSB = {clk_en_b_i,
                        clk_en_b_i,
                        clk_en_b_i} ; 
            wire RSTA = rst_a_i ; 
            wire RSTB = rst_b_i ; 
            localparam DW_A = (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16)) ? "X18" : (((DATA_WIDTH_A == 9) || (DATA_WIDTH_A == 8)) ? "X9" : ((DATA_WIDTH_A == 4) ? "X4" : ((DATA_WIDTH_A == 2) ? "X2" : "X1")))) ; 
            localparam REG_A = ((REGMODE_A == "reg") ? "USED" : "BYPASSED") ; 
            localparam RST_A = ((RESETMODE_A == "sync") ? "SYNC" : "ASYNC") ; 
            localparam CSC_A = "000" ; 
            localparam RST_REL_A = ((RESET_RELEASE_A == "sync") ? "SYNC" : "ASYNC") ; 
            localparam DW_B = (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16)) ? "X18" : (((DATA_WIDTH_B == 9) || (DATA_WIDTH_B == 8)) ? "X9" : ((DATA_WIDTH_B == 4) ? "X4" : ((DATA_WIDTH_B == 2) ? "X2" : "X1")))) ; 
            localparam REG_B = ((REGMODE_B == "reg") ? "USED" : "BYPASSED") ; 
            localparam RST_B = ((RESETMODE_B == "sync") ? "SYNC" : "ASYNC") ; 
            localparam CSC_B = "000" ; 
            localparam RST_REL_B = ((RESET_RELEASE_B == "sync") ? "SYNC" : "ASYNC") ; 
            localparam MEM_TYPE = "EBR" ; 
            localparam T_MEM_SIZE = {"[",
                        MEM_SIZE,
                        "]"} ; 
            (* ECO_MEM_TYPE=MEM_TYPE, ECO_MEM_ID=MEM_ID, ECO_MEM_SIZE=T_MEM_SIZE, ECO_MEM_BLOCK_SIZE=BLOCK_SIZE, ECO_MEM_BLOCK_POS=BLOCK_POS *) DP16K dp16k (.DIA(DIA), 
                        .DIB(DIB), 
                        .ADA(ADA), 
                        .ADB(ADB), 
                        .CLKA(CLKA), 
                        .CLKB(CLKB), 
                        .WEA(WEA), 
                        .WEB(WEB), 
                        .CEA(CEA), 
                        .CEB(CEB), 
                        .RSTA(RSTA), 
                        .RSTB(RSTB), 
                        .CSA(CSA), 
                        .CSB(CSB), 
                        .DOA(out_a_w), 
                        .DOB(out_b_w)) ; 
            defparam dp16k.DATA_WIDTH_A = DW_A ; 
            defparam dp16k.DATA_WIDTH_B = DW_B ; 
            defparam dp16k.OUTREG_A = REG_A ; 
            defparam dp16k.OUTREG_B = REG_B ; 
            defparam dp16k.RESETMODE_A = RST_A ; 
            defparam dp16k.RESETMODE_B = RST_B ; 
            defparam dp16k.CSDECODE_A = CSC_A ; 
            defparam dp16k.CSDECODE_B = CSC_B ; 
            defparam dp16k.ASYNC_RST_RELEASE_A = RST_REL_A ; 
            defparam dp16k.ASYNC_RST_RELEASE_B = RST_REL_B ; 
            defparam dp16k.INIT_DATA = INIT_DATA ; 
            defparam dp16k.INITVAL_00 = ((INIT_MODE == "mem_file") ? INITVAL_00 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_01 = ((INIT_MODE == "mem_file") ? INITVAL_01 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_02 = ((INIT_MODE == "mem_file") ? INITVAL_02 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_03 = ((INIT_MODE == "mem_file") ? INITVAL_03 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_04 = ((INIT_MODE == "mem_file") ? INITVAL_04 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_05 = ((INIT_MODE == "mem_file") ? INITVAL_05 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_06 = ((INIT_MODE == "mem_file") ? INITVAL_06 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_07 = ((INIT_MODE == "mem_file") ? INITVAL_07 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_08 = ((INIT_MODE == "mem_file") ? INITVAL_08 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_09 = ((INIT_MODE == "mem_file") ? INITVAL_09 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0A = ((INIT_MODE == "mem_file") ? INITVAL_0A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0B = ((INIT_MODE == "mem_file") ? INITVAL_0B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0C = ((INIT_MODE == "mem_file") ? INITVAL_0C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0D = ((INIT_MODE == "mem_file") ? INITVAL_0D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0E = ((INIT_MODE == "mem_file") ? INITVAL_0E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0F = ((INIT_MODE == "mem_file") ? INITVAL_0F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_10 = ((INIT_MODE == "mem_file") ? INITVAL_10 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_11 = ((INIT_MODE == "mem_file") ? INITVAL_11 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_12 = ((INIT_MODE == "mem_file") ? INITVAL_12 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_13 = ((INIT_MODE == "mem_file") ? INITVAL_13 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_14 = ((INIT_MODE == "mem_file") ? INITVAL_14 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_15 = ((INIT_MODE == "mem_file") ? INITVAL_15 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_16 = ((INIT_MODE == "mem_file") ? INITVAL_16 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_17 = ((INIT_MODE == "mem_file") ? INITVAL_17 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_18 = ((INIT_MODE == "mem_file") ? INITVAL_18 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_19 = ((INIT_MODE == "mem_file") ? INITVAL_19 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1A = ((INIT_MODE == "mem_file") ? INITVAL_1A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1B = ((INIT_MODE == "mem_file") ? INITVAL_1B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1C = ((INIT_MODE == "mem_file") ? INITVAL_1C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1D = ((INIT_MODE == "mem_file") ? INITVAL_1D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1E = ((INIT_MODE == "mem_file") ? INITVAL_1E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1F = ((INIT_MODE == "mem_file") ? INITVAL_1F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_20 = ((INIT_MODE == "mem_file") ? INITVAL_20 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_21 = ((INIT_MODE == "mem_file") ? INITVAL_21 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_22 = ((INIT_MODE == "mem_file") ? INITVAL_22 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_23 = ((INIT_MODE == "mem_file") ? INITVAL_23 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_24 = ((INIT_MODE == "mem_file") ? INITVAL_24 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_25 = ((INIT_MODE == "mem_file") ? INITVAL_25 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_26 = ((INIT_MODE == "mem_file") ? INITVAL_26 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_27 = ((INIT_MODE == "mem_file") ? INITVAL_27 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_28 = ((INIT_MODE == "mem_file") ? INITVAL_28 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_29 = ((INIT_MODE == "mem_file") ? INITVAL_29 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2A = ((INIT_MODE == "mem_file") ? INITVAL_2A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2B = ((INIT_MODE == "mem_file") ? INITVAL_2B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2C = ((INIT_MODE == "mem_file") ? INITVAL_2C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2D = ((INIT_MODE == "mem_file") ? INITVAL_2D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2E = ((INIT_MODE == "mem_file") ? INITVAL_2E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2F = ((INIT_MODE == "mem_file") ? INITVAL_2F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_30 = ((INIT_MODE == "mem_file") ? INITVAL_30 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_31 = ((INIT_MODE == "mem_file") ? INITVAL_31 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_32 = ((INIT_MODE == "mem_file") ? INITVAL_32 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_33 = ((INIT_MODE == "mem_file") ? INITVAL_33 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_34 = ((INIT_MODE == "mem_file") ? INITVAL_34 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_35 = ((INIT_MODE == "mem_file") ? INITVAL_35 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_36 = ((INIT_MODE == "mem_file") ? INITVAL_36 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_37 = ((INIT_MODE == "mem_file") ? INITVAL_37 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_38 = ((INIT_MODE == "mem_file") ? INITVAL_38 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_39 = ((INIT_MODE == "mem_file") ? INITVAL_39 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3A = ((INIT_MODE == "mem_file") ? INITVAL_3A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3B = ((INIT_MODE == "mem_file") ? INITVAL_3B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3C = ((INIT_MODE == "mem_file") ? INITVAL_3C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3D = ((INIT_MODE == "mem_file") ? INITVAL_3D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3E = ((INIT_MODE == "mem_file") ? INITVAL_3E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3F = ((INIT_MODE == "mem_file") ? INITVAL_3F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
        end
    else
        if ((FAMILY_CODE == _FCODE_AP6_)) 
            begin : AP6
                wire [14:0] addr_a_w ; 
                wire [35:0] in_a_w ; 
                wire [35:0] out_a_w ; 
                wire [14:0] addr_b_w ; 
                wire [35:0] in_b_w ; 
                wire [35:0] out_b_w ; 
                if (((DATA_WIDTH_A == 36) || (DATA_WIDTH_A == 32))) 
                    begin : genblk1
                        assign addr_a_w[14:5] = addr_a_i ; 
                        assign addr_a_w[4] = 1'b1 ; 
                        assign addr_a_w[3:0] = ((BYTE_ENABLE_A == 1) ? ben_a_i : 4'b1111) ; 
                        if ((DATA_WIDTH_A == 36)) 
                            begin : genblk1
                                assign in_a_w = wr_data_a_i ; 
                                assign rd_data_a_o = out_a_w ; 
                            end
                        else
                            begin : genblk1
                                assign in_a_w[34:27] = wr_data_a_i[31:24] ; 
                                assign in_a_w[25:18] = wr_data_a_i[23:16] ; 
                                assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                                assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                                assign in_a_w[8] = 1'b0 ; 
                                assign in_a_w[17] = 1'b0 ; 
                                assign in_a_w[26] = 1'b0 ; 
                                assign in_a_w[35] = 1'b0 ; 
                                assign rd_data_a_o[31:24] = out_a_w[34:27] ; 
                                assign rd_data_a_o[23:16] = out_a_w[25:18] ; 
                                assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                                assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                            end
                    end
                else
                    if (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16))) 
                        begin : genblk1
                            assign addr_a_w[14:4] = addr_a_i ; 
                            assign addr_a_w[3] = ((BYTE_ENABLE_A == 1) ? ben_a_i[1] : 1'b1) ; 
                            assign addr_a_w[2] = ((BYTE_ENABLE_A == 1) ? ben_a_i[0] : 1'b1) ; 
                            assign addr_a_w[1] = ((BYTE_ENABLE_A == 1) ? ben_a_i[1] : 1'b1) ; 
                            assign addr_a_w[0] = ((BYTE_ENABLE_A == 1) ? ben_a_i[0] : 1'b1) ; 
                            if ((DATA_WIDTH_A == 18)) 
                                begin : genblk1
                                    assign in_a_w[17:0] = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_w[17:0] ; 
                                end
                            else
                                begin : genblk1
                                    assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                                    assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                                    assign in_a_w[8] = 1'b0 ; 
                                    assign in_a_w[17] = 1'b0 ; 
                                    assign in_a_w[35:18] = {18{1'b0}} ; 
                                    assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                                    assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                                end
                        end
                    else
                        begin : genblk1
                            assign addr_a_w[14:(15 - ADDR_WIDTH_A)] = addr_a_i ; 
                            if ((ADDR_WIDTH_A != 15)) 
                                begin : genblk1
                                    assign addr_a_w[(15 - (ADDR_WIDTH_A + 1)):0] = {(15 - ADDR_WIDTH_A){1'b1}} ; 
                                end
                            assign in_a_w[35:DATA_WIDTH_A] = {(36 - DATA_WIDTH_A){1'b0}} ; 
                            assign in_a_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                            assign rd_data_a_o = out_a_w[(DATA_WIDTH_A - 1):0] ; 
                        end
                if (((DATA_WIDTH_B == 36) || (DATA_WIDTH_B == 32))) 
                    begin : genblk2
                        assign addr_b_w[14:5] = addr_b_i ; 
                        assign addr_b_w[4] = 1'b1 ; 
                        assign addr_b_w[3:0] = ((BYTE_ENABLE_B == 1) ? ben_b_i : 4'b1111) ; 
                        if ((DATA_WIDTH_B == 36)) 
                            begin : genblk1
                                assign in_b_w = wr_data_b_i ; 
                                assign rd_data_b_o = out_b_w ; 
                            end
                        else
                            begin : genblk1
                                assign in_b_w[34:27] = wr_data_b_i[31:24] ; 
                                assign in_b_w[25:18] = wr_data_b_i[23:16] ; 
                                assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                                assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                                assign in_b_w[8] = 1'b0 ; 
                                assign in_b_w[17] = 1'b0 ; 
                                assign in_b_w[26] = 1'b0 ; 
                                assign in_b_w[35] = 1'b0 ; 
                                assign rd_data_b_o[31:24] = out_b_w[34:27] ; 
                                assign rd_data_b_o[23:16] = out_b_w[25:18] ; 
                                assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                                assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                            end
                    end
                else
                    if (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16))) 
                        begin : genblk2
                            assign addr_b_w[14:4] = addr_b_i ; 
                            assign addr_b_w[3] = ((BYTE_ENABLE_B == 1) ? ben_b_i[1] : 1'b1) ; 
                            assign addr_b_w[2] = ((BYTE_ENABLE_B == 1) ? ben_b_i[0] : 1'b1) ; 
                            assign addr_b_w[1] = ((BYTE_ENABLE_B == 1) ? ben_b_i[1] : 1'b1) ; 
                            assign addr_b_w[0] = ((BYTE_ENABLE_B == 1) ? ben_b_i[0] : 1'b1) ; 
                            if ((DATA_WIDTH_B == 18)) 
                                begin : genblk1
                                    assign in_b_w[17:0] = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_w[17:0] ; 
                                end
                            else
                                begin : genblk1
                                    assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                                    assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                                    assign in_b_w[8] = 1'b0 ; 
                                    assign in_b_w[17] = 1'b0 ; 
                                    assign in_b_w[35:18] = {18{1'b0}} ; 
                                    assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                                    assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                                end
                        end
                    else
                        begin : genblk2
                            assign addr_b_w[14:(15 - ADDR_WIDTH_B)] = addr_b_i ; 
                            if ((ADDR_WIDTH_B != 15)) 
                                begin : genblk1
                                    assign addr_b_w[(15 - (ADDR_WIDTH_B + 1)):0] = {(15 - ADDR_WIDTH_B){1'b1}} ; 
                                end
                            assign in_b_w[35:DATA_WIDTH_B] = {(36 - DATA_WIDTH_B){1'b0}} ; 
                            assign in_b_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                            assign rd_data_b_o = out_b_w[(DATA_WIDTH_B - 1):0] ; 
                        end
                wire t_wr_en_a_i = (((BYTE_ENABLE_A == 0) || (BYTE_WIDTH_A > 1)) ? wr_en_a_i : (wr_en_a_i & ben_a_i)) ; 
                wire t_wr_en_b_i = (((BYTE_ENABLE_B == 0) || (BYTE_WIDTH_B > 1)) ? wr_en_b_i : (wr_en_b_i & ben_b_i)) ; 
                wire [35:0] DIA = in_a_w ; 
                wire [35:0] DIB = in_b_w ; 
                wire [14:0] ADA = addr_a_w ; 
                wire [14:0] ADB = addr_b_w ; 
                wire CLKA = clk_a_i ; 
                wire CLKB = clk_b_i ; 
                wire CEA = clk_en_a_i ; 
                wire CEB = clk_en_b_i ; 
                wire WEA = t_wr_en_a_i ; 
                wire WEB = t_wr_en_b_i ; 
                wire [2:0] CSA = {clk_en_a_i,
                            clk_en_a_i,
                            clk_en_a_i} ; 
                wire [2:0] CSB = {clk_en_b_i,
                            clk_en_b_i,
                            clk_en_b_i} ; 
                wire RSTA = rst_a_i ; 
                wire RSTB = rst_b_i ; 
                wire OCEA = 1'b1 ; 
                wire OCEB = 1'b1 ; 
                localparam DW_A = (((DATA_WIDTH_A == 36) || (DATA_WIDTH_A == 32)) ? "X36" : (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16)) ? "X18" : (((DATA_WIDTH_A == 9) || (DATA_WIDTH_A == 8)) ? "X9" : ((DATA_WIDTH_A == 4) ? "X4" : ((DATA_WIDTH_A == 2) ? "X2" : "X1"))))) ; 
                localparam REG_A = ((REGMODE_A == "reg") ? "USED" : "BYPASSED") ; 
                localparam RST_A = ((RESETMODE_A == "sync") ? "SYNC" : "ASYNC") ; 
                localparam CSC_A = "000" ; 
                localparam RST_REL_A = ((RESET_RELEASE_A == "sync") ? "SYNC" : "ASYNC") ; 
                localparam DW_B = (((DATA_WIDTH_B == 36) || (DATA_WIDTH_B == 32)) ? "X36" : (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16)) ? "X18" : (((DATA_WIDTH_B == 9) || (DATA_WIDTH_B == 8)) ? "X9" : ((DATA_WIDTH_B == 4) ? "X4" : ((DATA_WIDTH_B == 2) ? "X2" : "X1"))))) ; 
                localparam REG_B = ((REGMODE_B == "reg") ? "USED" : "BYPASSED") ; 
                localparam RST_B = ((RESETMODE_B == "sync") ? "SYNC" : "ASYNC") ; 
                localparam CSC_B = "000" ; 
                localparam RST_REL_B = ((RESET_RELEASE_B == "sync") ? "SYNC" : "ASYNC") ; 
                localparam MEM_TYPE = "EBR" ; 
                localparam T_MEM_SIZE = {"[",
                            MEM_SIZE,
                            "]"} ; 
                (* ECO_MEM_TYPE=MEM_TYPE, ECO_MEM_ID=MEM_ID, ECO_MEM_SIZE=T_MEM_SIZE, ECO_MEM_BLOCK_SIZE=BLOCK_SIZE, ECO_MEM_BLOCK_POS=BLOCK_POS *) DP32K dp32k (.DIA(DIA), 
                            .DIB(DIB), 
                            .ADA(ADA), 
                            .ADB(ADB), 
                            .CLKA(CLKA), 
                            .CLKB(CLKB), 
                            .WEA(WEA), 
                            .WEB(WEB), 
                            .CEA(CEA), 
                            .CEB(CEB), 
                            .OCEA(OCEA), 
                            .OCEB(OCEB), 
                            .RSTA(RSTA), 
                            .RSTB(RSTB), 
                            .CSA(CSA), 
                            .CSB(CSB), 
                            .DOA(out_a_w), 
                            .DOB(out_b_w)) ; 
                defparam dp32k.DATA_WIDTH_A = DW_A ; 
                defparam dp32k.DATA_WIDTH_B = DW_B ; 
                defparam dp32k.OUTREG_A = REG_A ; 
                defparam dp32k.OUTREG_B = REG_B ; 
                defparam dp32k.RESETMODE_A = RST_A ; 
                defparam dp32k.RESETMODE_B = RST_B ; 
                defparam dp32k.CSDECODE_A = CSC_A ; 
                defparam dp32k.CSDECODE_B = CSC_B ; 
                defparam dp32k.ASYNC_RST_RELEASE_A = RST_REL_A ; 
                defparam dp32k.ASYNC_RST_RELEASE_B = RST_REL_B ; 
                defparam dp32k.INIT_DATA = INIT_DATA ; 
                defparam dp32k.INITVAL_00 = ((INIT_MODE == "mem_file") ? INITVAL_00 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_01 = ((INIT_MODE == "mem_file") ? INITVAL_01 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_02 = ((INIT_MODE == "mem_file") ? INITVAL_02 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_03 = ((INIT_MODE == "mem_file") ? INITVAL_03 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_04 = ((INIT_MODE == "mem_file") ? INITVAL_04 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_05 = ((INIT_MODE == "mem_file") ? INITVAL_05 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_06 = ((INIT_MODE == "mem_file") ? INITVAL_06 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_07 = ((INIT_MODE == "mem_file") ? INITVAL_07 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_08 = ((INIT_MODE == "mem_file") ? INITVAL_08 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_09 = ((INIT_MODE == "mem_file") ? INITVAL_09 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0A = ((INIT_MODE == "mem_file") ? INITVAL_0A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0B = ((INIT_MODE == "mem_file") ? INITVAL_0B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0C = ((INIT_MODE == "mem_file") ? INITVAL_0C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0D = ((INIT_MODE == "mem_file") ? INITVAL_0D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0E = ((INIT_MODE == "mem_file") ? INITVAL_0E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0F = ((INIT_MODE == "mem_file") ? INITVAL_0F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_10 = ((INIT_MODE == "mem_file") ? INITVAL_10 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_11 = ((INIT_MODE == "mem_file") ? INITVAL_11 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_12 = ((INIT_MODE == "mem_file") ? INITVAL_12 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_13 = ((INIT_MODE == "mem_file") ? INITVAL_13 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_14 = ((INIT_MODE == "mem_file") ? INITVAL_14 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_15 = ((INIT_MODE == "mem_file") ? INITVAL_15 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_16 = ((INIT_MODE == "mem_file") ? INITVAL_16 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_17 = ((INIT_MODE == "mem_file") ? INITVAL_17 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_18 = ((INIT_MODE == "mem_file") ? INITVAL_18 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_19 = ((INIT_MODE == "mem_file") ? INITVAL_19 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1A = ((INIT_MODE == "mem_file") ? INITVAL_1A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1B = ((INIT_MODE == "mem_file") ? INITVAL_1B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1C = ((INIT_MODE == "mem_file") ? INITVAL_1C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1D = ((INIT_MODE == "mem_file") ? INITVAL_1D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1E = ((INIT_MODE == "mem_file") ? INITVAL_1E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1F = ((INIT_MODE == "mem_file") ? INITVAL_1F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_20 = ((INIT_MODE == "mem_file") ? INITVAL_20 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_21 = ((INIT_MODE == "mem_file") ? INITVAL_21 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_22 = ((INIT_MODE == "mem_file") ? INITVAL_22 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_23 = ((INIT_MODE == "mem_file") ? INITVAL_23 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_24 = ((INIT_MODE == "mem_file") ? INITVAL_24 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_25 = ((INIT_MODE == "mem_file") ? INITVAL_25 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_26 = ((INIT_MODE == "mem_file") ? INITVAL_26 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_27 = ((INIT_MODE == "mem_file") ? INITVAL_27 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_28 = ((INIT_MODE == "mem_file") ? INITVAL_28 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_29 = ((INIT_MODE == "mem_file") ? INITVAL_29 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2A = ((INIT_MODE == "mem_file") ? INITVAL_2A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2B = ((INIT_MODE == "mem_file") ? INITVAL_2B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2C = ((INIT_MODE == "mem_file") ? INITVAL_2C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2D = ((INIT_MODE == "mem_file") ? INITVAL_2D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2E = ((INIT_MODE == "mem_file") ? INITVAL_2E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2F = ((INIT_MODE == "mem_file") ? INITVAL_2F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_30 = ((INIT_MODE == "mem_file") ? INITVAL_30 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_31 = ((INIT_MODE == "mem_file") ? INITVAL_31 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_32 = ((INIT_MODE == "mem_file") ? INITVAL_32 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_33 = ((INIT_MODE == "mem_file") ? INITVAL_33 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_34 = ((INIT_MODE == "mem_file") ? INITVAL_34 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_35 = ((INIT_MODE == "mem_file") ? INITVAL_35 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_36 = ((INIT_MODE == "mem_file") ? INITVAL_36 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_37 = ((INIT_MODE == "mem_file") ? INITVAL_37 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_38 = ((INIT_MODE == "mem_file") ? INITVAL_38 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_39 = ((INIT_MODE == "mem_file") ? INITVAL_39 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3A = ((INIT_MODE == "mem_file") ? INITVAL_3A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3B = ((INIT_MODE == "mem_file") ? INITVAL_3B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3C = ((INIT_MODE == "mem_file") ? INITVAL_3C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3D = ((INIT_MODE == "mem_file") ? INITVAL_3D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3E = ((INIT_MODE == "mem_file") ? INITVAL_3E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3F = ((INIT_MODE == "mem_file") ? INITVAL_3F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_40 = ((INIT_MODE == "mem_file") ? INITVAL_40 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_41 = ((INIT_MODE == "mem_file") ? INITVAL_41 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_42 = ((INIT_MODE == "mem_file") ? INITVAL_42 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_43 = ((INIT_MODE == "mem_file") ? INITVAL_43 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_44 = ((INIT_MODE == "mem_file") ? INITVAL_44 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_45 = ((INIT_MODE == "mem_file") ? INITVAL_45 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_46 = ((INIT_MODE == "mem_file") ? INITVAL_46 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_47 = ((INIT_MODE == "mem_file") ? INITVAL_47 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_48 = ((INIT_MODE == "mem_file") ? INITVAL_48 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_49 = ((INIT_MODE == "mem_file") ? INITVAL_49 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4A = ((INIT_MODE == "mem_file") ? INITVAL_4A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4B = ((INIT_MODE == "mem_file") ? INITVAL_4B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4C = ((INIT_MODE == "mem_file") ? INITVAL_4C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4D = ((INIT_MODE == "mem_file") ? INITVAL_4D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4E = ((INIT_MODE == "mem_file") ? INITVAL_4E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4F = ((INIT_MODE == "mem_file") ? INITVAL_4F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_50 = ((INIT_MODE == "mem_file") ? INITVAL_50 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_51 = ((INIT_MODE == "mem_file") ? INITVAL_51 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_52 = ((INIT_MODE == "mem_file") ? INITVAL_52 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_53 = ((INIT_MODE == "mem_file") ? INITVAL_53 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_54 = ((INIT_MODE == "mem_file") ? INITVAL_54 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_55 = ((INIT_MODE == "mem_file") ? INITVAL_55 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_56 = ((INIT_MODE == "mem_file") ? INITVAL_56 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_57 = ((INIT_MODE == "mem_file") ? INITVAL_57 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_58 = ((INIT_MODE == "mem_file") ? INITVAL_58 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_59 = ((INIT_MODE == "mem_file") ? INITVAL_59 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5A = ((INIT_MODE == "mem_file") ? INITVAL_5A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5B = ((INIT_MODE == "mem_file") ? INITVAL_5B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5C = ((INIT_MODE == "mem_file") ? INITVAL_5C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5D = ((INIT_MODE == "mem_file") ? INITVAL_5D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5E = ((INIT_MODE == "mem_file") ? INITVAL_5E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5F = ((INIT_MODE == "mem_file") ? INITVAL_5F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_60 = ((INIT_MODE == "mem_file") ? INITVAL_60 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_61 = ((INIT_MODE == "mem_file") ? INITVAL_61 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_62 = ((INIT_MODE == "mem_file") ? INITVAL_62 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_63 = ((INIT_MODE == "mem_file") ? INITVAL_63 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_64 = ((INIT_MODE == "mem_file") ? INITVAL_64 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_65 = ((INIT_MODE == "mem_file") ? INITVAL_65 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_66 = ((INIT_MODE == "mem_file") ? INITVAL_66 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_67 = ((INIT_MODE == "mem_file") ? INITVAL_67 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_68 = ((INIT_MODE == "mem_file") ? INITVAL_68 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_69 = ((INIT_MODE == "mem_file") ? INITVAL_69 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6A = ((INIT_MODE == "mem_file") ? INITVAL_6A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6B = ((INIT_MODE == "mem_file") ? INITVAL_6B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6C = ((INIT_MODE == "mem_file") ? INITVAL_6C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6D = ((INIT_MODE == "mem_file") ? INITVAL_6D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6E = ((INIT_MODE == "mem_file") ? INITVAL_6E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6F = ((INIT_MODE == "mem_file") ? INITVAL_6F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_70 = ((INIT_MODE == "mem_file") ? INITVAL_70 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_71 = ((INIT_MODE == "mem_file") ? INITVAL_71 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_72 = ((INIT_MODE == "mem_file") ? INITVAL_72 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_73 = ((INIT_MODE == "mem_file") ? INITVAL_73 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_74 = ((INIT_MODE == "mem_file") ? INITVAL_74 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_75 = ((INIT_MODE == "mem_file") ? INITVAL_75 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_76 = ((INIT_MODE == "mem_file") ? INITVAL_76 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_77 = ((INIT_MODE == "mem_file") ? INITVAL_77 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_78 = ((INIT_MODE == "mem_file") ? INITVAL_78 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_79 = ((INIT_MODE == "mem_file") ? INITVAL_79 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7A = ((INIT_MODE == "mem_file") ? INITVAL_7A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7B = ((INIT_MODE == "mem_file") ? INITVAL_7B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7C = ((INIT_MODE == "mem_file") ? INITVAL_7C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7D = ((INIT_MODE == "mem_file") ? INITVAL_7D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7E = ((INIT_MODE == "mem_file") ? INITVAL_7E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7F = ((INIT_MODE == "mem_file") ? INITVAL_7F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            end
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [31:0] calculateStringSize ; 
        input [31:0] x_calc ; 
        input [31:0] y_calc ; 
        reg [31:0] x_func ; 
        reg [31:0] y_func ; 
        begin
            if ((x_calc >= 10000000)) 
                begin
                    x_func = 8 ;
                end
            else
                if ((x_calc >= 1000000)) 
                    begin
                        x_func = 7 ;
                    end
                else
                    if ((x_calc >= 100000)) 
                        begin
                            x_func = 6 ;
                        end
                    else
                        if ((x_calc >= 10000)) 
                            begin
                                x_func = 5 ;
                            end
                        else
                            if ((x_calc >= 1000)) 
                                begin
                                    x_func = 4 ;
                                end
                            else
                                if ((x_calc >= 100)) 
                                    begin
                                        x_func = 3 ;
                                    end
                                else
                                    if ((x_calc >= 10)) 
                                        begin
                                            x_func = 2 ;
                                        end
                                    else
                                        begin
                                            x_func = 1 ;
                                        end
            if ((y_calc >= 10000000)) 
                begin
                    y_func = 8 ;
                end
            else
                if ((y_calc >= 1000000)) 
                    begin
                        y_func = 7 ;
                    end
                else
                    if ((y_calc >= 100000)) 
                        begin
                            y_func = 6 ;
                        end
                    else
                        if ((y_calc >= 10000)) 
                            begin
                                y_func = 5 ;
                            end
                        else
                            if ((y_calc >= 1000)) 
                                begin
                                    y_func = 4 ;
                                end
                            else
                                if ((y_calc >= 100)) 
                                    begin
                                        y_func = 3 ;
                                    end
                                else
                                    if ((y_calc >= 10)) 
                                        begin
                                            y_func = 2 ;
                                        end
                                    else
                                        begin
                                            y_func = 1 ;
                                        end
            calculateStringSize = (((3 + x_func) + y_func) * 8) ;
        end
    endfunction
    function [(STRING_SIZE - 1):0] getStringFromPos ; 
        input [31:0] x ; 
        input [31:0] y ; 
        begin
            if ((y >= 10000000)) 
                begin
                    if ((x >= 10000000)) 
                        begin
                            getStringFromPos = {"[",
                                    NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                    ",",
                                    NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                    "]"} ;
                        end
                    else
                        if ((x >= 1000000)) 
                            begin
                                getStringFromPos = {"[",
                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                        ",",
                                        NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                        "]"} ;
                            end
                        else
                            if ((x >= 100000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 10000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 1000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 100)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 10)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                end
            else
                if ((y >= 1000000)) 
                    begin
                        if ((x >= 10000000)) 
                            begin
                                getStringFromPos = {"[",
                                        NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                        ",",
                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                        "]"} ;
                            end
                        else
                            if ((x >= 1000000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 100000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 10000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 1000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 100)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 10)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                    end
                else
                    if ((y >= 100000)) 
                        begin
                            if ((x >= 10000000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 1000000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 100000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 10000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 1000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 100)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 10)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                        end
                    else
                        if ((y >= 10000)) 
                            begin
                                if ((x >= 10000000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 1000000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 100000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 10000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                            end
                        else
                            if ((y >= 1000)) 
                                begin
                                    if ((x >= 10000000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 1000000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 100000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 10000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 1000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 100)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 10)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                end
                            else
                                if ((y >= 100)) 
                                    begin
                                        if ((x >= 10000000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 1000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 100000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 10000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 1000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 100)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 10)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                    end
                                else
                                    if ((y >= 10)) 
                                        begin
                                            if ((x >= 10000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 1000)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 100)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    if ((x >= 10)) 
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                                                    else
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                        end
                                    else
                                        begin
                                            if ((x >= 10000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 1000)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 100)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    if ((x >= 10)) 
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                                                    else
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                        end
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] getAddrWidth ; 
        input [31:0] dwid ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (dwid)
                    18 : 
                        getAddrWidth = 10 ;
                    16 : 
                        getAddrWidth = 10 ;
                    9 : 
                        getAddrWidth = 11 ;
                    8 : 
                        getAddrWidth = 11 ;
                    4 : 
                        getAddrWidth = 12 ;
                    2 : 
                        getAddrWidth = 13 ;
                    default : 
                        getAddrWidth = 14 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (dwid)
                    36 : 
                        getAddrWidth = 10 ;
                    32 : 
                        getAddrWidth = 10 ;
                    18 : 
                        getAddrWidth = 11 ;
                    16 : 
                        getAddrWidth = 11 ;
                    9 : 
                        getAddrWidth = 12 ;
                    8 : 
                        getAddrWidth = 12 ;
                    4 : 
                        getAddrWidth = 13 ;
                    2 : 
                        getAddrWidth = 14 ;
                    default : 
                        getAddrWidth = 15 ;
                    endcase 
                end
            default : 
                getAddrWidth = 8 ;
            endcase 
        end
    endfunction
    function [9:0] getByteSize ; 
        input [31:0] family_code ; 
        input [31:0] dwidth_impl ; 
        begin
            case (family_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((dwidth_impl % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
endmodule


