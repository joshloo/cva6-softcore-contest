#############################################################################
# Automatic propagation of clock uncertainty from the IP is not yet supported 
# Please copy this to the project PDC file.
create_generated_clock -name {sclk_o} -source [get_pins -hierarchical {lscc_mc_avant_inst/u_ddrphy/pll_inst/gen_ext_outclkdiv*.u_pll.PLLC_MODE_inst/CLKOPHY}] -divide_by 8 [get_pins -hierarchical {lscc_mc_avant_inst/u_ddrphy/u_eclkdiv/ECLKDIVOUT }]
set_clock_uncertainty -setup 0.075 [get_clocks sclk_o]



#############################################################################
# Below are the constraints for eval design, you dont need these if you are not using the eval

create_generated_clock -name {pclk} -source [get_pins {u_pll0/lscc_pll_inst/gen_ext_outclkdiv*.u_pll.PLLC_MODE_inst/CLKI}] -multiply_by 2 [get_pins {u_pll0/lscc_pll_inst/gen_ext_outclkdiv*.u_pll.PLLC_MODE_inst/CLKOS }] 
# pclk freq is 100MHz, 
# clock uncertainty = (1000/100)*0.05 * 1/2
set_clock_uncertainty -setup 0.250 [get_clocks pclk]

create_generated_clock -name {clk_i} -source [get_pins {u_pll0/lscc_pll_inst/gen_ext_outclkdiv*.u_pll.PLLC_MODE_inst/CLKI}] -multiply_by 5 [get_pins {u_pll0/lscc_pll_inst/gen_ext_outclkdiv*.u_pll.PLLC_MODE_inst/CLKOP }]
# clk_i freq is 250MHz, 
# clock uncertainty = 125
set_clock_uncertainty -setup 0.125 [get_clocks clk_i]


# Constrait for reset synchronizer
set_false_path -to [get_pins {u_*rstn/*rst_regs*/CD}]
set_false_path -from [get_pins {rst_ctrl*/Q}]
set_false_path -from [get_pins {u_arstn/*rst_regs*[1]/Q*}] -to [get_pins {u_arstn/*rst_regs*[2]/D*}]

#  Reset to O/I going to LED is false path
set_false_path -from [get_pins {u_a2rstn/*rst_regs*[2]/Q*}]

# This reset only goes to the reset synchronizers
set_false_path -from [get_pins {u_p0rstn/*rst_regs*[2]/Q*}]


# UART In/Out ports are Async, these are false paths
set_false_path -from [get_pins -hierarchical {u_tragen/uart0_inst/lscc_uart_inst/u_txmitt/*tx_output*/Q}]
set_false_path -to [get_pins -hierarchical {u_tragen/uart0_inst/lscc_uart_inst/u_rxcver/sin_r*/D}]

# outputs that drive LED are async
set_false_path -to [get_pins -hierarchical {u_tragen/gpio0_inst/lscc_gpio_inst/LxxNX.lscc_gpio_lmmi_0/gpio_in_dr0*/D}]
set_false_path -to [get_ports LED*]
set_max_delay -from [get_pins -hierarchical {u_tragen/axi_tragen_inst/u_axi_m_csr/a2p_*/Q}] -datapath_only 3


# Constraints for traffic generator
set_max_delay -from [get_pins -hierarchical {u_tragen/axi_tragen_inst/u_axi_m_csr/csr_*/Q}] -datapath_only 3
set_false_path -to [get_pins -hierarchical {u_tragen/axi_tragen_inst/u_axi_m_csr/cfg_*/D}]

# Constraints for the Traffic generator's performance monitor  
set_false_path -to [get_pins -hierarchical {u_tragen/axi_tragen_inst/u_axi_m_csr/total_num_wr_rd_r*/D}] 
set_false_path -to [get_pins -hierarchical {u_tragen/axi_tragen_inst/u_axi_m_csr/duration_cntr_status_aclk_r*/D}]
set_false_path -to [get_pins -hierarchical {u_tragen/axi_tragen_inst/u_axi_m_csr/duration_cntr_status_sclk_r*/D}]
set_false_path -to [get_pins -hierarchical {u_tragen/axi_tragen_inst/u_axi_perf_calc/*a2s_duration_cntr_en_r1*/D}] 


