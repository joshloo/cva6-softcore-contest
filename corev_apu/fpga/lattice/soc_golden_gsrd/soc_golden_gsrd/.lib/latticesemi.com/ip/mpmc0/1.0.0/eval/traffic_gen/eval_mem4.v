
/*******************************************************************************
    Verilog netlist generated by IPGEN Lattice Radiant Software (64-bit)
    2022.1.0.52.3
    Soft IP Version: 2.1.0
    2023 11 24 10:52:57
*******************************************************************************/
/*******************************************************************************
    Wrapper Module generated per user settings.
*******************************************************************************/
module eval_mem4 (clk_a_i, 
        clk_b_i, 
        rst_a_i, 
        rst_b_i, 
        clk_en_a_i, 
        clk_en_b_i, 
        wr_en_a_i, 
        wr_en_b_i, 
        wr_data_a_i, 
        addr_a_i, 
        rd_data_a_o, 
        wr_data_b_i, 
        addr_b_i, 
        ben_a_i, 
        ben_b_i, 
        rd_data_b_o) ;
    input clk_a_i ; 
    input clk_b_i ; 
    input rst_a_i ; 
    input rst_b_i ; 
    input clk_en_a_i ; 
    input clk_en_b_i ; 
    input wr_en_a_i ; 
    input wr_en_b_i ; 
    input [31:0] wr_data_a_i ; 
    input [13:0] addr_a_i ; 
    output [31:0] rd_data_a_o ; 
    input [31:0] wr_data_b_i ; 
    input [13:0] addr_b_i ; 
    input [3:0] ben_a_i ; 
    input [3:0] ben_b_i ; 
    output [31:0] rd_data_b_o ; 
    parameter MEM_ID = "eval_mem4" ; 
    eval_mem4_ipgen_lscc_ram_dp_true #(.FAMILY("LAV-AT"),
            .MEM_ID(MEM_ID),
            .MEM_SIZE("32,16384"),
            .ADDR_DEPTH_A(16384),
            .DATA_WIDTH_A(32),
            .ADDR_DEPTH_B(16384),
            .DATA_WIDTH_B(32),
            .ADDR_WIDTH_A(14),
            .REGMODE_A("noreg"),
            .RESETMODE_A("sync"),
            .RESET_RELEASE_A("sync"),
            .REGMODE_B("noreg"),
            .RESETMODE_B("sync"),
            .RESET_RELEASE_B("sync"),
            .BYTE_ENABLE_A(1),
            .BYTE_SIZE_A(8),
            .BYTE_SIZE_B(8),
            .BYTE_WIDTH_A(4),
            .BYTE_ENABLE_B(1),
            .WRITE_MODE_A("normal"),
            .WRITE_MODE_B("normal"),
            .BYTE_WIDTH_B(4),
            .ADDR_WIDTH_B(14),
            .ECC_ENABLE(0),
            .INIT_MODE("mem_file"),
            .INIT_FILE("C:/workarea/sysmem/sysmem/eval_mem0/misc/lp4test_c_eval_mem0_copy.mem"),
            .INIT_FILE_FORMAT("hex"),
            .INIT_VALUE_00("0x000000C02008000000C00003000000000C00003000000000000000000000000033FCFF3FCFF000000x000003C00020000000C00003000000000C000030000000003000000000010E0CF3FCFF3FCFF000010x020203C0282C000000C03003100000000C03003110000000040000000001040473FCFF3FCFF000020x000200C02C20004040A0364300001010080364300000000080004562ACFE02000154502A8AA000030x3B4F0350A8240000080F34CC4000000C00F34CC40003F38C001B06C1B06F200003FC0F3E854000010x3FCC0040C00004100C0F3080004C040C01F30C00010390DC200000000000040483904E138E5000000x110400D44400000004501540500000044501540510015144400000000000040100000000000000000x110400D4541400404CF53F4150001014CF53F41510015144451545515454044111545515455000000x000480C02029820200B43240022082080B43240208800000000000000000000100000000000000000x000C01C8030000000830380080000000830380080000A288022A8AA2A8A8040882A8AA2A8AA000000x15440010950004101015154050440401415164063107E118433F8951500000474014AF014AF000000x0CC400101515045050BF3EC1E0441411CBF3CC1C210700B8073A03E25CE0008450882208822000000x19815340600A410100EA2984111041008EA298411440002052088220882B170D40000000000000010x2646A298951586525892120922649619092120922986A298B400000000022E4ED2A8AA2A8AA154560x000373C0010141010000000C01104100000000C004400000000000000003330000000000000000030x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_01("0x030003C0000C003000000000000000000C000000000000000000000030300000030000000000000C0x030003C0100C003000000000000000000C000020000800000000000030320000030000000020000C0x000003C0090C4020544815455000551548000010000400005004010030120000032000030C20000C0x030003001F1A0001EC803E8AA03C550040000030000C1000A00C000030200205511000010C0110080x08C43108150D0212900303CE702454280002E0A00E08019C10048100804000C1B09032000E0008200x01C04000790D00500CC31243300C9211C002A4000E4000000000440000000000030000040D4270100x1B0541585504467000040000014000000000505005040010150101110455000001485514841000000x374F13F43F044D300005154551545515440070F00F0C1144100245115CFF01455004CC10400154140x2B0A02A82A000A300000000000000000022060A20208800002000002008A08000080AA00042000020x038221000004003000022A8A2028AA2A8003D0AC090B0288003088C08088308AA10022000C02A8E00x1445505463058540A8913E4461BC062F40415454114501501511055140751089424415344A52DC600x1C8D32BC00038700F8822082E148202284415CFC13CF101016108950104F314400041B204500A0240x0B0823E8151E423188040000808000000110082902824208C80E00200432248223B0C613022000810x0E84428C6A298362545A2A8A6068AA2A8663F40E1B439010953989D198213900026488264552A8E60x030000000030003300000000000000000110000500014000C01C00400400140000304003000000410x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_02("0x0300303000000010000000CDC3FCFF3D0C3000000000003CFF3FCC00000000003330C000000000030x0300303000040000000000CC42DCE73C0C3000000000002CBE2FCC00400800003320C000000000030x120130B000000000006A1640C1FCDF3C0D3000000000003C7F1FCC00C004030013304000801154560x308300600C0C000000D03CC020DCDB35412000322000011C7F2F4000403A06000210000003C004560x03C8003820048C200048120E328CE3368DC0C4C3038C40C8BE2F808020C900C4D0000D0C02C1B06C0x0B4400781104806000251C05511CC73403C0D042034400107C1F008160C400C010140C00000000000x09049110651100011400000CC3745D1D4551545315017038EA3A85120490310531745110000000010x180D9130140004011455154CC3300C0E46F3FCE03F07C174D53540110050044F71304734415154550x02088000022000012000000CC3B8AE2F86E0CC2023028030C0300A000800030A30B82222000000000x000010800008000100AA2A0CC3700C0D4CC0C401130A00B4C030040080080082B130082802A2A8A90x1745E13455214991A4C12D01100471114D4154171545534024098D5214102D454244D51407A2A8520x32C300347C214482900A2840108060128980BC2A024BB0C8160581411430128CC2401B0C44F294020x288A70E80A0C8281A0000006C1F83E068EB208291802809CC330CCA0E02D010A9338C2290082208B0x164DA1A47519457254AA2A4B92A42909496154962548512892248951949A168422248902440000020x000000C0000C00000000000CC3300C0C0000000000000030C0300000C00F000030300001000000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_03("0x384390E439038080804E04C9324C9038080000000000100010000000100013083030000000333C0C0x00000000000000004000000000000000040000000000000000000000000003000020000000333C0C0x14455154551140000000000000000000001000140000000001000000000003000000251A88333C080x288A80000000000000AA0A88000000000000000000000000010040000000030201801F3000223C000x3CCFC00CFE22830300FF0FCC00FCE82B0030C0F03F00C300C0330F00CC0303C0C0C806318CB33C820x150000045733C3030055100000547C3F0030C0E02B019204D0320B01980713C0C0C0000000717C410x14455154551141114055054551545415041150511545515455254551545517404040000001A154A50x3CCFF3FCFF33C131C0FF0FCFF3FCFC3D0C1260521B8FB3BCB909CBB3BCBE3B40404015154453FC5F0x0088220882280B0388A00A0280A02A0388A2A822290BB3049A1A4923BC061B000000800002802C2A0x288AA2A8AA2A860230AA0A8AA2A8AA2A4322A0222883908C9A3AC883908E1B0000000A2A881000000x010022A8A804055150001002A2A8810145115055114911541424416114541649A1240A294063545D0x2A0022A0000C0DE1F0AA2002A2000301CF23B00F03C333EC3E0EC3C33CEC3C03830C1A140003F8FB0x0200000000080292A4002000000002020A4224480086021020080092081020424248482208B228820x298AA2A8AA2E8FE378AA1A8AA2A8AB2BC7A088A42B0993249232CB219C2613859194900002E250DB0x000000000004044014000000000001004140040000000000000000000000010000004000000000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_04("0x0000C3C0C0330C330003000C00C0C03303C208300000C0E8300000000000030003A00C00000000040x0000C2C0C0330C330003000C01C0C03303C000300000C0C0300000000000030003000C00000008000x30C0F380C330083300030C0D01C0842F02F104301007C0C4300000000000030003900C10000000050x1480530087310C2000020C0E0084082D02710421040340A4222001617CFA0C08529008020120000A0x1C805088233204E100382CCE9020FE3DC4B04028030F712052300282544A0003B04C200C0C03E00F0x300561000331004004400C4C0000DC2D8C30D4300E4B6310D3100250E4240C03004C4008C84300050x1041F3D051170D33744F0D050150441501D01C5415054070200144000000000001C00004041144050x304103C0F4030C130007140340F4442D05C14C3D3F0B4174500245515455050551D4540C0C33CC0F0x00C2A3E0A1030E03A043060340A0883E04D20CA82E0F8138200080000000208000E002080823C8AA0x00C303C003030C1300030C030000403C01F00C000D0B00700C0002A2A8AA0800A1C0A0000003484A0x01CD6014D51C415054CC1D4FD0D4192544115075054951846E2686B3C06B24014214F015494154400x018540143C00016050040544323C3B2F8601404F2FCBE184533280A08808190502148411C9C3DCCA0x144291C828050CB320930081A128E6328BC08C0A1A84A2F0A20208000000204023C80104041288900x29856294B51A4962542E154612B499254291586D2F4950A45D1546A2A8AA39840294A619496150EA0x0C0003C000030C03003300000000000000C00C0000000030040000000000104000C00100000000500x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_05("0x210303D0000040000C0000C0C2000003CF41F41003C3C00C380F0F0000000000303C0013C0C000000x000323C0000800000C0000C040000003CF20F08002C2C30C200F0A0000000000303C3003C0C000000x140303C0000000000C0000CCC1000003CF10F04C0142410C25030E004000000000003000C0C00C330x104222C4080805400821158CC10001124B00B00C03C0C20CAB2F0F0010562ACFC0143022004000310x0B0010C40004C020200C1B0CC02020084300303C02414200DA2B0A30006C1B06C32430380C20A8310x068040C0010087910000000C100017204300300C010100045437441000000000012000080E20C0760x010151500514400000000045D0604000C551545707C3D07C3F0C0F400C00000030644D01455144550x1303E3F00F1CC151141515C0C1105515CFD3FC7B074350DC3C0C0F005455154570244501CBF3DC970x220AC280AB0A800080800086C2C00000CA20A0852343408C3C0C0F820000000030B400000A8384B80x0200E120470982A2200A2A4CC0002A28C48248200343420C3C0C0F0020AA2A8AB000202041000C700x14455354551505A3700A14051154AD2C0D50D445140CB0504113405034FA2A85017CC507455150550x16CCF0ECB30F8E22C415008301406A0103B238E93884105081214050540F2940014845048AF3F8760x080BA3A8060A0000804822C2C0A000004EA0E88201C1C3841C04872100882208B23C323BCAA0A4090x164E4244F91386A2E490008491346A29891290673686925869194A5244000000216865268D70D8560x000400005001000040400000C0000000C00000011303030C3C0C0F010000000030003030000000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_06("0x0088A0A00C0F40000028280303D000200CE00000000343D001038380303D000032380303C40000E30x10C0C0C00C2F00000830300323C000020C000008004323C00020000238BC000A1010231BC00060410x00445094CC0F0000003435C303C000000C103000304303C000024250303C000001046303C00000510x04C4D014282B04208814258622C4081208D07004040222C40822434020AC10820104020AC10220520x0003C2800313040304221100D0C4030100C030C8380890C402130A30444C100500B00004C10010480x0401020C000300000002030000C000000000B400000000C000000800000C00000080C820C00080080x10C0C0C066154012443030455150051106C2680110455150051303015455004530301515440150C30x10C4D0D0DD1FC0318C3434CED3F00F230DD1140010CEE3F00F334343ECBF00CF31343E3BCC03F0D30x20C8E0E0992A02A108B8388EE280A3028AE31000208EC280A32B8382EC280A0EB2382E3280A0E8E30x03C0C0C0332481131870300CE120470644C03008034CE12047270300CC92044E70300C390841E4C30x15051114152D4551584505C5535455154111A82115C55354551444525475154541445517455154140x1905111433138DC3A4C5050CB0EC732BCB115411198CB0ECB33C4452C8CE3B0FC1446C2CCBB0FC140x22C2C2C86E0E8A1200B2324BA3A884028EC2804C224BA3A8042B0B21B8BA2042B0B09B2B8A0128CB0x178591949B0907E370E52586C244FB1CC890D49917864244F90E465264241F84E164661241F24C960x01C0C0C000000140107030000000500440C000CC01000000500703000000050070300000005004C30x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_07("0x0080001040000C70202022808150380A080000080F0C000C30000CC000330000E22800000CA000000x00000010400800103090220003400008080000000C0000000000000010000000B03000000CC000040x00000170C0000040001003400080000102A2A8A42404020011080482001208C0C10440000C1030000x000000000800006000C003C003A828098D515CA72440C148610D0140103708840104481548D070040x1802B030C33347835C1D1C0C33FC3C2806514082210880C873020D001C050448C0B00306C0C030C80x3900002C93030FB36C5F0CCFB0FC3C1000E1385101C400C41001074008190004408080000000B4000x1480001045144040406101C10114140C0C000000030D110C34140ED050331140F030000006C268010x00800030CF3DC1D1C4E7070713283C0D0D515454170C010C30040DC010330040F13405154DD114000x3C0800208B3080A080B2024202A8820E0C000008030C020C30080DC020330080F23820000AE310000x34840000031A0212081808882028A90C0EA2A8A0230C803C3200CFC200F30803F030022A84C030080x154981941117475258551541416869114162F015104111504415411054441145014442250111A8210x0109414CB33ECCF2F0FB33CBC3E8AB31408220A5044111904416411058441149014445100B1154110x2A801010462888A0A0A222828280802C8C000002030CC22C33088CC320B30C8270B092088EC2804C0x150D616499124E72787939C9E1E8EB194AA2A8A5264991786615C99254E61947A16464000890D4990x0004300000000410101010404040410C0C000000030CC01C33004CC300730C01F030100000C000CC0x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_08("0x0CC2008400034041000300010000F03100000C821381324C932C40E20CD00C03304030030C3008100x00C0000000030000000300000000C00000008C0000000000000800010CC0080210002002002000200x04C1004000030000000300000000C00000004C0015415154551044500CC03800300000000000001C0x048100400102404000421040004090100040C8412A82A2000008000308C13CC2301400150030002C0x0802008C1E0080831C802083138020230780C0823FC000003F30CCF300C230C0003820130380402E0x1004010C08300003083000030230000302300000154400001510445300C130C0000000000000001D0x1445114415194141145911411158511105528445154151545514445104502E0132403803883208450x3CCF33CC3F37C3C33CF733C333F4F3330FF14CCF3FC3F3FCFF38CCF20CF01D0231543417497158450x3A8CA3A0BF220AA0BCE20A88B3E08A288FE0082A02802208822902A288883C027080B2030030000E0x390E53982B1889A228D8298A22D825260AD230962A82A2A8AA218AA074203C007000B2030030001D0x15C5615055174650545716445154D6144551AC59000400A8AA2501015C55214541544514454154850x3F0FE3F8FF3ECCF2FCFE3CCEF3FCBC3ECFF358F32A8800A8800A0302E0EF114A816845284681A4450x2ACA12A02A2381A028A3218822A0E1280AA00C8600080000000A0002ACA22C82B088B20B08B028BA0x1384E138DD120E32DC520E0ED3508E0EC75078382A86A2A8AA278BA1F84D1945E154E716456154670x0100401040000410400004044000040440001010000000000001010050040C0070007103003000300x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_09("0x038383C0B00040800CC23000000000000000E0E00100400000000002A8432001514C1004C0000C300x01010340300000401C4030000000A000430080880FC3C0303302088000000800000C0000C0000C000x014143B0623040C03CF122C100005000010050540442002026014551540004C0000C1004C1004C100x024342307030CC00A87130C0A2201400800010500D40401028008233ACA220C000081004810048100x0B0E20B0083880C0007008CBF320932442028C4A004200302503CED0E4F33E4000002008020080200x0905207404304000007404C39030A00001C1444A0441001011030CC000A22EC000004010040100400x030302E4141002E228E414400004A5154062C0C81208B108402A0882A852280151445114451144510x034341D07D0006F274D13D015114AF3FC052D0D8110C4108401E0882A8F22803F3CCF33CCF33CCF30x238382F8A83002C208FA28C00000AE2A8020E0E802088000002A0882A8AA280AA2A8CA3A8CA3A8CA0x020201B0003040C004B000C1A220A62A0D4180880441009011020882A8AA2806A280E93A0E93A0E50x144450146511051190152540F26805154451141121045284441441126CA62149515C5615C5615C560x3C4450105F000511A0111F0082080F29CC511411110453444414C332F0AE2BCBA2F0FE3F0FE3F0FE0x0B0B23E82A26C2C29CE82A84008008228B20C8C22ECB20B0BB088220A008008AA22CA12ACA12ACA10x364652944D19859168950D4AA264A0004E539499198651E46616499000AE294C00384E1384E1384E0x130300C0000CC0C000C0000C000000000700C0C00CC30070330000000004000400100401004010040x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0A("0x0002020828084D8080C0300000000400005000010000D0000832C8F02C00000803C0B0000000003D0x040321082000CD8080802000000000000000000000000000000000C00C000C04134030000000043C0x0C0801003400064040003008A2A8A0100841008410004100042184F3182C0800033062300000003C0x2C0C30003C00C222546B3B0C0154A00108401084010040100421C4831C0C0F00023070308A800C2C0x3C41C1D4C303C38040CC1C00B06C1C0E08B0E0CB0E00B0E0081C0203008E000400B00838CFF2480C0x304ED1F0CF3B0340404C1C0100000D04C0300C0300C0300C00144213404C040000740430C900000C0x084012101C1040C0C0C030010000051542515425154251542430C0B24444008EA2E41410001154150x14C472707131C4C0C0D4340551545D3F45B3FC5B3FC1B3FC1831C4711CD0018EA1D07D004573FC3F0x08802320242082C0C0C030810000013F0083F8083F8883F88A32C8B3A88C008C82F8A8300032A8280x230881808A0200C0C0C43403A2A8A92B4AA2B4AA2B4AA2B429208063000C040C01B000300A82A0D20x0A45D1D49615411218210101E2A891154541541415454154550505015854114160146511CE9154750x05CBB33CBC3EC7111423030533A4493FC263FC2E3FCAE3FCEE05050114F0014160105F008233ACCE0x0A82222828288240406212402088202A8202A8882A8882A80A38C2F288A92C8C93E82A26002088BA0x274B939C9E1E4791949929850000091D4021D4021D4C21D4C32585A150D6194962944D198A8004E40x01010104040401C0C0C030400000000000000000000400004130C03000030C0C00C0000C000000400x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0B("0x03009000E2228222000010409208282000C0000000000008841488000001090000000000030040030x0200000001010330202413400200203000C0000000000108000380120800040000000000800000010x0100000002124230400C0000C004043040C0000000014108400304000040080280000A2A400240000x11402190A21A4C73002415839004143000110015100010044003440000400409C2A82F3AC02244020x0F0C30C0F0030340303C07CC1140E22F0462F8810E4212403C0FC00088C3070943F83508C53280E40x010030C0F9010800342C030D2100520D00804C84000000041F0F400010C3230B924C3425033080030x0301A190A30303B220100404E3003035055154551545218C0828C11104420E4000000000440068A80x1744B0C0A313437260300C04E304343F4FF3FCFF3FCF638C4828C5220C520E05415415150C11D4550x03020328032383B000A20C00E32838300E8200022A8A120C8828C88208FA0E00000080000800A8AA0x02002198A202033220611844E20020320240A8AA2A8810780828800008860E8A82A82A2A00E228A90x14456198A41444424485050500A445004551A44115886190510905515854100713E8912B454354550x2889608CAC1444426C8F030320E445084E3388222503E3B05B230462F8AE320A3220880A0F20DCA70x0B0882200B0B0B3208021646C320B2300AC200020808022C2202C28280282C00200080000A00808A0x1645619CA616466064E72989A274652A4091A8A800015178592985D150FE1A8A92A8EA2A47E240030x0300000403030330004130C0C3103030000000000000001C0000C04000540C0000004000014000010x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0C("0x04011000300001000C300C4000C8020400034044000300040003C0C10003200B00044C00C10300330x00000000300000000C00000000C000000003000000030000000300000003000300000800800200200x04010000310040000C10040000C401000003000000030000000300000003000000000C00000000100x04010010210040010810040040840100010240400102404001024040004210060000080080A308400x080230E002008332002008C38008020C4E00808C1E00808C1E0080831C80204B00800400009100E00x1004308C04010320C04010C23010040C08C0000C08C0000C083000030830000110900411400100100x144510545505411154511441515415044551444415454144151541411455118B40044D00C60340360x38CF30FC3E0FC333CCE33CC3F0F83F0CCFC3CCCC3FC3C3CC3F33C3C33CF3338B000CCC00C35304720x3A0E82F80E2388B380E83A0BE0388E22CF8228A23F8222A0BF220AA0BCE20AC38008AE00C803A0380x3A4EA0B48E278A2360E53982D2385E188B60A4A82B48A1A82B18859228D825CA00088800800220200x15854154751944515C56150551D465114553585115475250551746505457168451549115055054450x3E8FE3FCCF2BCEF3F0FA3F8FF33CAF3BCFF2F0FB3FCEF0F8FF3ECCF2FCFE3C8C52BC311A05A058850x0A4280A8322488228C290A02A0C892208A8384A02A8381A02A2381A028A3218B20882C22C22320B20x1384E3D424390EF1484E138F5090E43B4D42383B1D423238DD120E32DC520E4251503915855274650x010041000010044000040104000040110000101100001010400004104000040300001C00C00310300x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0D("0x080210000D0104000C00040003C0C4000380B0001544C0081020023020090380E0E00001055140030x000000000C0000000C00000003000000030000000000000C003003003000000080C00000000000030x040100000C0000000C0000000300000003002000000040080020020020000000D0100000000000030x0401000409010001084100010240400102404000000000000A10860134022280D21C2C00000000420x0802307802020C7200820C4E00808C1E008080080000402009100E00F0C333C0C08030000000F0800x10043020C0000C20C0000C08C0000C08C00010480000412400100100100333C3000CB800800040300x144510545505045154450445514444154541B4001544D00C60340360301A2280C0C00411455150550x38CF30FCCF0F0CF3CCCF0CCFC3CCCC3FC3C3F0003FCCC00C35304731744F33C0D0D01C33CFF3E0B30x3A0E82FC882A82F3882A22CF8228A23F822238002A8AE00CA03A038030222808E0E00820C00038E00x394E60AC622688A360A6288B6094982B4891A0002A8880080022020020022A8480801202CAA2A0D80x158541545D1941515C59114553585115475244551A8911505505445144562A8911149528455114570x3E8FE3FCFB33CBF3F8F33BCFF2F0FB3FCEF0C46B300311A05A05885288962E8F1114AF2ACAA2ACA80x0A4280A88E0680A28C86208A8384A02A8381B0882002C22C22320B20B0880802C2C80A108AA220A30x1384E3744838CB7148383B4D42383B1D42322455000391585527465164562E8D919467264000BC520x01004100001041000010110000101100001030000001C00C0031030030000404C0C00100000004000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0E("0x000E028001154200204200080388040E038380C00300011455000310041000C00004000CC03040030x000C0040000001000000000000000000000000C00300000000000300000000C00000000C000000030x000C0080000002002003000C00C0000000414C802E00800000000310040000C10040000C401000030x040901C0000000003029024940C04A0A03607C201CC16000000102100400108100400408401000420x380202C020000000302400C640803F0F06011CC30F0100000332002008332002008C38008020CC800x2300004C240001305001000400400F0F00000C8B0DC400800100C04010320C04010C23010040C8300x154512D0011543403483100C12D80A0A0303084905091154551145505411154511441515415044550x3F0F33C0033FC30030D7014D43CC5F0F034348CB1F0B73FCFF22C3E0FC333CCE33CC3F0F83F0CCF30x3E08A0E0022A8B803883280C20E00A20838384800C0020C0003B80E2388B380E83A0BE0388E22CE00x2D825280022A82002002080800800A2A42020C000C0002E8AA2348E278A2360E93A82D2385E188D80x154D6114552A84514454154151145A2A845058D91745605454154751944515C56150551D465114570x3FCBC314AF000C52846816829114AA3ACC5058BB3E8FE2E8AA2E88F2BCEF3F0FA3F8FF33CAF3BCFC0x2A0E12C822000B20B08B088C82C820200B232002088810A8A8228322488228C290A02A0C892208A30x3508E09454000E5164561D4951945A3AC652549716476240023D424390EF1484E138F5090E43BC520x000040C0000007003003040C00C000104303000000000000000400010044000040104000040110000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0F("0x380A220C000C00105454000C40104003000010003300C1000C200840003404400030001000330C100x0004100C000C00000000000C0000000300000000300000000C0000000030000000300000003000000x00052138023802000000000C4010000304010000310040000C1004000030000000300000003000000x280D81F08133058000000408401001020401001021004004081004001024040010240400042104000x3C44007C0C3D0400000F08008020CE00080230E002008338002008C1E00808C1E0080831C80208310x3C4000782C344002000403010040C8304010308C04010320C10040C08C0000C083000030830000300x280C30242414845154550545415045154451105515054114551144415454144151541411455114110x3C0D312C2D3C8DF3FCFE0B0F83F0CF33C8F330FC3E0FC33CCF23CCC3FC3C3CC3F33C3C33CF333C330x020E32180030008300032E03A0E82F20CA3288F80E83A0BC8328CA23F8222A0BF220AA0BCE20A88B0x2908203000300023A8AA0D83A1E88B18CA72A0B60E47922C6325C982B48A1A82B1889A228D8258620x2A41416C651D45815451154D5254151745914455354950545D1645115475250551746505457164450x2BC14168EF3ACFA3A8AA3A83E2FCBF3CCEB3ECFF0F8BF2FCF33ACFB3FCEF0F8FF3ECCF2FCFE3CCEF0x008CB08008228042A8A20A0CA1280A230A4280A83284A0288C290A02A8381A02A2381A028A3218820x2B4961585D194DA1000B3509324CBD124390ECD424C932F4490E43B1D423238DD120E32DC520E0ED0x010C30000000000000001000100410000100440000401040000401100001010400004104000040440x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_10("0x0C000040030C0310003200810000D0110000C0010000F0304000C8230005150C00C40C00C30300900x0C00000003000000003000000000C0000000C0000000C0000000C0020000000800400800800200000x0C40100003040100003100400000C0000000C0000000C0000000C0030000000800C00000000000000x084010004204010010210040004090100040901000409010001084130000000C00C0A009805340280x008020CC80080230E0020083138020230780202307802020C72008220080000C02809C030091303C0x010040C8301004308C0401030230000302300003020C0000C20C000030800000C20000000000003C0x154150445514451054550541115451110551505105455050451544634005150D00D80D00C60304A80x0F83F0CCF338CF30FC3E0FC333F0F3330FF0F0F30FCCF0F0CF3CCCF3000F3F0C00CC5C05C35350FC0x0388E22CE03A0E82F80E2388B3E08A288FE088A82FC882A82F388283800A2A8E00E80E20C803082A0x2389E288D8394E60B48E178622D8292A0AD2286A0AC621648A360962000A2A08008008208002002A0x1D46511457158541547519445154D6144551D4941545D1941515C59054562A41511451150550546A0x33CAF3BCFC3E8FE3FCCF2BCEF3FCBC3ECFF3BC3E3FCFB33CBF3F8F3058BC00C16214A11A05A0A46B0x0C892208A30A4280A832248822A0E1280AA0E0680A88E0680A28C8632088008C82C82C22C22320820x090E43BC521384E3D424390ED3508E0EC7508C8E3744838CB7148382545000C9519459358552546B0x000401100001004100001004400004044000040410000104100001030000004C00C00C10C00300010x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_11("0x04000300040003C0C400038083000F1080021020020C20084320C8E03000300041545000C10044000x00000300000003000000030000000F00C003003003003000000080803000300000000000C00000000x00000300000003000000030000000F00C00000100100100000008490E00B200800000000C10040000x00010240400102404001024043000B00C003088025017100A220C6D3C8070C4600000010810040040x0C4E00808C1E00808C1E008082108302812108600F0240C0F33100C1F033344000003C2002008C380x0C08C0000C08C0000C083000003083020320000000000000F3324042E0B315002000100C04010C230x04455144441545414415154143400510C403603403483018A220C0C09091124151545415451144150x0CCFC3CCCC3FC3C3CC3F33C3C3000F30C0033470170D714CF330C4D0B0B732C7F3FCF82CCE33CC3F0x22CF8228A23F8222A0BF220AA3800A08C803A03A03803020A808C8E06003000230000E380E83A0BE0x288B60A4A82B4891982B1885920004208002002202002000AA244040C0030000B2A8A8360E93A82D0x11455358511547525055174650545D150550544514454154AA290511B495354611544515C56150550x3BCFF2F0FB3FCEF0F8FF3ECCF058B32F05A0588528468294AE2F0511ACBF2BCEB2A8AB2A0FA3F8FF0x208A8384A02A8381A02A2381A3208E22C22320B20B08B0880802C2C200220A0122A88828C290A02A0x3B4D42383B1D423238DD120E3254590D8552546716456154AE2D8591647525C690002F1484E138F50x11000010110000101040000413000004C0030031030030000404C0C00000000000000100004010400x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_12("0x020020408008C080240E028280C00300011154400304011000300001000C300C4000C80204000C410x01000000000000000000030300C00300000000000300000000300000000C00000000C00000000C000x00001000800800800000034343802E00800000000304010000310040000C10040000C40100000C000x0300702802140590088A024B73201C314800000102040100102100400408100400408401000108410x09068024403809C30CCF070213C0CF11000000F200080230E002008338002008C38008020C7200820x080E4000000000000CCF0D013388CD2400800040304010308C04010320C10040C23010040C20C0000x03403180D00D80C0688A0303024845090551545115445110551505411455114441545415045154450x030030D4C11CC5D13CCF034342C8DF0B4FF3FCE233C8F330FC3E0FC33CCF23CCC3F0F83F0CF3CCCF0x23803280E80E00C088A0238381800C0008C0003B20CA3288F80E83A0BC8328CA23E03A0E82F3882A0x020020008808008008AA110103000C0002E2A8A318CA72A0B60E87A22C6325C982D8391E48A360A60x144541541511451158AA244452D85715485154151745914455354950545D16451154D52541515C590x3C46816816214A2258BA3C4452B8FE2FCAE2A8AE28CEB3ECFF0F8BF2FCF33ACFB3FC3E2FCBF3F8F30x0B08B088C82C82C220200B0B2000882804A2A822230A4280A83284A0288C290A02A0CA1280A28C860x364561549D19459158BA36465194D6174A4000BD124390ECD424C932F4490E43B3509324CB7148380x13003000C40C00C000101303000000000000000400010044000040104000040110000100410000100x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_13("0x00045154000C40104003000010003300C1000C2008400034041000300010000F0310000E0220003D0x00000000000C0000000300000000300000000C0000000030000000300000000C0000000C0010003C0x02000000000C4010000304010000310040000C1004000030000000300000000C0000000C0010003C0x0580000004084010004204010010210040010810040010240400042104000409010004090130042C0x0400000CC8008020CC80080230E002008332002008C1E0080831C80208313802023078020210680C0x1002000403010040C8301004308C04010320C04010C083000030830000302300003023000000E40C0x244551544515415044551445105455054111545114415154141145511411154511105515053100150x2DCFF3FC8B0F83F0CCF338CF30FC3E0FC333CCE33CC3F33C3C33CF333C333F0F3330FF0F0F30003F0x00830000EE0388E22CE03A0E82F80E2388B380E83A0BF220AA0BCE20A88B3E08A288FE088AB200280x000BA2A88D2389E288D83A4EA0B48E17862360E53982B1889A228D8298A22D825260AD22466000120x15815150551D4651145715854154751944515C5615055174650545716445154D6144551D494154750x3F8BA2A8BA23CAF3BCFC3E8FE3FCCF2BCEF3F0FA3F8FF3ECCF2FCFE3CCEF3FCBC3ECFF3BC3C168CE0x2042A2A08A0C892208A30A4280A8322488228C290A02A2381A028A3218822A0E1280AA0E06B0883A0x1D890008F5090E43BC521384E3D424390EF1484E138DD120E32DC520E0ED3508E0EC7508C8E154640x000000001000040110000100410000100440000401040000410400004044000040440000407000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_14("0x1504003080210000D0110000C0004000CC3040003808C000F40C00C10C0033030090380A0A03000C0x0040003000000000C0000000C0000000C000000030008000F008004004001001000000040403000C0x0080003040100000C0000000C0000000C000000030008000F00400800C00300300000001013200B80x00801020401000409010004090100010841000102404C300B01CC080A0091046402828098DF080730x000CE00080230780202307802020C7200820C4E0080803203020C2C090031086303C3C2804B30C3D0x000C8304010302300003020C0000C20C0000C08C000043203014C24004001001003C3C0404322C370x15845154451105515051054550504515445044551444D000540D00D20C40360301A8280C0C2124140x3F8CF33C8F330FF0F0F30FCCF0F0CF3CCCF0CCFC3CCCC000FC0C00C35C05334750FC3C0D0D232C7C0x0082F20CA3288FE088A82FC882A82F3882A22CF8228AE000A20E00E20CA038030228820E0E1200300x2A08B18C97260AD2286A0AC622688A36096188B60949400048040040042010010028A904043000300x15C1517459144551D4941545D1941515C591145535851154D5114511505505445168AA114163645D0x3F8BF3CCEB3ECFF3BC3E3FCFB33CBF3F8F33BCFF2F0F11AC3B314A11A05A0588A168EB314162ECFA0x2A40A230A4280AA0E0680A88E0680A28C86208A8384AC220E82C82C22C22320B2080802C8C8008220x008BD124390EC7508C8E3744838CB7148383B4D42383915493194591587525465168EB1949525C590x00010000100440000404100001041000010110000101C000010C00C00C1030030000410C0C0000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_15("0x04003004000CC00000000E0E30CC8E0E0E3000C00040000C10044551400030000154540003304C150x00002000000800000000040430C80808083000C00400004C010000000004300C00000000430000000x00002040000440C2A8AA2D0D30D0410101202C802401004C110400000004310C40000000831004000x0000004000084001A8BF390D125445098DC21C3410000008100400000008210040000000021084000x0CC0008C3000800318C638C493D03C280430CCE400C0C00020080000F000020080000F00002008000x0C8CC10C2C31000000000040904010200060CC8102C0B03040100000D0C3040100000D0C0C4010000x044551441515400000000C0C30EC0C0C0C10448605415194511445515059150541545505855054150x0CCCF3CC3C3FC04154551D0D31DC4D0D0D30DC8E15C3D09C731CCFF3F0CB3E0FC3FCFF0C8FE0FC3F0x22C8C3A0B8338A0000000E0E30EC8E0E0E200C00010BC0984A1A0000388B0E83A00003288CE238800x2886C3A826338402A8AA24041044040404000C0003829270E93A8AA2A0630E87A2A8AA060CE1786A0x1145615055114412A8A5014141105111417154D91905511C561505511451354550545115875114450x3BCFC3F8FF3BCC53E8500141411051114163FCBB398FF310DE378FF3BCEB0F83F2FCFB3E0CF2BCEF0x2088B0A0282C890220882C8CB0CC2C2C8C8088020402A04C81220AA220A63284A0A8A20A4B22488A0x3BC46138F4190E5000000949619859194961D49D198DD0984E138000BC4924C932000B34864390E00x110000104000050000000C0C30CC0C0C0C00000000040000040100000400004010000010000100400x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_16("0x20028224003280C000000000038C8220C00000000000000000000000803C3E0E3238091545000C310x18830300003200400000000040000300800000000000000000000110A028200010101800000008200x17414210C033409154540000C0404010055154551544000000000320CC383D0D0104280000000C210x33434054C030424000510140804443120A62F0151001816450000120E43F090D0184EC00000000210x2E422144FE300032FC013904412031004E730C7F350843840E1E40207C1108C48030040002C00C020x19C020C8D8310043E41200000020110043F11886370A0000000000006C14004080004000028334C40x34430348851300C000011545430C0700C00000000001515455154510D03E2C0C30301D1545415C550x3CC343D8CD3740D154573FCFC34C4710C55154551547F3FCFF3FCF30F03D2D0D31341F3FCF411C770x388B83E8CC0380C000032B8A838C8320C00000000001C2A8900A8820E0BE0E0E32380E2A8A601C660x28850188CD01006218A0298A310401004A92A0A92A0862A89A2A88C3A074140410101A2A8A81BCCE0x0184509095144511A805154A50505815052208FA14496158BC03C5510441314141447015445150750x0B0C50D8DF3C4620E0872780F0505C16082084882243F2603E3E87F30CC101414144423FCE71D06D0x100B2380AA0308C000020882A32C2B08C00000000000A0A08A208022409C3C8CB0B09C00002004380x298E52D85D1E45A2A8A40000725856158AA2A8AA2A480000000001D3A4E9294961646A0002F118640x30070300000700C000000000130C0300C00000000000000000000041C07C0C0C30300C0000100C000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_17("0x000000000003034030001F0C0000F00000001C740C0070741030C01030000C003000020CC3000C000x000000000003030030000F0C0000F00000000C300C0030300030C00030000C003000030003000C000x000000000002030038000F0C0000F00800000430040020200020C00030000C0530000304CE00B8020x1145805440000301300E0E080000A000800008200C0010100030800020002C0A200003040C8070C50x07CF11E43903CFC03C003E0C0000F00CC0C22088080080B8A01000F320380C00003001004F033C840x184B1300000100F0180031C9403065040C32348C040090DCE0100540344D0C00014041374E2334500x1545515455114551145417455150551541510C101D40303001304551144411451154471DC92114240x3FCF735455134FF338D83BCDD350F715C3718C121D42303009308A51288821451258473FCB237C2D0x2A8AA2A8AA2B890124A40FCAB018EA34C2338C122DCA32304A3A87631814008DA0C8C33FC60030000x2A8AA2A8AA22030208000FC00030800C81300C100C00303000304582245C00001140C33FCC0030000x3E85808CFC014552606D244D5350B51105511064138040449100455164693544115454110B615C550x22082038BE304EF088820CCDF2F037338EB310441088424411088A52688A0588225098330AE3F8BF0x000000808A2788010404010A8184EA0649A24C390D4932984439C2213816120570848126400220A00x2A8A2200000ACDD2585936494258A50986D3B8EE1A86E1ECB92685F26469254AA17856198653585D0x0000000000040000000003000004000000004C010C01303004310000000000004000030CC00000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_18("0x00444050051045414055154151541014054050150105415441054151540114004054543C00F00C700x038203882A3ACBE288AA2ACB9128B238CA42802A0289822C822882A2E80E380E82ACA83C00F00C300x02000200091005414CC73700409000048EC0B0BC0B0D81600B0F81301C2D0CCF0044343C007004300x0244C2500500C441489336C362FC300889C040B90808419848004061C4242444C070742800B00C3A0x01454154051544514055154551501014054150150144411441144151541014054154540C00C144C50x02C042C02A2E8AB2C8BB3A8F9028E32C8AC2808B0A8AC2A48A2AC223E82A3C8FC2E8A809405004C00x014F01783F2140E14C841842513012000501001802482334421401607C0114020138201545D26C550x0180818C2018481008660D4900E0522806C0700601C4A020413481926C31040000D0DC3DC5E08CF70x01054114141541504055004511141014454150450545415045154111540414444044160A8CC00C2A0x0B8123802A3ACBA288BB2ACA80A8B228CAC210A90A8A62A84A2E42A1202638CE82E8BC1000E02C200x0104411C140D4000CCD4000C000C00348941404D04C1426004354B31001C0C814144182D453260B50x01060110342D03508884008D311C20144641B0480185C1D08129C8209C14380D414C000DCF2080270x01454154151505514444154150545114454100540545115405150150100110004044553A8240240A0x0A412240AE3B8AE308AA3F4A12ACD3168A0280A8088F22A8082B0AA2A029108BA3BCB22941A148E50x0385039035150D7044802803F3640030012330DB0581D0C4C525C2603C023A43F324C50000C00C000x0040404C29380D824C4C17003340C330CDA010B506484190461441D014033A414164873FCFF3FCFF"),
            .INIT_VALUE_19("0x000000000000000000000000000000000000000000000000000000000000000451140511405154000x000000000000000000000000000000000000000000000000000000000000008EA2A80A2A82B2A8000x00000000000000000000000000000000000000000000000000000000000000C440000400008030000x000000000000000000000000000000000000000000000000000000000000008013340133403164000x000000000000000000000000000000000000000000000000000000000000004551540515415054000x000000000000000000000000000000000000000000000000000000000000008E82EC092EC2A2AC000x00000000000000000000000000000000000000000000000000000000000000C351043410421064000x00000000000000000000000000000000000000000000000000000000000000CE61F0141F03D010000x000000000000000000000000000000000000000000000000000000000000004541540415411114000x000000000000000000000000000000000000000000000000000000000000020AA2E80E2E82A2B4000x00000000000000000000000000000000000000000000000000000000000000C7C20020200C0010000x000000000000000000000000000000000000000000000000000000000000008700D42C0D47310C000x000000000000000000000000000000000000000000000000000000000000000451440514415150000x000000000000000000000000000000000000000000000000000000000000038EA2A02E2A02E3B0000x0000000000000000000000000000000000000000000000000000000000000204A044320449014C000x000000000000000000000000000000000000000000000000000000000000020073402F3409F0E400"),
            .INIT_VALUE_1A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_20("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_21("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_22("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_23("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_24("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_25("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_26("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_27("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_28("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_29("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_30("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_31("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_32("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_33("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_34("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_35("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_36("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_37("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_38("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_39("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_40("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_41("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_42("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_43("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_44("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_45("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_46("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_47("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_48("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_49("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_50("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_51("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_52("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_53("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_54("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_55("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_56("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_57("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_58("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_59("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_60("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_61("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_62("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_63("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_64("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_65("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_66("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_67("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_68("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_69("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_70("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_71("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_72("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_73("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_74("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_75("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_76("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_77("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_78("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_79("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) lscc_ram_dp_true_inst (.clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .wr_data_a_i(wr_data_a_i[31:0]), 
                .addr_a_i(addr_a_i[13:0]), 
                .rd_data_a_o(rd_data_a_o[31:0]), 
                .wr_data_b_i(wr_data_b_i[31:0]), 
                .addr_b_i(addr_b_i[13:0]), 
                .ben_a_i(ben_a_i[3:0]), 
                .ben_b_i(ben_b_i[3:0]), 
                .rd_data_b_o(rd_data_b_o[31:0]), 
                .ecc_one_err_a_o(), 
                .ecc_two_err_a_o(), 
                .ecc_one_err_b_o(), 
                .ecc_two_err_b_o()) ; 
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2022 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem4_ipgen_lscc_ram_dp_true #(parameter FAMILY = "common", 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = 9, 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter WRITE_MODE_A = "normal", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = 9, 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter WRITE_MODE_B = "normal", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "36,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    localparam T_FAMILY = ((((((FAMILY == "LFD2NX") || (FAMILY == "LFCPNX")) || (FAMILY == "LFMXO5")) || (FAMILY == "UT24C")) || (FAMILY == "UT24CP")) ? "LIFCL" : FAMILY) ; 
    eval_mem4_ipgen_lscc_ram_dp_true_main #(.FAMILY(T_FAMILY),
            .ADDR_DEPTH_A(ADDR_DEPTH_A),
            .ADDR_WIDTH_A(ADDR_WIDTH_A),
            .DATA_WIDTH_A(DATA_WIDTH_A),
            .ADDR_DEPTH_B(ADDR_DEPTH_B),
            .ADDR_WIDTH_B(ADDR_WIDTH_B),
            .DATA_WIDTH_B(DATA_WIDTH_B),
            .REGMODE_A(REGMODE_A),
            .REGMODE_B(REGMODE_B),
            .GSR(GSR),
            .RESETMODE_A(RESETMODE_A),
            .RESETMODE_B(RESETMODE_B),
            .RESET_RELEASE_A(RESET_RELEASE_A),
            .RESET_RELEASE_B(RESET_RELEASE_B),
            .INIT_FILE(INIT_FILE),
            .INIT_FILE_FORMAT(INIT_FILE_FORMAT),
            .MODULE_TYPE(MODULE_TYPE),
            .INIT_MODE(INIT_MODE),
            .BYTE_ENABLE_A(BYTE_ENABLE_A),
            .BYTE_SIZE_A(BYTE_SIZE_A),
            .BYTE_WIDTH_A(BYTE_WIDTH_A),
            .BYTE_EN_POL_A(BYTE_EN_POL_A),
            .WRITE_MODE_A(WRITE_MODE_A),
            .BYTE_ENABLE_B(BYTE_ENABLE_B),
            .BYTE_SIZE_B(BYTE_SIZE_B),
            .BYTE_WIDTH_B(BYTE_WIDTH_B),
            .BYTE_EN_POL_B(BYTE_EN_POL_B),
            .WRITE_MODE_B(WRITE_MODE_B),
            .PIPELINES(PIPELINES),
            .ECC_ENABLE(ECC_ENABLE),
            .MEM_ID(MEM_ID),
            .MEM_SIZE(MEM_SIZE),
            .INIT_VALUE_00(INIT_VALUE_00),
            .INIT_VALUE_01(INIT_VALUE_01),
            .INIT_VALUE_02(INIT_VALUE_02),
            .INIT_VALUE_03(INIT_VALUE_03),
            .INIT_VALUE_04(INIT_VALUE_04),
            .INIT_VALUE_05(INIT_VALUE_05),
            .INIT_VALUE_06(INIT_VALUE_06),
            .INIT_VALUE_07(INIT_VALUE_07),
            .INIT_VALUE_08(INIT_VALUE_08),
            .INIT_VALUE_09(INIT_VALUE_09),
            .INIT_VALUE_0A(INIT_VALUE_0A),
            .INIT_VALUE_0B(INIT_VALUE_0B),
            .INIT_VALUE_0C(INIT_VALUE_0C),
            .INIT_VALUE_0D(INIT_VALUE_0D),
            .INIT_VALUE_0E(INIT_VALUE_0E),
            .INIT_VALUE_0F(INIT_VALUE_0F),
            .INIT_VALUE_10(INIT_VALUE_10),
            .INIT_VALUE_11(INIT_VALUE_11),
            .INIT_VALUE_12(INIT_VALUE_12),
            .INIT_VALUE_13(INIT_VALUE_13),
            .INIT_VALUE_14(INIT_VALUE_14),
            .INIT_VALUE_15(INIT_VALUE_15),
            .INIT_VALUE_16(INIT_VALUE_16),
            .INIT_VALUE_17(INIT_VALUE_17),
            .INIT_VALUE_18(INIT_VALUE_18),
            .INIT_VALUE_19(INIT_VALUE_19),
            .INIT_VALUE_1A(INIT_VALUE_1A),
            .INIT_VALUE_1B(INIT_VALUE_1B),
            .INIT_VALUE_1C(INIT_VALUE_1C),
            .INIT_VALUE_1D(INIT_VALUE_1D),
            .INIT_VALUE_1E(INIT_VALUE_1E),
            .INIT_VALUE_1F(INIT_VALUE_1F),
            .INIT_VALUE_20(INIT_VALUE_20),
            .INIT_VALUE_21(INIT_VALUE_21),
            .INIT_VALUE_22(INIT_VALUE_22),
            .INIT_VALUE_23(INIT_VALUE_23),
            .INIT_VALUE_24(INIT_VALUE_24),
            .INIT_VALUE_25(INIT_VALUE_25),
            .INIT_VALUE_26(INIT_VALUE_26),
            .INIT_VALUE_27(INIT_VALUE_27),
            .INIT_VALUE_28(INIT_VALUE_28),
            .INIT_VALUE_29(INIT_VALUE_29),
            .INIT_VALUE_2A(INIT_VALUE_2A),
            .INIT_VALUE_2B(INIT_VALUE_2B),
            .INIT_VALUE_2C(INIT_VALUE_2C),
            .INIT_VALUE_2D(INIT_VALUE_2D),
            .INIT_VALUE_2E(INIT_VALUE_2E),
            .INIT_VALUE_2F(INIT_VALUE_2F),
            .INIT_VALUE_30(INIT_VALUE_30),
            .INIT_VALUE_31(INIT_VALUE_31),
            .INIT_VALUE_32(INIT_VALUE_32),
            .INIT_VALUE_33(INIT_VALUE_33),
            .INIT_VALUE_34(INIT_VALUE_34),
            .INIT_VALUE_35(INIT_VALUE_35),
            .INIT_VALUE_36(INIT_VALUE_36),
            .INIT_VALUE_37(INIT_VALUE_37),
            .INIT_VALUE_38(INIT_VALUE_38),
            .INIT_VALUE_39(INIT_VALUE_39),
            .INIT_VALUE_3A(INIT_VALUE_3A),
            .INIT_VALUE_3B(INIT_VALUE_3B),
            .INIT_VALUE_3C(INIT_VALUE_3C),
            .INIT_VALUE_3D(INIT_VALUE_3D),
            .INIT_VALUE_3E(INIT_VALUE_3E),
            .INIT_VALUE_3F(INIT_VALUE_3F),
            .INIT_VALUE_40(INIT_VALUE_40),
            .INIT_VALUE_41(INIT_VALUE_41),
            .INIT_VALUE_42(INIT_VALUE_42),
            .INIT_VALUE_43(INIT_VALUE_43),
            .INIT_VALUE_44(INIT_VALUE_44),
            .INIT_VALUE_45(INIT_VALUE_45),
            .INIT_VALUE_46(INIT_VALUE_46),
            .INIT_VALUE_47(INIT_VALUE_47),
            .INIT_VALUE_48(INIT_VALUE_48),
            .INIT_VALUE_49(INIT_VALUE_49),
            .INIT_VALUE_4A(INIT_VALUE_4A),
            .INIT_VALUE_4B(INIT_VALUE_4B),
            .INIT_VALUE_4C(INIT_VALUE_4C),
            .INIT_VALUE_4D(INIT_VALUE_4D),
            .INIT_VALUE_4E(INIT_VALUE_4E),
            .INIT_VALUE_4F(INIT_VALUE_4F),
            .INIT_VALUE_50(INIT_VALUE_50),
            .INIT_VALUE_51(INIT_VALUE_51),
            .INIT_VALUE_52(INIT_VALUE_52),
            .INIT_VALUE_53(INIT_VALUE_53),
            .INIT_VALUE_54(INIT_VALUE_54),
            .INIT_VALUE_55(INIT_VALUE_55),
            .INIT_VALUE_56(INIT_VALUE_56),
            .INIT_VALUE_57(INIT_VALUE_57),
            .INIT_VALUE_58(INIT_VALUE_58),
            .INIT_VALUE_59(INIT_VALUE_59),
            .INIT_VALUE_5A(INIT_VALUE_5A),
            .INIT_VALUE_5B(INIT_VALUE_5B),
            .INIT_VALUE_5C(INIT_VALUE_5C),
            .INIT_VALUE_5D(INIT_VALUE_5D),
            .INIT_VALUE_5E(INIT_VALUE_5E),
            .INIT_VALUE_5F(INIT_VALUE_5F),
            .INIT_VALUE_60(INIT_VALUE_60),
            .INIT_VALUE_61(INIT_VALUE_61),
            .INIT_VALUE_62(INIT_VALUE_62),
            .INIT_VALUE_63(INIT_VALUE_63),
            .INIT_VALUE_64(INIT_VALUE_64),
            .INIT_VALUE_65(INIT_VALUE_65),
            .INIT_VALUE_66(INIT_VALUE_66),
            .INIT_VALUE_67(INIT_VALUE_67),
            .INIT_VALUE_68(INIT_VALUE_68),
            .INIT_VALUE_69(INIT_VALUE_69),
            .INIT_VALUE_6A(INIT_VALUE_6A),
            .INIT_VALUE_6B(INIT_VALUE_6B),
            .INIT_VALUE_6C(INIT_VALUE_6C),
            .INIT_VALUE_6D(INIT_VALUE_6D),
            .INIT_VALUE_6E(INIT_VALUE_6E),
            .INIT_VALUE_6F(INIT_VALUE_6F),
            .INIT_VALUE_70(INIT_VALUE_70),
            .INIT_VALUE_71(INIT_VALUE_71),
            .INIT_VALUE_72(INIT_VALUE_72),
            .INIT_VALUE_73(INIT_VALUE_73),
            .INIT_VALUE_74(INIT_VALUE_74),
            .INIT_VALUE_75(INIT_VALUE_75),
            .INIT_VALUE_76(INIT_VALUE_76),
            .INIT_VALUE_77(INIT_VALUE_77),
            .INIT_VALUE_78(INIT_VALUE_78),
            .INIT_VALUE_79(INIT_VALUE_79),
            .INIT_VALUE_7A(INIT_VALUE_7A),
            .INIT_VALUE_7B(INIT_VALUE_7B),
            .INIT_VALUE_7C(INIT_VALUE_7C),
            .INIT_VALUE_7D(INIT_VALUE_7D),
            .INIT_VALUE_7E(INIT_VALUE_7E),
            .INIT_VALUE_7F(INIT_VALUE_7F)) mem_main (.addr_a_i(addr_a_i), 
                .addr_b_i(addr_b_i), 
                .wr_data_a_i(wr_data_a_i), 
                .wr_data_b_i(wr_data_b_i), 
                .clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .ben_a_i(ben_a_i), 
                .ben_b_i(ben_b_i), 
                .rd_data_a_o(rd_data_a_o), 
                .rd_data_b_o(rd_data_b_o), 
                .ecc_one_err_a_o(ecc_one_err_a_o), 
                .ecc_two_err_a_o(ecc_two_err_a_o), 
                .ecc_one_err_b_o(ecc_one_err_b_o), 
                .ecc_two_err_b_o(ecc_two_err_b_o)) ; 
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2017 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_main.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem4_ipgen_lscc_ram_dp_true_main #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_))), 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter WRITE_MODE_A = "normal", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter WRITE_MODE_B = "normal", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    wire [(DATA_WIDTH_A - 1):0] mem_out_a_w ; 
    wire [(DATA_WIDTH_B - 1):0] mem_out_b_w ; 
    eval_mem4_ipgen_lscc_write_through #(.FAMILY(FAMILY),
            .DATA_WIDTH(DATA_WIDTH_A),
            .REGMODE(REGMODE_A),
            .WRITE_MODE(WRITE_MODE_A)) inst_wr_a (.clk_i(clk_a_i), 
                .clk_en_i(clk_en_a_i), 
                .wr_en_i(wr_en_a_i), 
                .rst_i(rst_a_i), 
                .wr_data_i(wr_data_a_i), 
                .mem_out_i(mem_out_a_w), 
                .rd_data_o(rd_data_a_o)) ; 
    eval_mem4_ipgen_lscc_write_through #(.FAMILY(FAMILY),
            .DATA_WIDTH(DATA_WIDTH_B),
            .REGMODE(REGMODE_B),
            .WRITE_MODE(WRITE_MODE_B)) inst_wr_b (.clk_i(clk_b_i), 
                .clk_en_i(clk_en_b_i), 
                .wr_en_i(wr_en_b_i), 
                .rst_i(rst_b_i), 
                .wr_data_i(wr_data_b_i), 
                .mem_out_i(mem_out_b_w), 
                .rd_data_o(rd_data_b_o)) ; 
    localparam T_REG_MODE_A = ((WRITE_MODE_A == "write-through") ? "noreg" : REGMODE_A) ; 
    localparam T_REG_MODE_B = ((WRITE_MODE_B == "write-through") ? "noreg" : REGMODE_B) ; 
    eval_mem4_ipgen_lscc_ram_dp_true_inst #(.FAMILY(FAMILY),
            .ADDR_DEPTH_A(ADDR_DEPTH_A),
            .ADDR_WIDTH_A(ADDR_WIDTH_A),
            .DATA_WIDTH_A(DATA_WIDTH_A),
            .ADDR_DEPTH_B(ADDR_DEPTH_B),
            .ADDR_WIDTH_B(ADDR_WIDTH_B),
            .DATA_WIDTH_B(DATA_WIDTH_B),
            .REGMODE_A(T_REG_MODE_A),
            .REGMODE_B(T_REG_MODE_B),
            .GSR(GSR),
            .RESETMODE_A(RESETMODE_A),
            .RESETMODE_B(RESETMODE_B),
            .RESET_RELEASE_A(RESET_RELEASE_A),
            .RESET_RELEASE_B(RESET_RELEASE_B),
            .INIT_FILE(INIT_FILE),
            .INIT_FILE_FORMAT(INIT_FILE_FORMAT),
            .MODULE_TYPE(MODULE_TYPE),
            .INIT_MODE(INIT_MODE),
            .BYTE_ENABLE_A(BYTE_ENABLE_A),
            .BYTE_SIZE_A(BYTE_SIZE_A),
            .BYTE_WIDTH_A(BYTE_WIDTH_A),
            .BYTE_EN_POL_A(BYTE_EN_POL_A),
            .BYTE_ENABLE_B(BYTE_ENABLE_B),
            .BYTE_SIZE_B(BYTE_SIZE_B),
            .BYTE_WIDTH_B(BYTE_WIDTH_B),
            .BYTE_EN_POL_B(BYTE_EN_POL_B),
            .PIPELINES(PIPELINES),
            .ECC_ENABLE(ECC_ENABLE),
            .MEM_ID(MEM_ID),
            .MEM_SIZE(MEM_SIZE),
            .INIT_VALUE_00(INIT_VALUE_00),
            .INIT_VALUE_01(INIT_VALUE_01),
            .INIT_VALUE_02(INIT_VALUE_02),
            .INIT_VALUE_03(INIT_VALUE_03),
            .INIT_VALUE_04(INIT_VALUE_04),
            .INIT_VALUE_05(INIT_VALUE_05),
            .INIT_VALUE_06(INIT_VALUE_06),
            .INIT_VALUE_07(INIT_VALUE_07),
            .INIT_VALUE_08(INIT_VALUE_08),
            .INIT_VALUE_09(INIT_VALUE_09),
            .INIT_VALUE_0A(INIT_VALUE_0A),
            .INIT_VALUE_0B(INIT_VALUE_0B),
            .INIT_VALUE_0C(INIT_VALUE_0C),
            .INIT_VALUE_0D(INIT_VALUE_0D),
            .INIT_VALUE_0E(INIT_VALUE_0E),
            .INIT_VALUE_0F(INIT_VALUE_0F),
            .INIT_VALUE_10(INIT_VALUE_10),
            .INIT_VALUE_11(INIT_VALUE_11),
            .INIT_VALUE_12(INIT_VALUE_12),
            .INIT_VALUE_13(INIT_VALUE_13),
            .INIT_VALUE_14(INIT_VALUE_14),
            .INIT_VALUE_15(INIT_VALUE_15),
            .INIT_VALUE_16(INIT_VALUE_16),
            .INIT_VALUE_17(INIT_VALUE_17),
            .INIT_VALUE_18(INIT_VALUE_18),
            .INIT_VALUE_19(INIT_VALUE_19),
            .INIT_VALUE_1A(INIT_VALUE_1A),
            .INIT_VALUE_1B(INIT_VALUE_1B),
            .INIT_VALUE_1C(INIT_VALUE_1C),
            .INIT_VALUE_1D(INIT_VALUE_1D),
            .INIT_VALUE_1E(INIT_VALUE_1E),
            .INIT_VALUE_1F(INIT_VALUE_1F),
            .INIT_VALUE_20(INIT_VALUE_20),
            .INIT_VALUE_21(INIT_VALUE_21),
            .INIT_VALUE_22(INIT_VALUE_22),
            .INIT_VALUE_23(INIT_VALUE_23),
            .INIT_VALUE_24(INIT_VALUE_24),
            .INIT_VALUE_25(INIT_VALUE_25),
            .INIT_VALUE_26(INIT_VALUE_26),
            .INIT_VALUE_27(INIT_VALUE_27),
            .INIT_VALUE_28(INIT_VALUE_28),
            .INIT_VALUE_29(INIT_VALUE_29),
            .INIT_VALUE_2A(INIT_VALUE_2A),
            .INIT_VALUE_2B(INIT_VALUE_2B),
            .INIT_VALUE_2C(INIT_VALUE_2C),
            .INIT_VALUE_2D(INIT_VALUE_2D),
            .INIT_VALUE_2E(INIT_VALUE_2E),
            .INIT_VALUE_2F(INIT_VALUE_2F),
            .INIT_VALUE_30(INIT_VALUE_30),
            .INIT_VALUE_31(INIT_VALUE_31),
            .INIT_VALUE_32(INIT_VALUE_32),
            .INIT_VALUE_33(INIT_VALUE_33),
            .INIT_VALUE_34(INIT_VALUE_34),
            .INIT_VALUE_35(INIT_VALUE_35),
            .INIT_VALUE_36(INIT_VALUE_36),
            .INIT_VALUE_37(INIT_VALUE_37),
            .INIT_VALUE_38(INIT_VALUE_38),
            .INIT_VALUE_39(INIT_VALUE_39),
            .INIT_VALUE_3A(INIT_VALUE_3A),
            .INIT_VALUE_3B(INIT_VALUE_3B),
            .INIT_VALUE_3C(INIT_VALUE_3C),
            .INIT_VALUE_3D(INIT_VALUE_3D),
            .INIT_VALUE_3E(INIT_VALUE_3E),
            .INIT_VALUE_3F(INIT_VALUE_3F),
            .INIT_VALUE_40(INIT_VALUE_40),
            .INIT_VALUE_41(INIT_VALUE_41),
            .INIT_VALUE_42(INIT_VALUE_42),
            .INIT_VALUE_43(INIT_VALUE_43),
            .INIT_VALUE_44(INIT_VALUE_44),
            .INIT_VALUE_45(INIT_VALUE_45),
            .INIT_VALUE_46(INIT_VALUE_46),
            .INIT_VALUE_47(INIT_VALUE_47),
            .INIT_VALUE_48(INIT_VALUE_48),
            .INIT_VALUE_49(INIT_VALUE_49),
            .INIT_VALUE_4A(INIT_VALUE_4A),
            .INIT_VALUE_4B(INIT_VALUE_4B),
            .INIT_VALUE_4C(INIT_VALUE_4C),
            .INIT_VALUE_4D(INIT_VALUE_4D),
            .INIT_VALUE_4E(INIT_VALUE_4E),
            .INIT_VALUE_4F(INIT_VALUE_4F),
            .INIT_VALUE_50(INIT_VALUE_50),
            .INIT_VALUE_51(INIT_VALUE_51),
            .INIT_VALUE_52(INIT_VALUE_52),
            .INIT_VALUE_53(INIT_VALUE_53),
            .INIT_VALUE_54(INIT_VALUE_54),
            .INIT_VALUE_55(INIT_VALUE_55),
            .INIT_VALUE_56(INIT_VALUE_56),
            .INIT_VALUE_57(INIT_VALUE_57),
            .INIT_VALUE_58(INIT_VALUE_58),
            .INIT_VALUE_59(INIT_VALUE_59),
            .INIT_VALUE_5A(INIT_VALUE_5A),
            .INIT_VALUE_5B(INIT_VALUE_5B),
            .INIT_VALUE_5C(INIT_VALUE_5C),
            .INIT_VALUE_5D(INIT_VALUE_5D),
            .INIT_VALUE_5E(INIT_VALUE_5E),
            .INIT_VALUE_5F(INIT_VALUE_5F),
            .INIT_VALUE_60(INIT_VALUE_60),
            .INIT_VALUE_61(INIT_VALUE_61),
            .INIT_VALUE_62(INIT_VALUE_62),
            .INIT_VALUE_63(INIT_VALUE_63),
            .INIT_VALUE_64(INIT_VALUE_64),
            .INIT_VALUE_65(INIT_VALUE_65),
            .INIT_VALUE_66(INIT_VALUE_66),
            .INIT_VALUE_67(INIT_VALUE_67),
            .INIT_VALUE_68(INIT_VALUE_68),
            .INIT_VALUE_69(INIT_VALUE_69),
            .INIT_VALUE_6A(INIT_VALUE_6A),
            .INIT_VALUE_6B(INIT_VALUE_6B),
            .INIT_VALUE_6C(INIT_VALUE_6C),
            .INIT_VALUE_6D(INIT_VALUE_6D),
            .INIT_VALUE_6E(INIT_VALUE_6E),
            .INIT_VALUE_6F(INIT_VALUE_6F),
            .INIT_VALUE_70(INIT_VALUE_70),
            .INIT_VALUE_71(INIT_VALUE_71),
            .INIT_VALUE_72(INIT_VALUE_72),
            .INIT_VALUE_73(INIT_VALUE_73),
            .INIT_VALUE_74(INIT_VALUE_74),
            .INIT_VALUE_75(INIT_VALUE_75),
            .INIT_VALUE_76(INIT_VALUE_76),
            .INIT_VALUE_77(INIT_VALUE_77),
            .INIT_VALUE_78(INIT_VALUE_78),
            .INIT_VALUE_79(INIT_VALUE_79),
            .INIT_VALUE_7A(INIT_VALUE_7A),
            .INIT_VALUE_7B(INIT_VALUE_7B),
            .INIT_VALUE_7C(INIT_VALUE_7C),
            .INIT_VALUE_7D(INIT_VALUE_7D),
            .INIT_VALUE_7E(INIT_VALUE_7E),
            .INIT_VALUE_7F(INIT_VALUE_7F)) uinst_0 (.addr_a_i(addr_a_i), 
                .addr_b_i(addr_b_i), 
                .wr_data_a_i(wr_data_a_i), 
                .wr_data_b_i(wr_data_b_i), 
                .clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .ben_a_i(ben_a_i), 
                .ben_b_i(ben_b_i), 
                .rd_data_a_o(mem_out_a_w), 
                .rd_data_b_o(mem_out_b_w), 
                .ecc_one_err_a_o(ecc_one_err_a_o), 
                .ecc_two_err_a_o(ecc_two_err_a_o), 
                .ecc_one_err_b_o(ecc_one_err_b_o), 
                .ecc_two_err_b_o(ecc_two_err_b_o)) ; 
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [31:0] getByteSize ; 
        input [31:0] data_width ; 
        input [31:0] dev_code ; 
        begin
            case (dev_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((data_width % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
endmodule



module eval_mem4_ipgen_lscc_write_through #(parameter FAMILY = "common", 
        parameter DATA_WIDTH = 36, 
        parameter REGMODE = "noreg", 
        parameter WRITE_MODE = "normal") (
    input clk_i, 
    input clk_en_i, 
    input wr_en_i, 
    input rst_i, 
    input [(DATA_WIDTH - 1):0] wr_data_i, 
    input [(DATA_WIDTH - 1):0] mem_out_i, 
    output [(DATA_WIDTH - 1):0] rd_data_o) ;
    if ((WRITE_MODE == "write-through")) 
        begin : WRITE_THROUGH
            reg [(DATA_WIDTH - 1):0] wr_data_p_r ; 
            reg wr_en_p_r ; 
            always
                @(posedge clk_i or 
                    posedge rst_i)
                begin
                    if (rst_i) 
                        begin
                            wr_data_p_r <=  {DATA_WIDTH{1'b0}} ;
                            wr_en_p_r <=  1'b0 ;
                        end
                    else
                        begin
                            wr_data_p_r <=  wr_data_i ;
                            wr_en_p_r <=  wr_en_i ;
                        end
                end
            if ((REGMODE == "noreg")) 
                begin : _NoRegMode
                    assign rd_data_o = (wr_en_p_r ? wr_data_p_r : mem_out_i) ; 
                end
            else
                begin : _RegMode
                    reg [(DATA_WIDTH - 1):0] rd_data_r ; 
                    wire [(DATA_WIDTH - 1):0] rd_data_nxt_w = (wr_en_p_r ? wr_data_p_r : mem_out_i) ; 
                    assign rd_data_o = rd_data_r ; 
                    always
                        @(posedge clk_i or 
                            posedge rst_i)
                        begin
                            if (rst_i) 
                                begin
                                    rd_data_r <=  {DATA_WIDTH{1'b0}} ;
                                end
                            else
                                begin
                                    rd_data_r <=  rd_data_nxt_w ;
                                end
                        end
                end
        end
    else
        begin : NORMAL
            assign rd_data_o = mem_out_i ; 
        end
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2017 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_inst.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem4_ipgen_lscc_ram_dp_true_inst #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_))), 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    localparam STRING_LENGTH = 82 ; 
    genvar i0, 
        i1, 
        i_0, 
        i_1 ; 
    generate
        if ((FAMILY == "common")) 
            begin : behavioral
                (* syn_ramstyle="block_ram" *) reg [(DATA_WIDTH_A - 1):0] mem [((2 ** ADDR_WIDTH_A) - 1):0] ; 
                integer mem_i0 ; 
                initial
                    begin
                        if (((INIT_MODE == "mem_file") && (INIT_FILE != "none"))) 
                            begin
                                if ((INIT_FILE_FORMAT == "hex")) 
                                    begin
                                        $readmemh (INIT_FILE,
                                                mem,
                                                0,
                                                (ADDR_DEPTH_A - 1)) ;
                                    end
                                else
                                    begin
                                        $readmemb (INIT_FILE,
                                                mem,
                                                0,
                                                (ADDR_DEPTH_A - 1)) ;
                                    end
                            end
                    end
                reg [(DATA_WIDTH_A - 1):0] dataout_reg_a_r = {DATA_WIDTH_A{1'b0}} ; 
                reg [(DATA_WIDTH_A - 1):0] dataout_reg_buff_a_r = {DATA_WIDTH_A{1'b0}} ; 
                assign rd_data_a_o = ((REGMODE_A == "reg") ? dataout_reg_a_r : dataout_reg_buff_a_r) ; 
                always
                    @(posedge clk_a_i)
                    begin
                        if ((clk_en_a_i == 1'b1)) 
                            begin
                                if ((wr_en_a_i == 1'b1)) 
                                    begin
                                        mem[addr_a_i] <=  wr_data_a_i ;
                                    end
                                else
                                    begin
                                        dataout_reg_buff_a_r <=  mem[addr_a_i] ;
                                    end
                            end
                    end
                if ((REGMODE_A == "reg")) 
                    begin : _reg_a
                        if ((RESETMODE_A == "sync")) 
                            begin : _sync_rst_a
                                always
                                    @(posedge clk_a_i)
                                    begin
                                        if ((rst_a_i == 1'b1)) 
                                            begin
                                                dataout_reg_a_r <=  'h0 ;
                                            end
                                        else
                                            if ((wr_en_a_i == 1'b0)) 
                                                begin
                                                    dataout_reg_a_r <=  dataout_reg_buff_a_r ;
                                                end
                                    end
                            end
                        else
                            if ((RESET_RELEASE_A == "sync")) 
                                begin : _sync_rel_a
                                    always
                                        @(posedge clk_a_i or 
                                            posedge rst_a_i)
                                        begin
                                            if ((rst_a_i == 1'b1)) 
                                                begin
                                                    dataout_reg_a_r <=  'h0 ;
                                                end
                                            else
                                                if ((wr_en_a_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_a_r <=  dataout_reg_buff_a_r ;
                                                    end
                                        end
                                end
                            else
                                begin : _async_rel_a
                                    reg [(DATA_WIDTH_A - 1):0] dataout_reg_a_buffered_r = {DATA_WIDTH_A{1'b0}} ; 
                                    always
                                        @(*)
                                        begin
                                            if ((rst_a_i == 1'b1)) 
                                                begin
                                                    dataout_reg_a_r = 'h0 ;
                                                end
                                            else
                                                if ((wr_en_a_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_a_r = dataout_reg_a_buffered_r ;
                                                    end
                                        end
                                    always
                                        @(posedge clk_a_i)
                                        begin
                                            dataout_reg_a_buffered_r <=  dataout_reg_buff_a_r ;
                                        end
                                end
                    end
                reg [(DATA_WIDTH_B - 1):0] dataout_reg_b_r = {DATA_WIDTH_B{1'b0}} ; 
                reg [(DATA_WIDTH_B - 1):0] dataout_reg_buff_b_r = {DATA_WIDTH_B{1'b0}} ; 
                assign rd_data_b_o = ((REGMODE_B == "reg") ? dataout_reg_b_r : dataout_reg_buff_b_r) ; 
                always
                    @(posedge clk_b_i)
                    begin
                        if ((clk_en_b_i == 1'b1)) 
                            begin
                                if ((wr_en_b_i == 1'b1)) 
                                    begin
                                        mem[addr_b_i] <=  wr_data_b_i ;
                                    end
                                else
                                    begin
                                        dataout_reg_buff_b_r <=  mem[addr_b_i] ;
                                    end
                            end
                    end
                if ((REGMODE_B == "reg")) 
                    begin : _reg_b
                        if ((RESETMODE_B == "sync")) 
                            begin : _sync_rst_b
                                always
                                    @(posedge clk_b_i)
                                    begin
                                        if ((rst_b_i == 1'b1)) 
                                            begin
                                                dataout_reg_b_r <=  'h0 ;
                                            end
                                        else
                                            if ((wr_en_b_i == 1'b0)) 
                                                begin
                                                    dataout_reg_b_r <=  dataout_reg_buff_b_r ;
                                                end
                                    end
                            end
                        else
                            if ((RESET_RELEASE_B == "sync")) 
                                begin : _sync_rel_b
                                    always
                                        @(posedge clk_b_i or 
                                            posedge rst_b_i)
                                        begin
                                            if ((rst_b_i == 1'b1)) 
                                                begin
                                                    dataout_reg_b_r <=  'h0 ;
                                                end
                                            else
                                                if ((wr_en_b_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_b_r <=  dataout_reg_buff_b_r ;
                                                    end
                                        end
                                end
                            else
                                begin : _async_rel_b
                                    reg [(DATA_WIDTH_B - 1):0] dataout_reg_b_buffered_r = {DATA_WIDTH_B{1'b0}} ; 
                                    always
                                        @(*)
                                        begin
                                            if ((rst_b_i == 1'b1)) 
                                                begin
                                                    dataout_reg_b_r = 'h0 ;
                                                end
                                            else
                                                if ((wr_en_b_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_b_r = dataout_reg_b_buffered_r ;
                                                    end
                                        end
                                    always
                                        @(posedge clk_b_i)
                                        begin
                                            dataout_reg_b_buffered_r <=  dataout_reg_buff_b_r ;
                                        end
                                end
                    end
            end
        else
            begin : prim
                // ---------------------------------------
                // ------ SAME WIDTH Implementation ------
                // ---------------------------------------
                if (((ADDR_DEPTH_A == ADDR_DEPTH_B) && (DATA_WIDTH_A == DATA_WIDTH_B))) 
                    begin : NON_MIX
                        // ---------------------------------------------------
                        // ------ Local Parameters for EBR Optimization ------
                        // ---------------------------------------------------
                        localparam OPT_DATA_WIDTH = getMinimaData(ADDR_DEPTH_A,
                                    DATA_WIDTH_A,
                                    (BYTE_ENABLE_A || BYTE_ENABLE_B),
                                    BYTE_SIZE_A,
                                    FAMILY_CODE) ; 
                        localparam OPT_ADDR_DEPTH = data_to_addr(OPT_DATA_WIDTH,
                                    FAMILY_CODE) ; 
                        localparam OPT_ADDR_WIDTH = clog2(OPT_ADDR_DEPTH) ; 
                        localparam EBR_DATA = roundUP(DATA_WIDTH_A,
                                    OPT_DATA_WIDTH) ; 
                        localparam EBR_ADDR = roundUP(ADDR_DEPTH_A,
                                    OPT_ADDR_DEPTH) ; 
                        //Set the value of BWID to 1 when BYTE_ENABLE is disabled 
                        localparam BWID_A = ((BYTE_ENABLE_A == 0) ? 1 : (((OPT_DATA_WIDTH == 36) || (OPT_DATA_WIDTH == 32)) ? 4 : (((OPT_DATA_WIDTH == 18) || (OPT_DATA_WIDTH == 16)) ? 2 : 1))) ; 
                        localparam BWID_B = ((BYTE_ENABLE_B == 0) ? 1 : (((OPT_DATA_WIDTH == 36) || (OPT_DATA_WIDTH == 32)) ? 4 : (((OPT_DATA_WIDTH == 18) || (OPT_DATA_WIDTH == 16)) ? 2 : 1))) ; 
                        /* localparam BWID_A   = (OPT_DATA_WIDTH == 36 || OPT_DATA_WIDTH == 32) ? 4 :
                                  (OPT_DATA_WIDTH == 18 || OPT_DATA_WIDTH == 16) ? 2 : 1;
            localparam BWID_B   = (OPT_DATA_WIDTH == 36 || OPT_DATA_WIDTH == 32) ? 4 :
                                  (OPT_DATA_WIDTH == 18 || OPT_DATA_WIDTH == 16) ? 2 : 1; */
                        // ------ PORT A & B Output MUX ------
                        wire [(DATA_WIDTH_A - 1):0] rd_data_raw_a_w [(EBR_ADDR - 1):0] ; 
                        wire [(DATA_WIDTH_B - 1):0] rd_data_raw_b_w [(EBR_ADDR - 1):0] ; 
                        // ------ PORT A Address Wiring ------
                        wire [(OPT_ADDR_WIDTH - 1):0] addr_a_w ; 
                        if ((OPT_ADDR_WIDTH > ADDR_WIDTH_A)) 
                            begin : port_a_wiring
                                assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                assign addr_a_w[(OPT_ADDR_WIDTH - 1):ADDR_WIDTH_A] = {(OPT_ADDR_WIDTH - ADDR_WIDTH_A){1'b0}} ; 
                            end
                        else
                            begin : genblk1
                                assign addr_a_w = addr_a_i[(OPT_ADDR_WIDTH - 1):0] ; 
                            end
                        // ------ PORT B Address Wiring ------
                        wire [(OPT_ADDR_WIDTH - 1):0] addr_b_w ; 
                        if ((OPT_ADDR_WIDTH > ADDR_WIDTH_B)) 
                            begin : port_b_wiring
                                assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                assign addr_b_w[(OPT_ADDR_WIDTH - 1):ADDR_WIDTH_B] = {(OPT_ADDR_WIDTH - ADDR_WIDTH_B){1'b0}} ; 
                            end
                        else
                            begin : genblk2
                                assign addr_b_w = addr_b_i[(OPT_ADDR_WIDTH - 1):0] ; 
                            end
                        // ------ Address Loop (Same Width) ------
                        for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                        begin : xADDR
                            // ------ PORT A output ports ------
                            wire [(DATA_WIDTH_A - 1):0] raw_out_a_w ; 
                            assign rd_data_raw_a_w[i0] = raw_out_a_w ; 
                            // ------ PORT A Address Control Signal ------
                            wire chk_addr_a_w ; 
                            if ((EBR_ADDR > 1)) 
                                begin : genblk1
                                    assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):OPT_ADDR_WIDTH] == i0) ? 1'b1 : 1'b0) ; 
                                end
                            else
                                begin : genblk1
                                    assign chk_addr_a_w = 1'b1 ; 
                                end
                            // ------ PORT B output ports ------
                            wire [(DATA_WIDTH_B - 1):0] raw_out_b_w ; 
                            assign rd_data_raw_b_w[i0] = raw_out_b_w ; 
                            // ------ PORT B Address Control Signal ------
                            wire chk_addr_b_w ; 
                            if ((EBR_ADDR > 1)) 
                                begin : genblk2
                                    assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):OPT_ADDR_WIDTH] == i0) ? 1'b1 : 1'b0) ; 
                                end
                            else
                                begin : genblk2
                                    assign chk_addr_b_w = 1'b1 ; 
                                end
                            // ------ Data Loop (Same Width) ------
                            for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                            begin : xDATA
                                localparam ECO_POSX = (i1 * OPT_DATA_WIDTH) ; 
                                localparam ECO_POSY = (i0 * OPT_ADDR_DEPTH) ; 
                                // ------ PORT A Data Wiring ------
                                wire [(OPT_DATA_WIDTH - 1):0] in_a_w ; 
                                wire [(OPT_DATA_WIDTH - 1):0] out_a_w ; 
                                if (((OPT_DATA_WIDTH * (i1 + 1)) < DATA_WIDTH_A)) 
                                    begin : ASSIGN_A
                                        assign in_a_w = wr_data_a_i[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        assign raw_out_a_w[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] = out_a_w ; 
                                    end
                                else
                                    begin : genblk1
                                        assign in_a_w[(DATA_WIDTH_A - (1 + (OPT_DATA_WIDTH * i1))):0] = wr_data_a_i[(DATA_WIDTH_A - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        if ((OPT_DATA_WIDTH > (DATA_WIDTH_A - (OPT_DATA_WIDTH * i1)))) 
                                            begin : genblk1
                                                assign in_a_w[(OPT_DATA_WIDTH - 1):(DATA_WIDTH_A - (OPT_DATA_WIDTH * i1))] = {(OPT_DATA_WIDTH - (DATA_WIDTH_A - (OPT_DATA_WIDTH * i1))){1'b0}} ; 
                                            end
                                        assign raw_out_a_w[(DATA_WIDTH_A - 1):(OPT_DATA_WIDTH * i1)] = out_a_w[(DATA_WIDTH_A - (1 + (OPT_DATA_WIDTH * i1))):0] ; 
                                    end
                                // ------ PORT B Data Wiring ------
                                wire [(OPT_DATA_WIDTH - 1):0] in_b_w ; 
                                wire [(OPT_DATA_WIDTH - 1):0] out_b_w ; 
                                if (((OPT_DATA_WIDTH * (i1 + 1)) < DATA_WIDTH_B)) 
                                    begin : ASSIGN_B
                                        assign in_b_w = wr_data_b_i[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        assign raw_out_b_w[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] = out_b_w ; 
                                    end
                                else
                                    begin : genblk2
                                        assign in_b_w[(DATA_WIDTH_B - (1 + (OPT_DATA_WIDTH * i1))):0] = wr_data_b_i[(DATA_WIDTH_B - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        if ((OPT_DATA_WIDTH > (DATA_WIDTH_B - (OPT_DATA_WIDTH * i1)))) 
                                            begin : genblk1
                                                assign in_b_w[(OPT_DATA_WIDTH - 1):(DATA_WIDTH_B - (OPT_DATA_WIDTH * i1))] = {(OPT_DATA_WIDTH - (DATA_WIDTH_B - (OPT_DATA_WIDTH * i1))){1'b0}} ; 
                                            end
                                        assign raw_out_b_w[(DATA_WIDTH_B - 1):(OPT_DATA_WIDTH * i1)] = out_b_w[(DATA_WIDTH_B - (1 + (OPT_DATA_WIDTH * i1))):0] ; 
                                    end
                                wire [(BWID_A - 1):0] ben_a_w ; 
                                wire [(BWID_B - 1):0] ben_b_w ; 
                                // ------ Byte-Enable Wiring ------
                                if (((BWID_A == 2) || (BWID_A == 4))) 
                                    begin : BEN_MULT_A
                                        if ((BYTE_ENABLE_A == 1)) 
                                            begin : genblk1
                                                if ((((i1 + 1) * BWID_A) < BYTE_WIDTH_A)) 
                                                    begin : _A
                                                        assign ben_a_w = ben_a_i[(((i1 + 1) * BWID_A) - 1):(i1 * BWID_A)] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_a_w[(BYTE_WIDTH_A - (1 + (i1 * BWID_A))):0] = ben_a_i[(BYTE_WIDTH_A - 1):(i1 * BWID_A)] ; 
                                                        if ((((i1 + 1) * BWID_A) > BYTE_WIDTH_A)) 
                                                            begin : genblk1
                                                                assign ben_a_w[(BWID_A - 1):(BYTE_WIDTH_A - (i1 * BWID_A))] = {(BWID_A - (BYTE_WIDTH_A - (i1 * BWID_A))){1'b0}} ; 
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_a_w = {BWID_A{1'b1}} ; 
                                            end
                                    end
                                else
                                    begin : BEN_SING_A
                                        if ((BYTE_ENABLE_A == 1)) 
                                            begin : genblk1
                                                if ((OPT_DATA_WIDTH >= 8)) 
                                                    begin : genblk1
                                                        assign ben_a_w = ben_a_i[i1] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_a_w = ben_a_i[(((i1 * OPT_DATA_WIDTH) * BYTE_WIDTH_A) / DATA_WIDTH_A)] ; 
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_a_w = {BWID_A{1'b1}} ; 
                                            end
                                    end
                                if (((BWID_B == 2) || (BWID_B == 4))) 
                                    begin : BEN_MULT_B
                                        if ((BYTE_ENABLE_B == 1)) 
                                            begin : genblk1
                                                if ((((i1 + 1) * 2) < BYTE_WIDTH_B)) 
                                                    begin : _B
                                                        assign ben_b_w = ben_b_i[(((i1 + 1) * BWID_B) - 1):(i1 * BWID_B)] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_b_w[(BYTE_WIDTH_B - (1 + (i1 * BWID_B))):0] = ben_b_i[(BYTE_WIDTH_B - 1):(i1 * BWID_B)] ; 
                                                        if ((((i1 + 1) * BWID_B) > BYTE_WIDTH_B)) 
                                                            begin : genblk1
                                                                assign ben_b_w[(BWID_B - 1):(BYTE_WIDTH_B - (i1 * BWID_B))] = {(BWID_B - (BYTE_WIDTH_B - (i1 * BWID_B))){1'b0}} ; 
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_b_w = {BWID_B{1'b1}} ; 
                                            end
                                    end
                                else
                                    begin : BEN_SING_B
                                        if ((BYTE_ENABLE_B == 1)) 
                                            begin : genblk1
                                                if ((OPT_DATA_WIDTH >= 8)) 
                                                    begin : genblk1
                                                        assign ben_b_w = ben_b_i[i1] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_b_w = ben_b_i[(((i1 * OPT_DATA_WIDTH) * BYTE_WIDTH_B) / DATA_WIDTH_B)] ; 
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_b_w = {BWID_B{1'b1}} ; 
                                            end
                                    end
                                // ------------------------------------
                                // ------ SINGLE MEMORY INSTANCE ------
                                // ------------------------------------
                                if ((INIT_MODE == "mem_file")) 
                                    begin : mem_file
                                        eval_mem4_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                ._FCODE_AP6_(_FCODE_AP6_),
                                                ._FCODE_COMMON_(_FCODE_COMMON_),
                                                .FAMILY(FAMILY),
                                                .INIT_MODE(INIT_MODE),
                                                .MEM_SIZE(MEM_SIZE),
                                                .MEM_ID(MEM_ID),
                                                .POSx(ECO_POSX),
                                                .POSy(ECO_POSY),
                                                .DATA_WIDTH_A(OPT_DATA_WIDTH),
                                                .REGMODE_A(REGMODE_A),
                                                .RESETMODE_A(RESETMODE_A),
                                                .RESET_RELEASE_A(RESET_RELEASE_A),
                                                .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                .DATA_WIDTH_B(OPT_DATA_WIDTH),
                                                .REGMODE_B(REGMODE_B),
                                                .RESETMODE_B(RESETMODE_B),
                                                .RESET_RELEASE_B(RESET_RELEASE_B),
                                                .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                .BYTE_EN_POL_B(BYTE_EN_POL_B),
                                                .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                // ------ PORT A PARAMETERS ------
                                                // ------ PORT B PARAMETERS ------
                                                // ------ INIT PARAMETERS ------
                                                // ------ PORT A signals ------
                                                .clk_a_i(clk_a_i), 
                                                    .clk_en_a_i(clk_en_a_i), 
                                                    .rst_a_i(rst_a_i), 
                                                    .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                    .ben_a_i(ben_a_w), 
                                                    .addr_a_i(addr_a_w), 
                                                    .wr_data_a_i(in_a_w), 
                                                    .rd_data_a_o(out_a_w), 
                                                    // ------ PORT B signals ------
                                                .clk_b_i(clk_b_i), 
                                                    .clk_en_b_i(clk_en_b_i), 
                                                    .rst_b_i(rst_b_i), 
                                                    .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                    .ben_b_i(ben_b_w), 
                                                    .addr_b_i(addr_b_w), 
                                                    .wr_data_b_i(in_b_w), 
                                                    .rd_data_b_o(out_b_w)) ; 
                                    end
                                else
                                    begin : no_mem_file
                                        eval_mem4_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                ._FCODE_AP6_(_FCODE_AP6_),
                                                ._FCODE_COMMON_(_FCODE_COMMON_),
                                                .FAMILY(FAMILY),
                                                .INIT_MODE(INIT_MODE),
                                                .MEM_SIZE(MEM_SIZE),
                                                .MEM_ID(MEM_ID),
                                                .POSx(ECO_POSX),
                                                .POSy(ECO_POSY),
                                                .DATA_WIDTH_A(OPT_DATA_WIDTH),
                                                .REGMODE_A(REGMODE_A),
                                                .RESETMODE_A(RESETMODE_A),
                                                .RESET_RELEASE_A(RESET_RELEASE_A),
                                                .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                .DATA_WIDTH_B(OPT_DATA_WIDTH),
                                                .REGMODE_B(REGMODE_B),
                                                .RESETMODE_B(RESETMODE_B),
                                                .RESET_RELEASE_B(RESET_RELEASE_B),
                                                .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                .BYTE_EN_POL_B(BYTE_EN_POL_B)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                // ------ PORT A PARAMETERS ------
                                                // ------ PORT B PARAMETERS ------
                                                // ------ PORT A signals ------
                                                .clk_a_i(clk_a_i), 
                                                    .clk_en_a_i(clk_en_a_i), 
                                                    .rst_a_i(rst_a_i), 
                                                    .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                    .ben_a_i(ben_a_w), 
                                                    .addr_a_i(addr_a_w), 
                                                    .wr_data_a_i(in_a_w), 
                                                    .rd_data_a_o(out_a_w), 
                                                    // ------ PORT B signals ------
                                                .clk_b_i(clk_b_i), 
                                                    .clk_en_b_i(clk_en_b_i), 
                                                    .rst_b_i(rst_b_i), 
                                                    .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                    .ben_b_i(ben_b_w), 
                                                    .addr_b_i(addr_b_w), 
                                                    .wr_data_b_i(in_b_w), 
                                                    .rd_data_b_o(out_b_w)) ; 
                                    end
                            end
                        end
                        if ((EBR_ADDR == 1)) 
                            begin : ONE_OUT
                                assign rd_data_a_o = rd_data_raw_a_w[0] ; 
                                assign rd_data_b_o = rd_data_raw_b_w[0] ; 
                            end
                        else
                            begin : MULT_OUT
                                // ------ PORT A output assignment
                                reg [(DATA_WIDTH_A - 1):0] a_out_buff_r ; 
                                reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                assign rd_data_a_o = a_out_buff_r ; 
                                always
                                    @(*)
                                    begin
                                        a_out_buff_r = rd_data_raw_a_w[addr_a_p_r[(ADDR_WIDTH_A - 1):OPT_ADDR_WIDTH]] ;
                                    end
                                if ((REGMODE_A == "noreg")) 
                                    begin : genblk1
                                        if ((RESETMODE_A == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_a_p_r <=  addr_a_i ;
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i or 
                                                        posedge rst_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_a_p_r <=  addr_a_i ;
                                                            end
                                                    end
                                            end
                                    end
                                else
                                    begin : genblk1
                                        reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r ; 
                                        if ((RESETMODE_A == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_a_p2_r <=  addr_a_i ;
                                                                addr_a_p_r <=  addr_a_p2_r ;
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i or 
                                                        posedge rst_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_a_p2_r <=  addr_a_i ;
                                                                addr_a_p_r <=  addr_a_p2_r ;
                                                            end
                                                    end
                                            end
                                    end
                                // ------ PORT B output assignment
                                reg [(DATA_WIDTH_B - 1):0] b_out_buff_r ; 
                                reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r ; 
                                assign rd_data_b_o = b_out_buff_r ; 
                                always
                                    @(*)
                                    begin
                                        b_out_buff_r = rd_data_raw_b_w[addr_b_p_r[(ADDR_WIDTH_B - 1):OPT_ADDR_WIDTH]] ;
                                    end
                                if ((REGMODE_B == "noreg")) 
                                    begin : genblk2
                                        if ((RESETMODE_B == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_b_p_r <=  addr_b_i ;
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i or 
                                                        posedge rst_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_b_p_r <=  addr_b_i ;
                                                            end
                                                    end
                                            end
                                    end
                                else
                                    begin : genblk2
                                        reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r ; 
                                        if ((RESETMODE_B == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_b_p2_r <=  addr_b_i ;
                                                                addr_b_p_r <=  addr_b_p2_r ;
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i or 
                                                        posedge rst_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_b_p2_r <=  addr_b_i ;
                                                                addr_b_p_r <=  addr_b_p2_r ;
                                                            end
                                                    end
                                            end
                                    end
                            end
                    end
                else
                    // ---------------------------------------------------------
                    // ------ Mixed WIDTH Implementation (no Byte-Enable) ------
                    // ---------------------------------------------------------
                    if (((BYTE_ENABLE_A == 0) && (BYTE_ENABLE_B == 0))) 
                        begin : MIX_N_BEN
                            // ---------------------------------------------------
                            // ------ Local Parameters for EBR Optimization ------
                            // ---------------------------------------------------
                            localparam Q_FACTOR = ((DATA_WIDTH_A > DATA_WIDTH_B) ? (DATA_WIDTH_A / DATA_WIDTH_B) : (DATA_WIDTH_B / DATA_WIDTH_A)) ; 
                            localparam MAX_DATA = ((DATA_WIDTH_A > DATA_WIDTH_B) ? DATA_WIDTH_A : DATA_WIDTH_B) ; 
                            localparam MAX_PORT = ((DATA_WIDTH_A > DATA_WIDTH_B) ? "A" : "B") ; 
                            localparam MIN_DEPTH = ((MAX_PORT == "A") ? ADDR_DEPTH_A : ADDR_DEPTH_B) ; 
                            localparam PROC_MAX_DATA = procData(MAX_DATA,
                                        FAMILY_CODE) ; 
                            localparam PROC_MIN_DEPTH = (2 ** clog2(MIN_DEPTH)) ; 
                            localparam PROC_MIN_DATA = (PROC_MAX_DATA / Q_FACTOR) ; 
                            localparam PROC_MAX_DEPTH = (PROC_MIN_DEPTH * Q_FACTOR) ; 
                            localparam PORT_A_DATA_USE = ((MAX_PORT == "A") ? PROC_MAX_DATA : PROC_MIN_DATA) ; 
                            localparam PORT_A_DEPTH_USE = ((MAX_PORT == "A") ? PROC_MIN_DEPTH : PROC_MAX_DEPTH) ; 
                            localparam PORT_A_DEPTH_WIDTH = clog2(PORT_A_DEPTH_USE) ; 
                            localparam PORT_B_DATA_USE = ((MAX_PORT == "B") ? PROC_MAX_DATA : PROC_MIN_DATA) ; 
                            localparam PORT_B_DEPTH_USE = ((MAX_PORT == "B") ? PROC_MIN_DEPTH : PROC_MAX_DEPTH) ; 
                            localparam PORT_B_DEPTH_WIDTH = clog2(PORT_B_DEPTH_USE) ; 
                            localparam A_DWID_IMPL = getCASE1DataImpl(PORT_A_DEPTH_USE,
                                        PORT_A_DATA_USE,
                                        PORT_B_DEPTH_USE,
                                        PORT_B_DATA_USE,
                                        1'b1,
                                        0,
                                        FAMILY_CODE) ; 
                            localparam A_DEPTH_IMPL = data_to_addr(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam A_AWID_IMPL = clog2(A_DEPTH_IMPL) ; 
                            localparam B_DWID_IMPL = getCASE1DataImpl(PORT_A_DEPTH_USE,
                                        PORT_A_DATA_USE,
                                        PORT_B_DEPTH_USE,
                                        PORT_B_DATA_USE,
                                        1'b0,
                                        0,
                                        FAMILY_CODE) ; 
                            localparam B_DEPTH_IMPL = data_to_addr(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_AWID_IMPL = clog2(B_DEPTH_IMPL) ; 
                            localparam EBR_ADDR = roundUP(PORT_A_DEPTH_USE,
                                        A_DEPTH_IMPL) ; 
                            localparam EBR_DATA = roundUP(PORT_A_DATA_USE,
                                        A_DWID_IMPL) ; 
                            // ------ Port A address truncation ------
                            wire [(A_AWID_IMPL - 1):0] addr_a_w ; 
                            if ((A_AWID_IMPL > ADDR_WIDTH_A)) 
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):ADDR_WIDTH_A] = {(A_AWID_IMPL - ADDR_WIDTH_A){1'b0}} ; 
                                    assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                end
                            else
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):0] = addr_a_i[(A_AWID_IMPL - 1):0] ; 
                                end
                            // ------ Port B address truncation ------
                            wire [(B_AWID_IMPL - 1):0] addr_b_w ; 
                            if ((B_AWID_IMPL > ADDR_WIDTH_B)) 
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):ADDR_WIDTH_B] = {(B_AWID_IMPL - ADDR_WIDTH_B){1'b0}} ; 
                                    assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                end
                            else
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):0] = addr_b_i[(B_AWID_IMPL - 1):0] ; 
                                end
                            // ------ TOP level wiring ports ------
                            wire [(PORT_A_DATA_USE - 1):0] in_a_top_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] in_b_top_w ; 
                            wire [(PORT_A_DATA_USE - 1):0] out_a_top_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_top_w ; 
                            // ------ EBR level wiring ports ------
                            wire [(PORT_A_DATA_USE - 1):0] in_a_ebr_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] in_b_ebr_w ; 
                            wire [(PORT_A_DATA_USE - 1):0] out_a_ebr_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_ebr_w ; 
                            // ------ Output Port MUX ------
                            wire [(PORT_A_DATA_USE - 1):0] out_a_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            // ------------------------------------------------
                            // ------ WIRING translation from TOP to EBR ------
                            // ------------------------------------------------
                            if ((PORT_A_DATA_USE > PORT_B_DATA_USE)) 
                                begin : A_OVR_B
                                    // ------ PORT B (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    if ((PORT_B_DATA_USE > DATA_WIDTH_B)) 
                                        begin : genblk1
                                            assign in_b_top_w[(PORT_B_DATA_USE - 1):DATA_WIDTH_B] = {(PORT_B_DATA_USE - DATA_WIDTH_B){1'b0}} ; 
                                        end
                                    assign in_b_top_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_top_w[(DATA_WIDTH_B - 1):0] ; 
                                    // ------ PORT A (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(PORT_B_DATA_USE - 1):0] inp_a_buff_seg_w [((PORT_A_DATA_USE / PORT_B_DATA_USE) - 1):0] ; 
                                    wire [(PORT_B_DATA_USE - 1):0] out_a_buff_seg_w [((PORT_A_DATA_USE / PORT_B_DATA_USE) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign inp_a_buff_seg_w[i_0] = wr_data_a_i[((DATA_WIDTH_B * (i_0 + 1)) - 1):(DATA_WIDTH_B * i_0)] ; 
                                        assign rd_data_a_o[((DATA_WIDTH_B * (i_0 + 1)) - 1):(DATA_WIDTH_B * i_0)] = out_a_buff_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        assign in_a_top_w[(((i_0 * PORT_B_DATA_USE) + PORT_B_DATA_USE) - 1):(i_0 * PORT_B_DATA_USE)] = inp_a_buff_seg_w[i_0] ; 
                                        assign out_a_buff_seg_w[i_0] = out_a_top_w[(((i_0 * PORT_B_DATA_USE) + PORT_B_DATA_USE) - 1):(i_0 * PORT_B_DATA_USE)] ; 
                                    end
                                    // ------ PORT B (TOP level to EBR level splt) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    assign in_b_ebr_w = in_b_top_w ; 
                                    assign out_b_top_w = out_b_ebr_w ; 
                                    // ------ PORT A (TOP level to EBR level splt) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(B_DWID_IMPL - 1):0] in_a_ebr_seg_w [((PORT_A_DATA_USE / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_DWID_IMPL - 1):0] out_a_ebr_seg_w [((PORT_A_DATA_USE / B_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk4
                                        for (i_1 = 0;(i_1 < (PORT_A_DATA_USE / (B_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_a_ebr_seg_w[(((PORT_A_DATA_USE / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = in_a_top_w[((((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk5
                                        assign in_a_ebr_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = in_a_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk6
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_a_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_a_ebr_w[((((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk7
                                        assign out_a_top_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = out_a_ebr_seg_w[i_0] ; 
                                    end
                                end
                            else
                                begin : B_OVR_A
                                    // ------ PORT A (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    if ((PORT_A_DATA_USE > DATA_WIDTH_A)) 
                                        begin : genblk1
                                            assign in_a_top_w[(PORT_A_DATA_USE - 1):DATA_WIDTH_A] = {(PORT_A_DATA_USE - DATA_WIDTH_A){1'b0}} ; 
                                        end
                                    assign in_a_top_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_top_w ; 
                                    // ------ PORT B (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(PORT_A_DATA_USE - 1):0] inp_b_buff_seg_w [((PORT_B_DATA_USE / PORT_A_DATA_USE) - 1):0] ; 
                                    wire [(PORT_A_DATA_USE - 1):0] out_b_buff_seg_w [((PORT_B_DATA_USE / PORT_A_DATA_USE) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign inp_b_buff_seg_w[i_0] = wr_data_b_i[((DATA_WIDTH_A * (i_0 + 1)) - 1):(DATA_WIDTH_A * i_0)] ; 
                                        assign rd_data_b_o[((DATA_WIDTH_A * (i_0 + 1)) - 1):(DATA_WIDTH_A * i_0)] = out_b_buff_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        assign in_b_top_w[(((i_0 * PORT_A_DATA_USE) + PORT_A_DATA_USE) - 1):(i_0 * PORT_A_DATA_USE)] = inp_b_buff_seg_w[i_0] ; 
                                        assign out_b_buff_seg_w[i_0] = out_b_top_w[(((i_0 * PORT_A_DATA_USE) + PORT_A_DATA_USE) - 1):(i_0 * PORT_A_DATA_USE)] ; 
                                    end
                                    // ------ PORT A (TOP level to EBR level splt) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    assign in_a_ebr_w = in_a_top_w ; 
                                    assign out_a_top_w = out_a_ebr_w ; 
                                    // ------ PORT B (TOP level to EBR level splt) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(A_DWID_IMPL - 1):0] in_b_ebr_seg_w [((PORT_B_DATA_USE / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_DWID_IMPL - 1):0] out_b_ebr_seg_w [((PORT_B_DATA_USE / A_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk4
                                        for (i_1 = 0;(i_1 < (PORT_B_DATA_USE / (A_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_b_ebr_seg_w[(((PORT_B_DATA_USE / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = in_b_top_w[((((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk5
                                        assign in_b_ebr_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = in_b_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk6
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_b_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_b_ebr_w[((((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk7
                                        assign out_b_top_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = out_b_ebr_seg_w[i_0] ; 
                                    end
                                end
                            // ------ Address Loop (Mixed Width no Byte-Enable) ------
                            for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                            begin : xADDR
                                // ------ PORT A output ports ------
                                wire [(PORT_A_DATA_USE - 1):0] raw_out_a_w ; 
                                assign out_a_ebr_raw_w[i0] = raw_out_a_w ; 
                                // ------ PORT A Address Control Signal ------
                                wire chk_addr_a_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk1
                                        assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):A_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk1
                                        assign chk_addr_a_w = 1'b1 ; 
                                    end
                                // ------ PORT B output ports ------
                                wire [(PORT_B_DATA_USE - 1):0] raw_out_b_w ; 
                                assign out_b_ebr_raw_w[i0] = raw_out_b_w ; 
                                // ------ PORT B Address Control Signal ------
                                wire chk_addr_b_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk2
                                        assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):B_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk2
                                        assign chk_addr_b_w = 1'b1 ; 
                                    end
                                // ------ Data Loop (Mixed Width no Byte-Enable) ------                
                                for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                                begin : xDATA
                                    localparam ECO_POSX = (i1 * A_DWID_IMPL) ; 
                                    localparam ECO_POSY = (i0 * A_DEPTH_IMPL) ; 
                                    // ------ PORT A Data Wiring ------
                                    wire [(A_DWID_IMPL - 1):0] in_a_w ; 
                                    wire [(A_DWID_IMPL - 1):0] out_a_w ; 
                                    if ((PORT_A_DATA_USE > (A_DWID_IMPL * (i1 + 1)))) 
                                        begin : genblk1
                                            assign in_a_w = in_a_ebr_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] ; 
                                            assign raw_out_a_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] = out_a_w ; 
                                        end
                                    else
                                        begin : genblk1
                                            assign in_a_w[(PORT_A_DATA_USE - (1 + (A_DWID_IMPL * i1))):0] = in_a_ebr_w[(PORT_A_DATA_USE - 1):(A_DWID_IMPL * i1)] ; 
                                            if ((A_DWID_IMPL > (PORT_A_DATA_USE - (A_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_a_w[(A_DWID_IMPL - 1):(PORT_A_DATA_USE - (A_DWID_IMPL * i1))] = {(A_DWID_IMPL - (PORT_A_DATA_USE - (A_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            assign raw_out_a_w[(PORT_A_DATA_USE - 1):(A_DWID_IMPL * i1)] = out_a_w[(PORT_A_DATA_USE - (1 + (A_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------ PORT B Data Wiring ------
                                    wire [(B_DWID_IMPL - 1):0] in_b_w ; 
                                    wire [(B_DWID_IMPL - 1):0] out_b_w ; 
                                    if ((PORT_B_DATA_USE > (B_DWID_IMPL * (i1 + 1)))) 
                                        begin : genblk2
                                            assign in_b_w = in_b_ebr_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] ; 
                                            assign raw_out_b_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] = out_b_w ; 
                                        end
                                    else
                                        begin : genblk2
                                            assign in_b_w[(PORT_B_DATA_USE - (1 + (B_DWID_IMPL * i1))):0] = in_b_ebr_w[(PORT_B_DATA_USE - 1):(B_DWID_IMPL * i1)] ; 
                                            if ((B_DWID_IMPL > (PORT_B_DATA_USE - (B_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_b_w[(B_DWID_IMPL - 1):(PORT_B_DATA_USE - (B_DWID_IMPL * i1))] = {(B_DWID_IMPL - (PORT_B_DATA_USE - (B_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            assign raw_out_b_w[(PORT_B_DATA_USE - 1):(B_DWID_IMPL * i1)] = out_b_w[(PORT_B_DATA_USE - (1 + (B_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------------------------------------
                                    // ------ SINGLE MEMORY INSTANCE ------
                                    // ------------------------------------
                                    if ((INIT_MODE == "mem_file")) 
                                        begin : mem_file
                                            eval_mem4_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(0),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(0),
                                                    .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ INIT PARAMETERS ------
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(1'b1), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(1'b1), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                    else
                                        begin : no_mem_file
                                            eval_mem4_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(0),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(0)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(1'b1), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(1'b1), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                end
                            end
                            if ((EBR_ADDR == 1)) 
                                begin : genblk5
                                    assign out_a_ebr_w = out_a_ebr_raw_w[0] ; 
                                    assign out_b_ebr_w = out_b_ebr_raw_w[0] ; 
                                end
                            else
                                begin : genblk5
                                    // ------ PORT A output assignment ------
                                    reg [(PORT_A_DATA_USE - 1):0] a_out_buff_r ; 
                                    reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                    assign out_a_ebr_w = a_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            a_out_buff_r = out_a_ebr_raw_w[addr_a_p_r[(ADDR_WIDTH_A - 1):A_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_A == "noreg")) 
                                        begin : genblk1
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk1
                                            reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r ; 
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                        end
                                                end
                                        end
                                    // ------ PORT B output assignment ------
                                    reg [(PORT_B_DATA_USE - 1):0] b_out_buff_r ; 
                                    reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r ; 
                                    assign out_b_ebr_w = b_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            b_out_buff_r = out_b_ebr_raw_w[addr_b_p_r[(ADDR_WIDTH_B - 1):B_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_B == "noreg")) 
                                        begin : genblk2
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk2
                                            reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r ; 
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                        end
                                                end
                                        end
                                end
                        end
                    else
                        begin : MIX_Y_BEN
                            // ---------------------------------------------------
                            // ------ Local Parameters for EBR Optimization ------
                            // ---------------------------------------------------
                            localparam A_DWID_IMPL = getCASE1DataImpl_wBEN(ADDR_DEPTH_A,
                                        DATA_WIDTH_A,
                                        ADDR_DEPTH_B,
                                        DATA_WIDTH_B,
                                        1'b1,
                                        FAMILY_CODE) ; 
                            localparam A_DEPTH_IMPL = data_to_addr(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam A_AWID_IMPL = clog2(A_DEPTH_IMPL) ; 
                            localparam A_BWID_IMPL = getImplByteWidth(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_DWID_IMPL = getCASE1DataImpl_wBEN(ADDR_DEPTH_A,
                                        DATA_WIDTH_A,
                                        ADDR_DEPTH_B,
                                        DATA_WIDTH_B,
                                        1'b0,
                                        FAMILY_CODE) ; 
                            localparam B_DEPTH_IMPL = data_to_addr(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_AWID_IMPL = clog2(B_DEPTH_IMPL) ; 
                            localparam B_BWID_IMPL = getImplByteWidth(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam EBR_ADDR = roundUP(ADDR_DEPTH_A,
                                        A_DEPTH_IMPL) ; 
                            localparam EBR_DATA = roundUP(DATA_WIDTH_A,
                                        A_DWID_IMPL) ; 
                            // ------ Port A address truncation ------
                            wire [(A_AWID_IMPL - 1):0] addr_a_w ; 
                            if ((A_AWID_IMPL > ADDR_WIDTH_A)) 
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):ADDR_WIDTH_A] = {(A_AWID_IMPL - ADDR_WIDTH_A){1'b0}} ; 
                                    assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                end
                            else
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):0] = addr_a_i[(A_AWID_IMPL - 1):0] ; 
                                end
                            // ------ Port B address truncation ------
                            wire [(B_AWID_IMPL - 1):0] addr_b_w ; 
                            if ((B_AWID_IMPL > ADDR_WIDTH_B)) 
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):ADDR_WIDTH_B] = {(B_AWID_IMPL - ADDR_WIDTH_B){1'b0}} ; 
                                    assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                end
                            else
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):0] = addr_b_i[(B_AWID_IMPL - 1):0] ; 
                                end
                            // ------ EBR level wiring ports ------
                            wire [(DATA_WIDTH_A - 1):0] in_a_ebr_w ; 
                            wire [(DATA_WIDTH_B - 1):0] in_b_ebr_w ; 
                            wire [(DATA_WIDTH_A - 1):0] out_a_ebr_w ; 
                            wire [(DATA_WIDTH_B - 1):0] out_b_ebr_w ; 
                            wire [(BYTE_WIDTH_A - 1):0] ben_a_ebr_w ; 
                            wire [(BYTE_WIDTH_B - 1):0] ben_b_ebr_w ; 
                            // ------ Output Port MUX ------
                            wire [(DATA_WIDTH_A - 1):0] out_a_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            wire [(DATA_WIDTH_B - 1):0] out_b_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            if ((DATA_WIDTH_A > DATA_WIDTH_B)) 
                                begin : A_OVR_B
                                    // ------ PORT B (TOP to EBR level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    assign in_b_ebr_w = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_ebr_w ; 
                                    assign ben_b_ebr_w = ben_b_i ; 
                                    // ------ PORT A (TOP to EBR level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(B_DWID_IMPL - 1):0] in_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_BWID_IMPL - 1):0] ben_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_DWID_IMPL - 1):0] out_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk1
                                        for (i_1 = 0;(i_1 < (DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_a_ebr_seg_w[(((DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = wr_data_a_i[((((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL))] ; 
                                            assign ben_a_ebr_seg_w[(((DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = ben_a_i[((((i_0 * B_BWID_IMPL) + ((i_1 * EBR_DATA) * B_BWID_IMPL)) + B_BWID_IMPL) - 1):((i_0 * B_BWID_IMPL) + ((i_1 * EBR_DATA) * B_BWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign in_a_ebr_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = in_a_ebr_seg_w[i_0] ; 
                                        assign ben_a_ebr_w[(((i_0 * B_BWID_IMPL) + B_BWID_IMPL) - 1):(i_0 * B_BWID_IMPL)] = ben_a_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / DATA_WIDTH_B));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_a_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_a_ebr_w[((((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk4
                                        assign rd_data_a_o[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = out_a_ebr_seg_w[i_0] ; 
                                    end
                                end
                            else
                                begin : B_OVR_A
                                    // ------ PORT A (TOP to EBR level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    assign in_a_ebr_w = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_ebr_w ; 
                                    assign ben_a_ebr_w = ben_a_i ; 
                                    // ------ PORT B (TOP to EBR level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(A_DWID_IMPL - 1):0] in_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_BWID_IMPL - 1):0] ben_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_DWID_IMPL - 1):0] out_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk1
                                        for (i_1 = 0;(i_1 < (DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_b_ebr_seg_w[(((DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = wr_data_b_i[((((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL))] ; 
                                            assign ben_b_ebr_seg_w[(((DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = ben_b_i[((((i_0 * A_BWID_IMPL) + ((i_1 * EBR_DATA) * A_BWID_IMPL)) + A_BWID_IMPL) - 1):((i_0 * A_BWID_IMPL) + ((i_1 * EBR_DATA) * A_BWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign in_b_ebr_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = in_b_ebr_seg_w[i_0] ; 
                                        assign ben_b_ebr_w[(((i_0 * A_BWID_IMPL) + A_BWID_IMPL) - 1):(i_0 * A_BWID_IMPL)] = ben_b_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / DATA_WIDTH_A));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_b_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_b_ebr_w[((((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk4
                                        assign rd_data_b_o[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = out_b_ebr_seg_w[i_0] ; 
                                    end
                                end
                            // ------ Address Loop (Mixed Width w/ Byte-Enable) ------
                            for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                            begin : xADDR
                                // ------ PORT A output ports ------
                                wire [(DATA_WIDTH_A - 1):0] raw_out_a_w ; 
                                assign out_a_ebr_raw_w[i0] = raw_out_a_w ; 
                                // ------ PORT A Address Control Signal ------
                                wire chk_addr_a_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk1
                                        assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):A_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk1
                                        assign chk_addr_a_w = 1'b1 ; 
                                    end
                                // ------ PORT B output ports ------
                                wire [(DATA_WIDTH_B - 1):0] raw_out_b_w ; 
                                assign out_b_ebr_raw_w[i0] = raw_out_b_w ; 
                                // ------ PORT B Address Control Signal ------
                                wire chk_addr_b_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk2
                                        assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):B_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk2
                                        assign chk_addr_b_w = 1'b1 ; 
                                    end
                                // ------ Data Loop (Mixed Width w/ Byte-Enable) ------     
                                for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                                begin : xDATA
                                    localparam ECO_POSX = (i1 * A_DWID_IMPL) ; 
                                    localparam ECO_POSY = (i0 * A_DEPTH_IMPL) ; 
                                    // ------ PORT A Data Wiring ------
                                    wire [(A_DWID_IMPL - 1):0] in_a_w ; 
                                    wire [(A_BWID_IMPL - 1):0] ben_a_w ; 
                                    wire [(A_DWID_IMPL - 1):0] out_a_w ; 
                                    if (((A_DWID_IMPL * (i1 + 1)) < DATA_WIDTH_A)) 
                                        begin : genblk1
                                            assign in_a_w = in_a_ebr_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] ; 
                                            assign raw_out_a_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] = out_a_w ; 
                                            assign ben_a_w = ((BYTE_ENABLE_A == 1) ? ben_a_ebr_w[((A_BWID_IMPL * (i1 + 1)) - 1):(A_BWID_IMPL * i1)] : {A_BWID_IMPL{1'b1}}) ; 
                                        end
                                    else
                                        begin : genblk1
                                            assign in_a_w[(DATA_WIDTH_A - (1 + (A_DWID_IMPL * i1))):0] = in_a_ebr_w[(DATA_WIDTH_A - 1):(A_DWID_IMPL * i1)] ; 
                                            if ((A_DWID_IMPL > (DATA_WIDTH_A - (A_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_a_w[(A_DWID_IMPL - 1):(DATA_WIDTH_A - (A_DWID_IMPL * i1))] = {(A_DWID_IMPL - (DATA_WIDTH_A - (A_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            if ((BYTE_ENABLE_A == 1)) 
                                                begin : genblk2
                                                    assign ben_a_w[(BYTE_WIDTH_A - (1 + (A_BWID_IMPL * i1))):0] = ben_a_ebr_w[(BYTE_WIDTH_A - 1):(A_BWID_IMPL * i1)] ; 
                                                    if ((A_BWID_IMPL > (BYTE_WIDTH_A - (A_BWID_IMPL * i1)))) 
                                                        begin : genblk1
                                                            assign ben_a_w[(A_BWID_IMPL - 1):(BYTE_WIDTH_A - (A_BWID_IMPL * i1))] = {(A_BWID_IMPL - (BYTE_WIDTH_A - (A_BWID_IMPL * i1))){1'b1}} ; 
                                                        end
                                                end
                                            else
                                                begin : genblk2
                                                    assign ben_a_w = {A_BWID_IMPL{1'b1}} ; 
                                                end
                                            assign raw_out_a_w[(DATA_WIDTH_A - 1):(A_DWID_IMPL * i1)] = out_a_w[(DATA_WIDTH_A - (1 + (A_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------ PORT B Data Wiring ------
                                    wire [(B_DWID_IMPL - 1):0] in_b_w ; 
                                    wire [(B_BWID_IMPL - 1):0] ben_b_w ; 
                                    wire [(B_DWID_IMPL - 1):0] out_b_w ; 
                                    if (((B_DWID_IMPL * (i1 + 1)) < DATA_WIDTH_B)) 
                                        begin : genblk2
                                            assign in_b_w = in_b_ebr_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] ; 
                                            assign raw_out_b_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] = out_b_w ; 
                                            assign ben_b_w = ((BYTE_ENABLE_B == 1) ? ben_b_ebr_w[((B_BWID_IMPL * (i1 + 1)) - 1):(B_BWID_IMPL * i1)] : {B_BWID_IMPL{1'b1}}) ; 
                                        end
                                    else
                                        begin : genblk2
                                            assign in_b_w[(DATA_WIDTH_B - (1 + (B_DWID_IMPL * i1))):0] = in_b_ebr_w[(DATA_WIDTH_B - 1):(B_DWID_IMPL * i1)] ; 
                                            if ((B_DWID_IMPL > (DATA_WIDTH_B - (B_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_b_w[(B_DWID_IMPL - 1):(DATA_WIDTH_B - (B_DWID_IMPL * i1))] = {(B_DWID_IMPL - (DATA_WIDTH_B - (B_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            if ((BYTE_ENABLE_B == 1)) 
                                                begin : genblk2
                                                    assign ben_b_w[(BYTE_WIDTH_B - (1 + (B_BWID_IMPL * i1))):0] = ben_b_ebr_w[(BYTE_WIDTH_B - 1):(B_BWID_IMPL * i1)] ; 
                                                    if ((B_BWID_IMPL > (DATA_WIDTH_B - (B_BWID_IMPL * i1)))) 
                                                        begin : genblk1
                                                            assign ben_b_w[(B_BWID_IMPL - 1):(BYTE_WIDTH_B - (B_BWID_IMPL * i1))] = {(B_BWID_IMPL - (BYTE_WIDTH_B - (B_BWID_IMPL * i1))){1'b1}} ; 
                                                        end
                                                end
                                            else
                                                begin : genblk2
                                                    assign ben_b_w = {B_BWID_IMPL{1'b1}} ; 
                                                end
                                            assign raw_out_b_w[(DATA_WIDTH_B - 1):(B_DWID_IMPL * i1)] = out_b_w[(DATA_WIDTH_B - (1 + (B_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------------------------------------
                                    // ------ SINGLE MEMORY INSTANCE ------
                                    // ------------------------------------
                                    if ((INIT_MODE == "mem_file")) 
                                        begin : mem_file
                                            eval_mem4_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                    .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                    .BYTE_EN_POL_B(BYTE_EN_POL_B),
                                                    .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ INIT PARAMETERS ------
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(ben_a_w), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(ben_b_w), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                    else
                                        begin : no_mem_file
                                            eval_mem4_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                    .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                    .BYTE_EN_POL_B(BYTE_EN_POL_B)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(ben_a_w), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(ben_b_w), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                end
                            end
                            if ((EBR_ADDR == 1)) 
                                begin : genblk5
                                    assign out_a_ebr_w = out_a_ebr_raw_w[0] ; 
                                    assign out_b_ebr_w = out_b_ebr_raw_w[0] ; 
                                end
                            else
                                begin : genblk5
                                    // ------ PORT A output assignment ------
                                    reg [(DATA_WIDTH_A - 1):0] a_out_buff_r ; 
                                    reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                    assign out_a_ebr_w = a_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            a_out_buff_r = out_a_ebr_raw_w[addr_a_p_r[(ADDR_WIDTH_A - 1):A_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_A == "noreg")) 
                                        begin : genblk1
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk1
                                            reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r = {ADDR_WIDTH_A{1'b0}} ; 
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                        end
                                                end
                                        end
                                    // ------ PORT B output assignment ------
                                    reg [(DATA_WIDTH_B - 1):0] b_out_buff_r = {DATA_WIDTH_B{1'b0}} ; 
                                    reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r = {ADDR_WIDTH_B{1'b0}} ; 
                                    assign out_b_ebr_w = b_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            b_out_buff_r = out_b_ebr_raw_w[addr_b_p_r[(ADDR_WIDTH_B - 1):B_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_B == "noreg")) 
                                        begin : genblk2
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk2
                                            reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r = {ADDR_WIDTH_B{1'b0}} ; 
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                        end
                                                end
                                        end
                                end
                        end
            end
    endgenerate
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [1:0] checkINIT ; 
        input [31:0] val ; 
        begin
            case (val)
            _FCODE_LIFCL_ : 
                checkINIT = 1 ;
            _FCODE_AP6_ : 
                checkINIT = 2 ;
            default : 
                checkINIT = 0 ;
            endcase 
        end
    endfunction
    function [31:0] getImplByteWidth ; 
        input [31:0] dwid ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (dwid)
                    18 : 
                        getImplByteWidth = 2 ;
                    16 : 
                        getImplByteWidth = 2 ;
                    9 : 
                        getImplByteWidth = 1 ;
                    default : 
                        getImplByteWidth = 1 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (dwid)
                    36 : 
                        getImplByteWidth = 4 ;
                    32 : 
                        getImplByteWidth = 4 ;
                    18 : 
                        getImplByteWidth = 2 ;
                    16 : 
                        getImplByteWidth = 2 ;
                    9 : 
                        getImplByteWidth = 1 ;
                    default : 
                        getImplByteWidth = 1 ;
                    endcase 
                end
            default : 
                getImplByteWidth = 1 ;
            endcase 
        end
    endfunction
    function [31:0] getDatabase ; 
        input [31:0] base_count ; 
        input [31:0] index ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (base_count)
                    9 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 9 ;
                            default : 
                                getDatabase = 18 ;
                            endcase 
                        end
                    8 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 1 ;
                            1 : 
                                getDatabase = 2 ;
                            2 : 
                                getDatabase = 4 ;
                            3 : 
                                getDatabase = 8 ;
                            default : 
                                getDatabase = 16 ;
                            endcase 
                        end
                    default : 
                        getDatabase = 16 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (base_count)
                    9 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 9 ;
                            1 : 
                                getDatabase = 18 ;
                            default : 
                                getDatabase = 36 ;
                            endcase 
                        end
                    8 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 1 ;
                            1 : 
                                getDatabase = 2 ;
                            2 : 
                                getDatabase = 4 ;
                            3 : 
                                getDatabase = 8 ;
                            4 : 
                                getDatabase = 16 ;
                            default : 
                                getDatabase = 32 ;
                            endcase 
                        end
                    default : 
                        getDatabase = 16 ;
                    endcase 
                end
            default : 
                getDatabase = base_count ;
            endcase 
        end
    endfunction
    function [31:0] getCASE1DataImpl_wBEN ; 
        input [31:0] addr_a_depth ; 
        input [31:0] data_a_width ; 
        input [31:0] addr_b_depth ; 
        input [31:0] data_b_width ; 
        input is_taking_port_a ; 
        input [31:0] family_code ; 
        reg [31:0] max_width, 
            min_width, 
            byte_size ; 
        reg [31:0] temp_00, 
            temp_01, 
            upper_factor, 
            lower_factor ; 
        reg [31:0] wr_addr_chk, 
            wr_data_chk, 
            rd_addr_chk, 
            rd_data_chk, 
            wr_data_div, 
            rd_data_div ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    if ((data_a_width > data_b_width)) 
                        begin
                            if (is_taking_port_a) 
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 18 ;
                                    else
                                        getCASE1DataImpl_wBEN = 16 ;
                                end
                            else
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 9 ;
                                    else
                                        getCASE1DataImpl_wBEN = 8 ;
                                end
                        end
                    else
                        begin
                            if (is_taking_port_a) 
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 9 ;
                                    else
                                        getCASE1DataImpl_wBEN = 8 ;
                                end
                            else
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 18 ;
                                    else
                                        getCASE1DataImpl_wBEN = 16 ;
                                end
                        end
                end
            _FCODE_AP6_ : 
                begin
                    max_width = ((data_a_width > data_b_width) ? data_a_width : data_b_width) ;
                    min_width = ((data_a_width < data_b_width) ? data_a_width : data_b_width) ;
                    byte_size = (((max_width % 9) == 0) ? 9 : 8) ;
                    if (((max_width / min_width) == 4)) 
                        begin
                            if ((data_a_width > data_b_width)) 
                                begin
                                    if ((is_taking_port_a == 1)) 
                                        getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                    else
                                        getCASE1DataImpl_wBEN = byte_size ;
                                end
                            else
                                begin
                                    if ((is_taking_port_a == 1)) 
                                        getCASE1DataImpl_wBEN = byte_size ;
                                    else
                                        getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                end
                        end
                    else
                        begin
                            if ((data_a_width > data_b_width)) 
                                begin
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(36,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 36 : 32) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_00 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_00 = 32'hffffffff ;
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(9,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 9 : 8) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_01 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_01 = 32'hffffffff ;
                                    if ((temp_00 < temp_01)) 
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                        end
                                    else
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = byte_size ;
                                        end
                                end
                            else
                                begin
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(36,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 36 : 32) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_00 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_00 = 32'hffffffff ;
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(9,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 9 : 8) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_01 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_01 = 32'hffffffff ;
                                    if ((temp_00 < temp_01)) 
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                        end
                                    else
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = byte_size ;
                                            else
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                        end
                                end
                        end
                end
            default : 
                getCASE1DataImpl_wBEN = 8 ;
            endcase 
        end
    endfunction
    function [31:0] getCASE1DataImpl ; 
        input [31:0] addr_a_depth ; 
        input [31:0] data_a_width ; 
        input [31:0] addr_b_depth ; 
        input [31:0] data_b_width ; 
        input is_taking_port_a ; 
        input is_taking_total_ebr ; 
        input [31:0] family_code ; 
        reg [5:0] num0, 
            num1, 
            limit ; 
        reg [31:0] divisor, 
            addr_div_prtA, 
            data_div_prtA, 
            addr_div_prtB, 
            data_div_prtB ; 
        reg [31:0] portA_addr_chk, 
            portA_data_chk, 
            portB_addr_chk, 
            portB_data_chk ; 
        reg [31:0] EBR_usage, 
            PROD ; 
        begin
            divisor = ((addr_a_depth > addr_b_depth) ? (addr_a_depth / addr_b_depth) : (addr_b_depth / addr_a_depth)) ;
            EBR_usage = {32{1'b1}} ;
            getCASE1DataImpl = 0 ;
            if ((((family_code == _FCODE_LIFCL_) && (divisor <= 2)) || ((family_code == _FCODE_AP6_) && (divisor <= 4)))) 
                begin
                    limit = ((family_code == _FCODE_LIFCL_) ? 2 : 3) ;
                    for (num0 = 0 ; (num0 < limit) ; num0 = (num0 + 1))
                        begin
                            data_div_prtA = getDatabase(9,
                                    num0,
                                    family_code) ;
                            addr_div_prtA = data_to_addr(data_div_prtA,
                                    family_code) ;
                            portA_addr_chk = roundUP(addr_a_depth,
                                    addr_div_prtA) ;
                            portA_data_chk = roundUP(data_a_width,
                                    data_div_prtA) ;
                            for (num1 = 0 ; (num1 < limit) ; num1 = (num1 + 1))
                                begin
                                    data_div_prtB = getDatabase(9,
                                            num1,
                                            family_code) ;
                                    addr_div_prtB = data_to_addr(data_div_prtB,
                                            family_code) ;
                                    portB_addr_chk = roundUP(addr_b_depth,
                                            addr_div_prtB) ;
                                    portB_data_chk = roundUP(data_b_width,
                                            data_div_prtB) ;
                                    if (((portA_addr_chk == portB_addr_chk) && (portA_data_chk == portB_data_chk))) 
                                        begin
                                            if ((((data_a_width % data_div_prtA) == 0) && ((data_b_width % data_div_prtB) == 0))) 
                                                begin
                                                    PROD = (portA_addr_chk * portA_data_chk) ;
                                                    if ((PROD < EBR_usage)) 
                                                        begin
                                                            EBR_usage = PROD ;
                                                            if ((is_taking_total_ebr == 1'b1)) 
                                                                getCASE1DataImpl = EBR_usage ;
                                                            else
                                                                if ((is_taking_port_a == 1'b1)) 
                                                                    getCASE1DataImpl = data_div_prtA ;
                                                                else
                                                                    getCASE1DataImpl = data_div_prtB ;
                                                        end
                                                end
                                        end
                                end
                        end
                end
            limit = ((family_code == _FCODE_LIFCL_) ? 5 : 6) ;
            for (num0 = 0 ; (num0 < limit) ; num0 = (num0 + 1))
                begin
                    data_div_prtA = getDatabase(8,
                            num0,
                            family_code) ;
                    addr_div_prtA = data_to_addr(data_div_prtA,
                            family_code) ;
                    portA_addr_chk = roundUP(addr_a_depth,
                            addr_div_prtA) ;
                    portA_data_chk = roundUP(data_a_width,
                            data_div_prtA) ;
                    for (num1 = 0 ; (num1 < limit) ; num1 = (num1 + 1))
                        begin
                            data_div_prtB = getDatabase(8,
                                    num1,
                                    family_code) ;
                            addr_div_prtB = data_to_addr(data_div_prtB,
                                    family_code) ;
                            portB_addr_chk = roundUP(addr_b_depth,
                                    addr_div_prtB) ;
                            portB_data_chk = roundUP(data_b_width,
                                    data_div_prtB) ;
                            if (((portA_addr_chk == portB_addr_chk) && (portA_data_chk == portB_data_chk))) 
                                begin
                                    if ((((data_a_width % data_div_prtA) == 0) && ((data_b_width % data_div_prtB) == 0))) 
                                        begin
                                            PROD = (portA_addr_chk * portA_data_chk) ;
                                            if ((PROD < EBR_usage)) 
                                                begin
                                                    EBR_usage = PROD ;
                                                    if ((is_taking_total_ebr == 1'b1)) 
                                                        getCASE1DataImpl = EBR_usage ;
                                                    else
                                                        if ((is_taking_port_a == 1'b1)) 
                                                            getCASE1DataImpl = data_div_prtA ;
                                                        else
                                                            getCASE1DataImpl = data_div_prtB ;
                                                end
                                        end
                                end
                        end
                end
        end
    endfunction
    function [31:0] procData ; 
        input [31:0] max_data ; 
        input [31:0] family_code ; 
        begin
            procData = 1 ;
            while ((procData < max_data))
                begin
                    case (family_code)
                    _FCODE_LIFCL_,
                            _FCODE_AP6_ : 
                        begin
                            if ((procData < 8)) 
                                begin
                                    procData = (procData * 2) ;
                                end
                            else
                                begin
                                    if ((procData == 8)) 
                                        begin
                                            procData = 9 ;
                                        end
                                    else
                                        if (((procData % 9) == 0)) 
                                            begin
                                                procData = ((procData / 9) * 16) ;
                                            end
                                        else
                                            begin
                                                procData = ((procData / 8) * 9) ;
                                            end
                                end
                        end
                    default : 
                        procData = max_data ;
                    endcase 
                end
        end
    endfunction
    function [31:0] data_to_addr ; 
        input [31:0] data_size ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (data_size)
                    18 : 
                        data_to_addr = 1024 ;
                    16 : 
                        data_to_addr = 1024 ;
                    9 : 
                        data_to_addr = 2048 ;
                    8 : 
                        data_to_addr = 2048 ;
                    4 : 
                        data_to_addr = 4096 ;
                    2 : 
                        data_to_addr = 8192 ;
                    default : 
                        data_to_addr = 16384 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (data_size)
                    36 : 
                        data_to_addr = 1024 ;
                    32 : 
                        data_to_addr = 1024 ;
                    18 : 
                        data_to_addr = 2048 ;
                    16 : 
                        data_to_addr = 2048 ;
                    9 : 
                        data_to_addr = 4096 ;
                    8 : 
                        data_to_addr = 4096 ;
                    4 : 
                        data_to_addr = 8192 ;
                    2 : 
                        data_to_addr = 16384 ;
                    default : 
                        data_to_addr = 32768 ;
                    endcase 
                end
            default : 
                data_to_addr = 1024 ;
            endcase 
        end
    endfunction
    function [31:0] getMinimaData ; 
        input [31:0] depth_impl ; 
        input [31:0] width_impl ; 
        input is_byte_en ; 
        input [31:0] byte_size ; 
        input [31:0] family_code ; 
        reg [31:0] temp_00, 
            temp_01, 
            temp_02, 
            temp_03, 
            temp_04, 
            temp_05 ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    temp_00 = EBR_impl(depth_impl,
                            width_impl,
                            1024,
                            18) ;
                    temp_01 = EBR_impl(depth_impl,
                            width_impl,
                            2048,
                            9) ;
                    temp_02 = EBR_impl(depth_impl,
                            width_impl,
                            4096,
                            4) ;
                    temp_03 = EBR_impl(depth_impl,
                            width_impl,
                            8192,
                            2) ;
                    temp_04 = EBR_impl(depth_impl,
                            width_impl,
                            16384,
                            1) ;
                    if (((is_byte_en == 1) && ((width_impl % 9) != 0))) 
                        begin
                            temp_00 = EBR_impl(depth_impl,
                                    width_impl,
                                    1024,
                                    16) ;
                            temp_01 = EBR_impl(depth_impl,
                                    width_impl,
                                    2048,
                                    8) ;
                            if (((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04))) 
                                getMinimaData = 16 ;
                            else
                                if ((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04))) 
                                    getMinimaData = 8 ;
                                else
                                    if (((temp_02 < temp_03) && (temp_02 < temp_04))) 
                                        getMinimaData = 4 ;
                                    else
                                        if ((temp_03 < temp_04)) 
                                            getMinimaData = 2 ;
                                        else
                                            getMinimaData = 1 ;
                        end
                    else
                        begin
                            if (((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04))) 
                                getMinimaData = 18 ;
                            else
                                if ((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04))) 
                                    getMinimaData = 9 ;
                                else
                                    if (((temp_02 < temp_03) && (temp_02 < temp_04))) 
                                        getMinimaData = 4 ;
                                    else
                                        if ((temp_03 < temp_04)) 
                                            getMinimaData = 2 ;
                                        else
                                            getMinimaData = 1 ;
                        end
                end
            _FCODE_AP6_ : 
                begin
                    temp_00 = EBR_impl(depth_impl,
                            width_impl,
                            1024,
                            36) ;
                    temp_01 = EBR_impl(depth_impl,
                            width_impl,
                            2048,
                            18) ;
                    temp_02 = EBR_impl(depth_impl,
                            width_impl,
                            4096,
                            9) ;
                    temp_03 = EBR_impl(depth_impl,
                            width_impl,
                            8192,
                            4) ;
                    temp_04 = EBR_impl(depth_impl,
                            width_impl,
                            16384,
                            2) ;
                    temp_05 = EBR_impl(depth_impl,
                            width_impl,
                            32768,
                            1) ;
                    if (((is_byte_en == 1) && ((width_impl % 9) != 0))) 
                        begin
                            temp_00 = EBR_impl(depth_impl,
                                    width_impl,
                                    1024,
                                    32) ;
                            temp_01 = EBR_impl(depth_impl,
                                    width_impl,
                                    2048,
                                    16) ;
                            temp_02 = EBR_impl(depth_impl,
                                    width_impl,
                                    4096,
                                    8) ;
                            if ((((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04)) && (temp_00 < temp_05))) 
                                getMinimaData = 32 ;
                            else
                                if (((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04)) && (temp_01 < temp_05))) 
                                    getMinimaData = 16 ;
                                else
                                    if ((((temp_02 < temp_03) && (temp_02 < temp_04)) && (temp_02 < temp_05))) 
                                        getMinimaData = 8 ;
                                    else
                                        if (((temp_03 < temp_04) && (temp_03 < temp_05))) 
                                            getMinimaData = 4 ;
                                        else
                                            if ((temp_04 < temp_05)) 
                                                getMinimaData = 2 ;
                                            else
                                                getMinimaData = 1 ;
                        end
                    else
                        begin
                            if ((((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04)) && (temp_00 < temp_05))) 
                                getMinimaData = 36 ;
                            else
                                if (((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04)) && (temp_01 < temp_05))) 
                                    getMinimaData = 18 ;
                                else
                                    if ((((temp_02 < temp_03) && (temp_02 < temp_04)) && (temp_02 < temp_05))) 
                                        getMinimaData = 9 ;
                                    else
                                        if (((temp_03 < temp_04) && (temp_03 < temp_05))) 
                                            getMinimaData = 4 ;
                                        else
                                            if ((temp_04 < temp_05)) 
                                                getMinimaData = 2 ;
                                            else
                                                getMinimaData = 1 ;
                        end
                end
            default : 
                getMinimaData = 8 ;
            endcase 
        end
    endfunction
    function [31:0] getByteSize ; 
        input [31:0] data_width ; 
        input [31:0] dev_code ; 
        begin
            case (dev_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((data_width % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
    function [31:0] EBR_impl ; 
        input [31:0] DEPTH_IMPL ; 
        input [31:0] WIDTH_IMPL ; 
        input [31:0] ADDR_DEPTH_X ; 
        input [31:0] DATA_WIDTH_X ; 
        begin
            EBR_impl = (roundUP(DEPTH_IMPL,
                    ADDR_DEPTH_X) * roundUP(WIDTH_IMPL,
                    DATA_WIDTH_X)) ;
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2017 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_core.v
// Title                 :
// Dependencies          :
// Description           : Implements a single true dual port EBR primitive.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem4_ipgen_lscc_ram_dp_true_core #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_))), 
        parameter DATA_WIDTH_A = 18, 
        parameter ADDR_WIDTH_A = getAddrWidth(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter REGMODE_A = "reg", 
        parameter RESETMODE_A = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(FAMILY_CODE,
                DATA_WIDTH_A), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 0) ? 1 : roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A)), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter DATA_WIDTH_B = 18, 
        parameter ADDR_WIDTH_B = getAddrWidth(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter REGMODE_B = "reg", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(FAMILY_CODE,
                DATA_WIDTH_B), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 0) ? 1 : roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B)), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter POSx = 0, 
        parameter POSy = 0, 
        parameter STRING_SIZE = calculateStringSize(POSx,
                POSy), 
        parameter INIT_MODE = "none", 
        parameter INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_20 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_21 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_22 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_23 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_24 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_25 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_26 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_27 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_28 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_29 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_30 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_31 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_32 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_33 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_34 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_35 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_36 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_37 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_38 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_39 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_40 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_41 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_42 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_43 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_44 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_45 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_46 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_47 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_48 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_49 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_50 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_51 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_52 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_53 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_54 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_55 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_56 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_57 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_58 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_59 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_60 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_61 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_62 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_63 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_64 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_65 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_66 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_67 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_68 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_69 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_70 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_71 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_72 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_73 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_74 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_75 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_76 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_77 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_78 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_79 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000") (
    // ---------------------------
    // --------- Family parameters
    // ---------------------------
    // ---------------------------
    // --------- PORT A parameters
    // ---------------------------
    // ---------------------------
    // --------- PORT B parameters
    // ---------------------------
    // ---------------------------
    // --------- Common parameters
    // ---------------------------
    // ---------------------------
    // - PORT A input/output ports
    // ---------------------------
    input clk_a_i, 
    input clk_en_a_i, 
    input rst_a_i, 
    input wr_en_a_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    // ---------------------------
    // - PORT B input/output ports
    // ---------------------------
    input clk_b_i, 
    input clk_en_b_i, 
    input rst_b_i, 
    input wr_en_b_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o) ;
    // -----------------------------------------------------------------------------
    // Local Parameters
    // -----------------------------------------------------------------------------
    localparam POS_X0 = (POSx % 10) ; 
    localparam POS_X1 = ((POSx / 10) % 10) ; 
    localparam POS_X2 = ((POSx / 100) % 10) ; 
    localparam POS_X3 = ((POSx / 1000) % 10) ; 
    localparam POS_X4 = ((POSx / 10000) % 10) ; 
    localparam POS_X5 = ((POSx / 100000) % 10) ; 
    localparam POS_X6 = ((POSx / 1000000) % 10) ; 
    localparam POS_X7 = ((POSx / 10000000) % 10) ; 
    localparam POS_Y0 = (POSy % 10) ; 
    localparam POS_Y1 = ((POSy / 10) % 10) ; 
    localparam POS_Y2 = ((POSy / 100) % 10) ; 
    localparam POS_Y3 = ((POSy / 1000) % 10) ; 
    localparam POS_Y4 = ((POSy / 10000) % 10) ; 
    localparam POS_Y5 = ((POSy / 100000) % 10) ; 
    localparam POS_Y6 = ((POSy / 1000000) % 10) ; 
    localparam POS_Y7 = ((POSy / 10000000) % 10) ; 
    localparam [79:0] NUM_STRING = "9876543210" ; 
    localparam BLOCK_POS = getStringFromPos(POSx,
                POSy) ; 
    localparam BLOCK_SIZE = ((DATA_WIDTH_A == 36) ? "[36,1024]" : ((DATA_WIDTH_A == 32) ? "[32,1024]" : ((DATA_WIDTH_A == 18) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[18,1024]" : "[18,2048]") : ((DATA_WIDTH_A == 16) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[16,1024]" : "[16,2048]") : ((DATA_WIDTH_A == 9) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[9,2048]" : "[9,4096]") : ((DATA_WIDTH_A == 8) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[8,2048]" : "[8,4096]") : ((DATA_WIDTH_A == 4) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[4,4096]" : "[4,8192]") : ((DATA_WIDTH_A == 2) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[2,8192]" : "[2,16384]") : (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[1,16384]" : "[1,32768]"))))))))) ; 
    if ((FAMILY_CODE == _FCODE_LIFCL_)) 
        begin : LIFCL
            wire [13:0] addr_a_w ; 
            wire [17:0] in_a_w ; 
            wire [17:0] out_a_w ; 
            wire [13:0] addr_b_w ; 
            wire [17:0] in_b_w ; 
            wire [17:0] out_b_w ; 
            if (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16))) 
                begin : genblk1
                    assign addr_a_w[13:4] = addr_a_i ; 
                    assign addr_a_w[3:2] = 2'b11 ; 
                    assign addr_a_w[1:0] = ((BYTE_ENABLE_A == 1) ? ben_a_i : 2'b11) ; 
                    if ((DATA_WIDTH_A == 18)) 
                        begin : genblk1
                            assign in_a_w = wr_data_a_i ; 
                            assign rd_data_a_o = out_a_w ; 
                        end
                    else
                        begin : genblk1
                            assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                            assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                            assign in_a_w[8] = 1'b0 ; 
                            assign in_a_w[17] = 1'b0 ; 
                            assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                            assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                        end
                end
            else
                begin : genblk1
                    assign addr_a_w[13:(14 - ADDR_WIDTH_A)] = addr_a_i ; 
                    if ((ADDR_WIDTH_A != 14)) 
                        begin : genblk1
                            assign addr_a_w[(14 - (ADDR_WIDTH_A + 1)):0] = {(14 - ADDR_WIDTH_A){1'b1}} ; 
                        end
                    assign in_a_w[17:DATA_WIDTH_A] = {(18 - DATA_WIDTH_A){1'b0}} ; 
                    assign in_a_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                    assign rd_data_a_o = out_a_w[(DATA_WIDTH_A - 1):0] ; 
                end
            if (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16))) 
                begin : genblk2
                    assign addr_b_w[13:4] = addr_b_i ; 
                    assign addr_b_w[3:2] = 2'b11 ; 
                    assign addr_b_w[1:0] = ((BYTE_ENABLE_B == 1) ? ben_b_i : 2'b11) ; 
                    if ((DATA_WIDTH_B == 18)) 
                        begin : genblk1
                            assign in_b_w = wr_data_b_i ; 
                            assign rd_data_b_o = out_b_w ; 
                        end
                    else
                        begin : genblk1
                            assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                            assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                            assign in_b_w[8] = 1'b0 ; 
                            assign in_b_w[17] = 1'b0 ; 
                            assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                            assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                        end
                end
            else
                begin : genblk2
                    assign addr_b_w[13:(14 - ADDR_WIDTH_B)] = addr_b_i ; 
                    if ((ADDR_WIDTH_B != 14)) 
                        begin : genblk1
                            assign addr_b_w[(14 - (ADDR_WIDTH_B + 1)):0] = {(14 - ADDR_WIDTH_B){1'b1}} ; 
                        end
                    assign in_b_w[17:DATA_WIDTH_B] = {(18 - DATA_WIDTH_B){1'b0}} ; 
                    assign in_b_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                    assign rd_data_b_o = out_b_w[(DATA_WIDTH_B - 1):0] ; 
                end
            wire t_wr_en_a_i = (((BYTE_ENABLE_A == 0) || (BYTE_WIDTH_A > 1)) ? wr_en_a_i : (wr_en_a_i & ben_a_i)) ; 
            wire t_wr_en_b_i = (((BYTE_ENABLE_B == 0) || (BYTE_WIDTH_B > 1)) ? wr_en_b_i : (wr_en_b_i & ben_b_i)) ; 
            wire [17:0] DIA = in_a_w ; 
            wire [17:0] DIB = in_b_w ; 
            wire [13:0] ADA = addr_a_w ; 
            wire [13:0] ADB = addr_b_w ; 
            wire CLKA = clk_a_i ; 
            wire CLKB = clk_b_i ; 
            wire CEA = clk_en_a_i ; 
            wire CEB = clk_en_b_i ; 
            wire WEA = t_wr_en_a_i ; 
            wire WEB = t_wr_en_b_i ; 
            wire [2:0] CSA = {clk_en_a_i,
                        clk_en_a_i,
                        clk_en_a_i} ; 
            wire [2:0] CSB = {clk_en_b_i,
                        clk_en_b_i,
                        clk_en_b_i} ; 
            wire RSTA = rst_a_i ; 
            wire RSTB = rst_b_i ; 
            localparam DW_A = (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16)) ? "X18" : (((DATA_WIDTH_A == 9) || (DATA_WIDTH_A == 8)) ? "X9" : ((DATA_WIDTH_A == 4) ? "X4" : ((DATA_WIDTH_A == 2) ? "X2" : "X1")))) ; 
            localparam REG_A = ((REGMODE_A == "reg") ? "USED" : "BYPASSED") ; 
            localparam RST_A = ((RESETMODE_A == "sync") ? "SYNC" : "ASYNC") ; 
            localparam CSC_A = "000" ; 
            localparam RST_REL_A = ((RESET_RELEASE_A == "sync") ? "SYNC" : "ASYNC") ; 
            localparam DW_B = (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16)) ? "X18" : (((DATA_WIDTH_B == 9) || (DATA_WIDTH_B == 8)) ? "X9" : ((DATA_WIDTH_B == 4) ? "X4" : ((DATA_WIDTH_B == 2) ? "X2" : "X1")))) ; 
            localparam REG_B = ((REGMODE_B == "reg") ? "USED" : "BYPASSED") ; 
            localparam RST_B = ((RESETMODE_B == "sync") ? "SYNC" : "ASYNC") ; 
            localparam CSC_B = "000" ; 
            localparam RST_REL_B = ((RESET_RELEASE_B == "sync") ? "SYNC" : "ASYNC") ; 
            localparam MEM_TYPE = "EBR" ; 
            localparam T_MEM_SIZE = {"[",
                        MEM_SIZE,
                        "]"} ; 
            (* ECO_MEM_TYPE=MEM_TYPE, ECO_MEM_ID=MEM_ID, ECO_MEM_SIZE=T_MEM_SIZE, ECO_MEM_BLOCK_SIZE=BLOCK_SIZE, ECO_MEM_BLOCK_POS=BLOCK_POS *) DP16K dp16k (.DIA(DIA), 
                        .DIB(DIB), 
                        .ADA(ADA), 
                        .ADB(ADB), 
                        .CLKA(CLKA), 
                        .CLKB(CLKB), 
                        .WEA(WEA), 
                        .WEB(WEB), 
                        .CEA(CEA), 
                        .CEB(CEB), 
                        .RSTA(RSTA), 
                        .RSTB(RSTB), 
                        .CSA(CSA), 
                        .CSB(CSB), 
                        .DOA(out_a_w), 
                        .DOB(out_b_w)) ; 
            defparam dp16k.DATA_WIDTH_A = DW_A ; 
            defparam dp16k.DATA_WIDTH_B = DW_B ; 
            defparam dp16k.OUTREG_A = REG_A ; 
            defparam dp16k.OUTREG_B = REG_B ; 
            defparam dp16k.RESETMODE_A = RST_A ; 
            defparam dp16k.RESETMODE_B = RST_B ; 
            defparam dp16k.CSDECODE_A = CSC_A ; 
            defparam dp16k.CSDECODE_B = CSC_B ; 
            defparam dp16k.ASYNC_RST_RELEASE_A = RST_REL_A ; 
            defparam dp16k.ASYNC_RST_RELEASE_B = RST_REL_B ; 
            defparam dp16k.INIT_DATA = "DYNAMIC" ; 
            defparam dp16k.INITVAL_00 = ((INIT_MODE == "mem_file") ? INITVAL_00 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_01 = ((INIT_MODE == "mem_file") ? INITVAL_01 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_02 = ((INIT_MODE == "mem_file") ? INITVAL_02 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_03 = ((INIT_MODE == "mem_file") ? INITVAL_03 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_04 = ((INIT_MODE == "mem_file") ? INITVAL_04 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_05 = ((INIT_MODE == "mem_file") ? INITVAL_05 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_06 = ((INIT_MODE == "mem_file") ? INITVAL_06 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_07 = ((INIT_MODE == "mem_file") ? INITVAL_07 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_08 = ((INIT_MODE == "mem_file") ? INITVAL_08 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_09 = ((INIT_MODE == "mem_file") ? INITVAL_09 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0A = ((INIT_MODE == "mem_file") ? INITVAL_0A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0B = ((INIT_MODE == "mem_file") ? INITVAL_0B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0C = ((INIT_MODE == "mem_file") ? INITVAL_0C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0D = ((INIT_MODE == "mem_file") ? INITVAL_0D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0E = ((INIT_MODE == "mem_file") ? INITVAL_0E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0F = ((INIT_MODE == "mem_file") ? INITVAL_0F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_10 = ((INIT_MODE == "mem_file") ? INITVAL_10 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_11 = ((INIT_MODE == "mem_file") ? INITVAL_11 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_12 = ((INIT_MODE == "mem_file") ? INITVAL_12 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_13 = ((INIT_MODE == "mem_file") ? INITVAL_13 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_14 = ((INIT_MODE == "mem_file") ? INITVAL_14 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_15 = ((INIT_MODE == "mem_file") ? INITVAL_15 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_16 = ((INIT_MODE == "mem_file") ? INITVAL_16 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_17 = ((INIT_MODE == "mem_file") ? INITVAL_17 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_18 = ((INIT_MODE == "mem_file") ? INITVAL_18 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_19 = ((INIT_MODE == "mem_file") ? INITVAL_19 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1A = ((INIT_MODE == "mem_file") ? INITVAL_1A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1B = ((INIT_MODE == "mem_file") ? INITVAL_1B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1C = ((INIT_MODE == "mem_file") ? INITVAL_1C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1D = ((INIT_MODE == "mem_file") ? INITVAL_1D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1E = ((INIT_MODE == "mem_file") ? INITVAL_1E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1F = ((INIT_MODE == "mem_file") ? INITVAL_1F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_20 = ((INIT_MODE == "mem_file") ? INITVAL_20 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_21 = ((INIT_MODE == "mem_file") ? INITVAL_21 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_22 = ((INIT_MODE == "mem_file") ? INITVAL_22 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_23 = ((INIT_MODE == "mem_file") ? INITVAL_23 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_24 = ((INIT_MODE == "mem_file") ? INITVAL_24 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_25 = ((INIT_MODE == "mem_file") ? INITVAL_25 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_26 = ((INIT_MODE == "mem_file") ? INITVAL_26 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_27 = ((INIT_MODE == "mem_file") ? INITVAL_27 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_28 = ((INIT_MODE == "mem_file") ? INITVAL_28 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_29 = ((INIT_MODE == "mem_file") ? INITVAL_29 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2A = ((INIT_MODE == "mem_file") ? INITVAL_2A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2B = ((INIT_MODE == "mem_file") ? INITVAL_2B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2C = ((INIT_MODE == "mem_file") ? INITVAL_2C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2D = ((INIT_MODE == "mem_file") ? INITVAL_2D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2E = ((INIT_MODE == "mem_file") ? INITVAL_2E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2F = ((INIT_MODE == "mem_file") ? INITVAL_2F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_30 = ((INIT_MODE == "mem_file") ? INITVAL_30 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_31 = ((INIT_MODE == "mem_file") ? INITVAL_31 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_32 = ((INIT_MODE == "mem_file") ? INITVAL_32 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_33 = ((INIT_MODE == "mem_file") ? INITVAL_33 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_34 = ((INIT_MODE == "mem_file") ? INITVAL_34 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_35 = ((INIT_MODE == "mem_file") ? INITVAL_35 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_36 = ((INIT_MODE == "mem_file") ? INITVAL_36 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_37 = ((INIT_MODE == "mem_file") ? INITVAL_37 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_38 = ((INIT_MODE == "mem_file") ? INITVAL_38 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_39 = ((INIT_MODE == "mem_file") ? INITVAL_39 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3A = ((INIT_MODE == "mem_file") ? INITVAL_3A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3B = ((INIT_MODE == "mem_file") ? INITVAL_3B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3C = ((INIT_MODE == "mem_file") ? INITVAL_3C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3D = ((INIT_MODE == "mem_file") ? INITVAL_3D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3E = ((INIT_MODE == "mem_file") ? INITVAL_3E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3F = ((INIT_MODE == "mem_file") ? INITVAL_3F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
        end
    else
        if ((FAMILY_CODE == _FCODE_AP6_)) 
            begin : AP6
                wire [14:0] addr_a_w ; 
                wire [35:0] in_a_w ; 
                wire [35:0] out_a_w ; 
                wire [14:0] addr_b_w ; 
                wire [35:0] in_b_w ; 
                wire [35:0] out_b_w ; 
                if (((DATA_WIDTH_A == 36) || (DATA_WIDTH_A == 32))) 
                    begin : genblk1
                        assign addr_a_w[14:5] = addr_a_i ; 
                        assign addr_a_w[4] = 1'b1 ; 
                        assign addr_a_w[3:0] = ((BYTE_ENABLE_A == 1) ? ben_a_i : 4'b1111) ; 
                        if ((DATA_WIDTH_A == 36)) 
                            begin : genblk1
                                assign in_a_w = wr_data_a_i ; 
                                assign rd_data_a_o = out_a_w ; 
                            end
                        else
                            begin : genblk1
                                assign in_a_w[34:27] = wr_data_a_i[31:24] ; 
                                assign in_a_w[25:18] = wr_data_a_i[23:16] ; 
                                assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                                assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                                assign in_a_w[8] = 1'b0 ; 
                                assign in_a_w[17] = 1'b0 ; 
                                assign in_a_w[26] = 1'b0 ; 
                                assign in_a_w[35] = 1'b0 ; 
                                assign rd_data_a_o[31:24] = out_a_w[34:27] ; 
                                assign rd_data_a_o[23:16] = out_a_w[25:18] ; 
                                assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                                assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                            end
                    end
                else
                    if (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16))) 
                        begin : genblk1
                            assign addr_a_w[14:4] = addr_a_i ; 
                            assign addr_a_w[3:2] = 2'b11 ; 
                            assign addr_a_w[1:0] = ((BYTE_ENABLE_A == 1) ? ben_a_i : 2'b11) ; 
                            if ((DATA_WIDTH_A == 18)) 
                                begin : genblk1
                                    assign in_a_w[17:0] = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_w[17:0] ; 
                                end
                            else
                                begin : genblk1
                                    assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                                    assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                                    assign in_a_w[8] = 1'b0 ; 
                                    assign in_a_w[17] = 1'b0 ; 
                                    assign in_a_w[35:18] = {18{1'b0}} ; 
                                    assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                                    assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                                end
                        end
                    else
                        begin : genblk1
                            assign addr_a_w[14:(15 - ADDR_WIDTH_A)] = addr_a_i ; 
                            if ((ADDR_WIDTH_A != 15)) 
                                begin : genblk1
                                    assign addr_a_w[(15 - (ADDR_WIDTH_A + 1)):0] = {(15 - ADDR_WIDTH_A){1'b1}} ; 
                                end
                            assign in_a_w[35:DATA_WIDTH_A] = {(36 - DATA_WIDTH_A){1'b0}} ; 
                            assign in_a_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                            assign rd_data_a_o = out_a_w[(DATA_WIDTH_A - 1):0] ; 
                        end
                if (((DATA_WIDTH_B == 36) || (DATA_WIDTH_B == 32))) 
                    begin : genblk2
                        assign addr_b_w[14:5] = addr_b_i ; 
                        assign addr_b_w[4] = 1'b1 ; 
                        assign addr_b_w[3:0] = ((BYTE_ENABLE_B == 1) ? ben_b_i : 4'b1111) ; 
                        if ((DATA_WIDTH_B == 36)) 
                            begin : genblk1
                                assign in_b_w = wr_data_b_i ; 
                                assign rd_data_b_o = out_b_w ; 
                            end
                        else
                            begin : genblk1
                                assign in_b_w[34:27] = wr_data_b_i[31:24] ; 
                                assign in_b_w[25:18] = wr_data_b_i[23:16] ; 
                                assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                                assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                                assign in_b_w[8] = 1'b0 ; 
                                assign in_b_w[17] = 1'b0 ; 
                                assign in_b_w[26] = 1'b0 ; 
                                assign in_b_w[35] = 1'b0 ; 
                                assign rd_data_b_o[31:24] = out_b_w[34:27] ; 
                                assign rd_data_b_o[23:16] = out_b_w[25:18] ; 
                                assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                                assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                            end
                    end
                else
                    if (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16))) 
                        begin : genblk2
                            assign addr_b_w[14:4] = addr_b_i ; 
                            assign addr_b_w[3:2] = 2'b11 ; 
                            assign addr_b_w[1:0] = ((BYTE_ENABLE_B == 1) ? ben_b_i : 2'b11) ; 
                            if ((DATA_WIDTH_B == 18)) 
                                begin : genblk1
                                    assign in_b_w[17:0] = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_w[17:0] ; 
                                end
                            else
                                begin : genblk1
                                    assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                                    assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                                    assign in_b_w[8] = 1'b0 ; 
                                    assign in_b_w[17] = 1'b0 ; 
                                    assign in_b_w[35:18] = {18{1'b0}} ; 
                                    assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                                    assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                                end
                        end
                    else
                        begin : genblk2
                            assign addr_b_w[14:(15 - ADDR_WIDTH_B)] = addr_b_i ; 
                            if ((ADDR_WIDTH_B != 15)) 
                                begin : genblk1
                                    assign addr_b_w[(15 - (ADDR_WIDTH_B + 1)):0] = {(15 - ADDR_WIDTH_B){1'b1}} ; 
                                end
                            assign in_b_w[35:DATA_WIDTH_B] = {(36 - DATA_WIDTH_B){1'b0}} ; 
                            assign in_b_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                            assign rd_data_b_o = out_b_w[(DATA_WIDTH_B - 1):0] ; 
                        end
                wire t_wr_en_a_i = (((BYTE_ENABLE_A == 0) || (BYTE_WIDTH_A > 1)) ? wr_en_a_i : (wr_en_a_i & ben_a_i)) ; 
                wire t_wr_en_b_i = (((BYTE_ENABLE_B == 0) || (BYTE_WIDTH_B > 1)) ? wr_en_b_i : (wr_en_b_i & ben_b_i)) ; 
                wire [35:0] DIA = in_a_w ; 
                wire [35:0] DIB = in_b_w ; 
                wire [14:0] ADA = addr_a_w ; 
                wire [14:0] ADB = addr_b_w ; 
                wire CLKA = clk_a_i ; 
                wire CLKB = clk_b_i ; 
                wire CEA = clk_en_a_i ; 
                wire CEB = clk_en_b_i ; 
                wire WEA = t_wr_en_a_i ; 
                wire WEB = t_wr_en_b_i ; 
                wire [2:0] CSA = {clk_en_a_i,
                            clk_en_a_i,
                            clk_en_a_i} ; 
                wire [2:0] CSB = {clk_en_b_i,
                            clk_en_b_i,
                            clk_en_b_i} ; 
                wire RSTA = rst_a_i ; 
                wire RSTB = rst_b_i ; 
                wire OCEA = 1'b1 ; 
                wire OCEB = 1'b1 ; 
                localparam DW_A = (((DATA_WIDTH_A == 36) || (DATA_WIDTH_A == 32)) ? "X36" : (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16)) ? "X18" : (((DATA_WIDTH_A == 9) || (DATA_WIDTH_A == 8)) ? "X9" : ((DATA_WIDTH_A == 4) ? "X4" : ((DATA_WIDTH_A == 2) ? "X2" : "X1"))))) ; 
                localparam REG_A = ((REGMODE_A == "reg") ? "USED" : "BYPASSED") ; 
                localparam RST_A = ((RESETMODE_A == "sync") ? "SYNC" : "ASYNC") ; 
                localparam CSC_A = "000" ; 
                localparam RST_REL_A = ((RESET_RELEASE_A == "sync") ? "SYNC" : "ASYNC") ; 
                localparam DW_B = (((DATA_WIDTH_B == 36) || (DATA_WIDTH_B == 32)) ? "X36" : (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16)) ? "X18" : (((DATA_WIDTH_B == 9) || (DATA_WIDTH_B == 8)) ? "X9" : ((DATA_WIDTH_B == 4) ? "X4" : ((DATA_WIDTH_B == 2) ? "X2" : "X1"))))) ; 
                localparam REG_B = ((REGMODE_B == "reg") ? "USED" : "BYPASSED") ; 
                localparam RST_B = ((RESETMODE_B == "sync") ? "SYNC" : "ASYNC") ; 
                localparam CSC_B = "000" ; 
                localparam RST_REL_B = ((RESET_RELEASE_B == "sync") ? "SYNC" : "ASYNC") ; 
                localparam MEM_TYPE = "EBR" ; 
                localparam T_MEM_SIZE = {"[",
                            MEM_SIZE,
                            "]"} ; 
                (* ECO_MEM_TYPE=MEM_TYPE, ECO_MEM_ID=MEM_ID, ECO_MEM_SIZE=T_MEM_SIZE, ECO_MEM_BLOCK_SIZE=BLOCK_SIZE, ECO_MEM_BLOCK_POS=BLOCK_POS *) DP32K dp32k (.DIA(DIA), 
                            .DIB(DIB), 
                            .ADA(ADA), 
                            .ADB(ADB), 
                            .CLKA(CLKA), 
                            .CLKB(CLKB), 
                            .WEA(WEA), 
                            .WEB(WEB), 
                            .CEA(CEA), 
                            .CEB(CEB), 
                            .OCEA(OCEA), 
                            .OCEB(OCEB), 
                            .RSTA(RSTA), 
                            .RSTB(RSTB), 
                            .CSA(CSA), 
                            .CSB(CSB), 
                            .DOA(out_a_w), 
                            .DOB(out_b_w)) ; 
                defparam dp32k.DATA_WIDTH_A = DW_A ; 
                defparam dp32k.DATA_WIDTH_B = DW_B ; 
                defparam dp32k.OUTREG_A = REG_A ; 
                defparam dp32k.OUTREG_B = REG_B ; 
                defparam dp32k.RESETMODE_A = RST_A ; 
                defparam dp32k.RESETMODE_B = RST_B ; 
                defparam dp32k.CSDECODE_A = CSC_A ; 
                defparam dp32k.CSDECODE_B = CSC_B ; 
                defparam dp32k.ASYNC_RST_RELEASE_A = RST_REL_A ; 
                defparam dp32k.ASYNC_RST_RELEASE_B = RST_REL_B ; 
                defparam dp32k.INIT_DATA = "DYNAMIC" ; 
                defparam dp32k.INITVAL_00 = ((INIT_MODE == "mem_file") ? INITVAL_00 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_01 = ((INIT_MODE == "mem_file") ? INITVAL_01 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_02 = ((INIT_MODE == "mem_file") ? INITVAL_02 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_03 = ((INIT_MODE == "mem_file") ? INITVAL_03 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_04 = ((INIT_MODE == "mem_file") ? INITVAL_04 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_05 = ((INIT_MODE == "mem_file") ? INITVAL_05 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_06 = ((INIT_MODE == "mem_file") ? INITVAL_06 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_07 = ((INIT_MODE == "mem_file") ? INITVAL_07 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_08 = ((INIT_MODE == "mem_file") ? INITVAL_08 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_09 = ((INIT_MODE == "mem_file") ? INITVAL_09 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0A = ((INIT_MODE == "mem_file") ? INITVAL_0A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0B = ((INIT_MODE == "mem_file") ? INITVAL_0B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0C = ((INIT_MODE == "mem_file") ? INITVAL_0C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0D = ((INIT_MODE == "mem_file") ? INITVAL_0D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0E = ((INIT_MODE == "mem_file") ? INITVAL_0E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0F = ((INIT_MODE == "mem_file") ? INITVAL_0F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_10 = ((INIT_MODE == "mem_file") ? INITVAL_10 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_11 = ((INIT_MODE == "mem_file") ? INITVAL_11 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_12 = ((INIT_MODE == "mem_file") ? INITVAL_12 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_13 = ((INIT_MODE == "mem_file") ? INITVAL_13 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_14 = ((INIT_MODE == "mem_file") ? INITVAL_14 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_15 = ((INIT_MODE == "mem_file") ? INITVAL_15 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_16 = ((INIT_MODE == "mem_file") ? INITVAL_16 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_17 = ((INIT_MODE == "mem_file") ? INITVAL_17 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_18 = ((INIT_MODE == "mem_file") ? INITVAL_18 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_19 = ((INIT_MODE == "mem_file") ? INITVAL_19 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1A = ((INIT_MODE == "mem_file") ? INITVAL_1A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1B = ((INIT_MODE == "mem_file") ? INITVAL_1B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1C = ((INIT_MODE == "mem_file") ? INITVAL_1C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1D = ((INIT_MODE == "mem_file") ? INITVAL_1D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1E = ((INIT_MODE == "mem_file") ? INITVAL_1E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1F = ((INIT_MODE == "mem_file") ? INITVAL_1F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_20 = ((INIT_MODE == "mem_file") ? INITVAL_20 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_21 = ((INIT_MODE == "mem_file") ? INITVAL_21 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_22 = ((INIT_MODE == "mem_file") ? INITVAL_22 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_23 = ((INIT_MODE == "mem_file") ? INITVAL_23 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_24 = ((INIT_MODE == "mem_file") ? INITVAL_24 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_25 = ((INIT_MODE == "mem_file") ? INITVAL_25 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_26 = ((INIT_MODE == "mem_file") ? INITVAL_26 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_27 = ((INIT_MODE == "mem_file") ? INITVAL_27 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_28 = ((INIT_MODE == "mem_file") ? INITVAL_28 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_29 = ((INIT_MODE == "mem_file") ? INITVAL_29 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2A = ((INIT_MODE == "mem_file") ? INITVAL_2A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2B = ((INIT_MODE == "mem_file") ? INITVAL_2B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2C = ((INIT_MODE == "mem_file") ? INITVAL_2C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2D = ((INIT_MODE == "mem_file") ? INITVAL_2D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2E = ((INIT_MODE == "mem_file") ? INITVAL_2E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2F = ((INIT_MODE == "mem_file") ? INITVAL_2F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_30 = ((INIT_MODE == "mem_file") ? INITVAL_30 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_31 = ((INIT_MODE == "mem_file") ? INITVAL_31 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_32 = ((INIT_MODE == "mem_file") ? INITVAL_32 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_33 = ((INIT_MODE == "mem_file") ? INITVAL_33 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_34 = ((INIT_MODE == "mem_file") ? INITVAL_34 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_35 = ((INIT_MODE == "mem_file") ? INITVAL_35 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_36 = ((INIT_MODE == "mem_file") ? INITVAL_36 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_37 = ((INIT_MODE == "mem_file") ? INITVAL_37 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_38 = ((INIT_MODE == "mem_file") ? INITVAL_38 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_39 = ((INIT_MODE == "mem_file") ? INITVAL_39 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3A = ((INIT_MODE == "mem_file") ? INITVAL_3A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3B = ((INIT_MODE == "mem_file") ? INITVAL_3B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3C = ((INIT_MODE == "mem_file") ? INITVAL_3C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3D = ((INIT_MODE == "mem_file") ? INITVAL_3D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3E = ((INIT_MODE == "mem_file") ? INITVAL_3E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3F = ((INIT_MODE == "mem_file") ? INITVAL_3F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_40 = ((INIT_MODE == "mem_file") ? INITVAL_40 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_41 = ((INIT_MODE == "mem_file") ? INITVAL_41 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_42 = ((INIT_MODE == "mem_file") ? INITVAL_42 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_43 = ((INIT_MODE == "mem_file") ? INITVAL_43 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_44 = ((INIT_MODE == "mem_file") ? INITVAL_44 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_45 = ((INIT_MODE == "mem_file") ? INITVAL_45 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_46 = ((INIT_MODE == "mem_file") ? INITVAL_46 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_47 = ((INIT_MODE == "mem_file") ? INITVAL_47 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_48 = ((INIT_MODE == "mem_file") ? INITVAL_48 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_49 = ((INIT_MODE == "mem_file") ? INITVAL_49 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4A = ((INIT_MODE == "mem_file") ? INITVAL_4A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4B = ((INIT_MODE == "mem_file") ? INITVAL_4B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4C = ((INIT_MODE == "mem_file") ? INITVAL_4C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4D = ((INIT_MODE == "mem_file") ? INITVAL_4D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4E = ((INIT_MODE == "mem_file") ? INITVAL_4E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4F = ((INIT_MODE == "mem_file") ? INITVAL_4F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_50 = ((INIT_MODE == "mem_file") ? INITVAL_50 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_51 = ((INIT_MODE == "mem_file") ? INITVAL_51 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_52 = ((INIT_MODE == "mem_file") ? INITVAL_52 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_53 = ((INIT_MODE == "mem_file") ? INITVAL_53 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_54 = ((INIT_MODE == "mem_file") ? INITVAL_54 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_55 = ((INIT_MODE == "mem_file") ? INITVAL_55 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_56 = ((INIT_MODE == "mem_file") ? INITVAL_56 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_57 = ((INIT_MODE == "mem_file") ? INITVAL_57 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_58 = ((INIT_MODE == "mem_file") ? INITVAL_58 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_59 = ((INIT_MODE == "mem_file") ? INITVAL_59 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5A = ((INIT_MODE == "mem_file") ? INITVAL_5A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5B = ((INIT_MODE == "mem_file") ? INITVAL_5B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5C = ((INIT_MODE == "mem_file") ? INITVAL_5C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5D = ((INIT_MODE == "mem_file") ? INITVAL_5D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5E = ((INIT_MODE == "mem_file") ? INITVAL_5E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5F = ((INIT_MODE == "mem_file") ? INITVAL_5F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_60 = ((INIT_MODE == "mem_file") ? INITVAL_60 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_61 = ((INIT_MODE == "mem_file") ? INITVAL_61 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_62 = ((INIT_MODE == "mem_file") ? INITVAL_62 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_63 = ((INIT_MODE == "mem_file") ? INITVAL_63 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_64 = ((INIT_MODE == "mem_file") ? INITVAL_64 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_65 = ((INIT_MODE == "mem_file") ? INITVAL_65 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_66 = ((INIT_MODE == "mem_file") ? INITVAL_66 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_67 = ((INIT_MODE == "mem_file") ? INITVAL_67 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_68 = ((INIT_MODE == "mem_file") ? INITVAL_68 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_69 = ((INIT_MODE == "mem_file") ? INITVAL_69 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6A = ((INIT_MODE == "mem_file") ? INITVAL_6A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6B = ((INIT_MODE == "mem_file") ? INITVAL_6B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6C = ((INIT_MODE == "mem_file") ? INITVAL_6C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6D = ((INIT_MODE == "mem_file") ? INITVAL_6D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6E = ((INIT_MODE == "mem_file") ? INITVAL_6E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6F = ((INIT_MODE == "mem_file") ? INITVAL_6F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_70 = ((INIT_MODE == "mem_file") ? INITVAL_70 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_71 = ((INIT_MODE == "mem_file") ? INITVAL_71 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_72 = ((INIT_MODE == "mem_file") ? INITVAL_72 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_73 = ((INIT_MODE == "mem_file") ? INITVAL_73 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_74 = ((INIT_MODE == "mem_file") ? INITVAL_74 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_75 = ((INIT_MODE == "mem_file") ? INITVAL_75 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_76 = ((INIT_MODE == "mem_file") ? INITVAL_76 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_77 = ((INIT_MODE == "mem_file") ? INITVAL_77 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_78 = ((INIT_MODE == "mem_file") ? INITVAL_78 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_79 = ((INIT_MODE == "mem_file") ? INITVAL_79 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7A = ((INIT_MODE == "mem_file") ? INITVAL_7A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7B = ((INIT_MODE == "mem_file") ? INITVAL_7B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7C = ((INIT_MODE == "mem_file") ? INITVAL_7C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7D = ((INIT_MODE == "mem_file") ? INITVAL_7D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7E = ((INIT_MODE == "mem_file") ? INITVAL_7E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7F = ((INIT_MODE == "mem_file") ? INITVAL_7F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            end
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [31:0] calculateStringSize ; 
        input [31:0] x_calc ; 
        input [31:0] y_calc ; 
        reg [31:0] x_func ; 
        reg [31:0] y_func ; 
        begin
            if ((x_calc >= 10000000)) 
                begin
                    x_func = 8 ;
                end
            else
                if ((x_calc >= 1000000)) 
                    begin
                        x_func = 7 ;
                    end
                else
                    if ((x_calc >= 100000)) 
                        begin
                            x_func = 6 ;
                        end
                    else
                        if ((x_calc >= 10000)) 
                            begin
                                x_func = 5 ;
                            end
                        else
                            if ((x_calc >= 1000)) 
                                begin
                                    x_func = 4 ;
                                end
                            else
                                if ((x_calc >= 100)) 
                                    begin
                                        x_func = 3 ;
                                    end
                                else
                                    if ((x_calc >= 10)) 
                                        begin
                                            x_func = 2 ;
                                        end
                                    else
                                        begin
                                            x_func = 1 ;
                                        end
            if ((y_calc >= 10000000)) 
                begin
                    y_func = 8 ;
                end
            else
                if ((y_calc >= 1000000)) 
                    begin
                        y_func = 7 ;
                    end
                else
                    if ((y_calc >= 100000)) 
                        begin
                            y_func = 6 ;
                        end
                    else
                        if ((y_calc >= 10000)) 
                            begin
                                y_func = 5 ;
                            end
                        else
                            if ((y_calc >= 1000)) 
                                begin
                                    y_func = 4 ;
                                end
                            else
                                if ((y_calc >= 100)) 
                                    begin
                                        y_func = 3 ;
                                    end
                                else
                                    if ((y_calc >= 10)) 
                                        begin
                                            y_func = 2 ;
                                        end
                                    else
                                        begin
                                            y_func = 1 ;
                                        end
            calculateStringSize = (((3 + x_func) + y_func) * 8) ;
        end
    endfunction
    function [(STRING_SIZE - 1):0] getStringFromPos ; 
        input [31:0] x ; 
        input [31:0] y ; 
        begin
            if ((y >= 10000000)) 
                begin
                    if ((x >= 10000000)) 
                        begin
                            getStringFromPos = {"[",
                                    NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                    ",",
                                    NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                    "]"} ;
                        end
                    else
                        if ((x >= 1000000)) 
                            begin
                                getStringFromPos = {"[",
                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                        ",",
                                        NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                        "]"} ;
                            end
                        else
                            if ((x >= 100000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 10000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 1000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 100)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 10)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                end
            else
                if ((y >= 1000000)) 
                    begin
                        if ((x >= 10000000)) 
                            begin
                                getStringFromPos = {"[",
                                        NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                        ",",
                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                        "]"} ;
                            end
                        else
                            if ((x >= 1000000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 100000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 10000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 1000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 100)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 10)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                    end
                else
                    if ((y >= 100000)) 
                        begin
                            if ((x >= 10000000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 1000000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 100000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 10000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 1000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 100)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 10)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                        end
                    else
                        if ((y >= 10000)) 
                            begin
                                if ((x >= 10000000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 1000000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 100000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 10000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                            end
                        else
                            if ((y >= 1000)) 
                                begin
                                    if ((x >= 10000000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 1000000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 100000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 10000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 1000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 100)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 10)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                end
                            else
                                if ((y >= 100)) 
                                    begin
                                        if ((x >= 10000000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 1000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 100000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 10000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 1000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 100)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 10)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                    end
                                else
                                    if ((y >= 10)) 
                                        begin
                                            if ((x >= 10000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 1000)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 100)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    if ((x >= 10)) 
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                                                    else
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                        end
                                    else
                                        begin
                                            if ((x >= 10000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 1000)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 100)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    if ((x >= 10)) 
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                                                    else
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                        end
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] getAddrWidth ; 
        input [31:0] dwid ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (dwid)
                    18 : 
                        getAddrWidth = 10 ;
                    16 : 
                        getAddrWidth = 10 ;
                    9 : 
                        getAddrWidth = 11 ;
                    8 : 
                        getAddrWidth = 11 ;
                    4 : 
                        getAddrWidth = 12 ;
                    2 : 
                        getAddrWidth = 13 ;
                    default : 
                        getAddrWidth = 14 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (dwid)
                    36 : 
                        getAddrWidth = 10 ;
                    32 : 
                        getAddrWidth = 10 ;
                    18 : 
                        getAddrWidth = 11 ;
                    16 : 
                        getAddrWidth = 11 ;
                    9 : 
                        getAddrWidth = 12 ;
                    8 : 
                        getAddrWidth = 12 ;
                    4 : 
                        getAddrWidth = 13 ;
                    2 : 
                        getAddrWidth = 14 ;
                    default : 
                        getAddrWidth = 15 ;
                    endcase 
                end
            default : 
                getAddrWidth = 8 ;
            endcase 
        end
    endfunction
    function [9:0] getByteSize ; 
        input [31:0] family_code ; 
        input [31:0] dwidth_impl ; 
        begin
            case (family_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((dwidth_impl % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
endmodule


