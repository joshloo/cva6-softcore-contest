
/*******************************************************************************
    Verilog netlist generated by IPGEN Lattice Radiant Software (64-bit)
    2022.1.0.52.3
    Soft IP Version: 2.1.0
    2023 11 09 09:48:48
*******************************************************************************/
/*******************************************************************************
    Wrapper Module generated per user settings.
*******************************************************************************/
module eval_mem4_sim (clk_a_i, 
        clk_b_i, 
        rst_a_i, 
        rst_b_i, 
        clk_en_a_i, 
        clk_en_b_i, 
        wr_en_a_i, 
        wr_en_b_i, 
        wr_data_a_i, 
        addr_a_i, 
        rd_data_a_o, 
        wr_data_b_i, 
        addr_b_i, 
        ben_a_i, 
        ben_b_i, 
        rd_data_b_o) ;
    input clk_a_i ; 
    input clk_b_i ; 
    input rst_a_i ; 
    input rst_b_i ; 
    input clk_en_a_i ; 
    input clk_en_b_i ; 
    input wr_en_a_i ; 
    input wr_en_b_i ; 
    input [31:0] wr_data_a_i ; 
    input [13:0] addr_a_i ; 
    output [31:0] rd_data_a_o ; 
    input [31:0] wr_data_b_i ; 
    input [13:0] addr_b_i ; 
    input [3:0] ben_a_i ; 
    input [3:0] ben_b_i ; 
    output [31:0] rd_data_b_o ; 
    parameter MEM_ID = "eval_mem4_sim" ; 
    eval_mem4_sim_ipgen_lscc_ram_dp_true #(.FAMILY("LAV-AT"),
            .MEM_ID(MEM_ID),
            .MEM_SIZE("32,16384"),
            .ADDR_DEPTH_A(16384),
            .DATA_WIDTH_A(32),
            .ADDR_DEPTH_B(16384),
            .DATA_WIDTH_B(32),
            .ADDR_WIDTH_A(14),
            .REGMODE_A("noreg"),
            .RESETMODE_A("sync"),
            .RESET_RELEASE_A("sync"),
            .REGMODE_B("noreg"),
            .RESETMODE_B("sync"),
            .RESET_RELEASE_B("sync"),
            .BYTE_ENABLE_A(1),
            .BYTE_SIZE_A(8),
            .BYTE_SIZE_B(8),
            .BYTE_WIDTH_A(4),
            .BYTE_ENABLE_B(1),
            .WRITE_MODE_A("normal"),
            .WRITE_MODE_B("normal"),
            .BYTE_WIDTH_B(4),
            .ADDR_WIDTH_B(14),
            .ECC_ENABLE(0),
            .INIT_MODE("mem_file"),
            .INIT_FILE("C:/workarea/sysmem/sysmem/eval_mem0/misc/lp4test_c_eval_mem0_copy.mem"),
            .INIT_FILE_FORMAT("hex"),
            .INIT_VALUE_00("0x0000000000000C3000000300000000000003000001C02008000000000000000033FCFF3FCFF000000x0000200002000C30C00003000000000C0003000000C002283000000000000D0CF3FCFF3FCFF000000x0000700403000C10000003080000CC000003008201C01114040000000002040473FCFF3FCFF000030x0400B00C01000C208085150400004C090402000202C0101400004562ACFC03000154502A8AA000000x018720042200804080312C8430800E08022038DF01448204001B06C1B06D220003FC0F3E854000030x00000000140000000000030000040D124C103CFC0140C000200000000000040483904E138E5000000x000411404105015140000142515424040000104400C54100000000000000040100000000000000000x05411000950547F3C0551401C31010014511104400C55114051545515454044111545515455000000x200000800002008288000080A28004080000800420C02028000000000000000100000000000000000x0282002028208082202A290020800C028AA0000C00C20080C22A8AA2A8A8040882A8AA2A8AA000000x01441150451540715029124111741A16C760145400049140033F8951500000474014AF014AF000000x0404119029140443F054000112E0150088210C3400041154473A03E25CE0008450882208822000000x1202C20C80080130A4220B8CC190C208008058611740600892088220882B170D40000000000000010x240491786935862078400249822495168AE1A4962A8691547400000000022E4ED2A8AA2A8AA154560x1000C01C001001001400000C4000C000004040031FC00040400000000003330000000000000000030x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_01("0x000FF3FCFC00400100000F0CC00000000000C0C003C0000C000C00000000000000000C00000000000x000BB3ACFC00800200000F08C00000000000C0C003C0100C000C00000000000000000C000030000C0x000F73DCFC00400300C0070C400020054551800003C0024C100845421455140051545800000000000x010773ECD00040338480020400000330015180C0030013D88001CB803CAA280F51401000002000080x10C2B3ACE02088C040343400034C02318C6308340D02114C42068400C0FE1C0951280002C8800C800x0004731CC02148C10030040503000000000000701000724C401403C0D0930C039090700289000C900x1C0EE2B8A506019030450D4D50500000000058C511465144161C00010000014000000000445004440x314DD17450050050041F1D0C41F41115455174DF07CD33C41D0C000154551545515454004CF00CCC0x200CC0300A00020000CA0C8E20A08000000028CA028A22800A0C0000000000000000020848A080880x008DC0300400400100222D0C0228022A8AA240E209000004000C0000A8AA080AA2A8A003C4A2084A0x174021086D1605102C551241D154072A8A509415144560C465108A907C94198F01ACD011455110550x2CC211846111053010AC324012CC143E85009C2D0E8F0000E700CE80A02239422020A41147F310FF0x2087C0F03C28C823404A270EC0A840220882C8C80BCA115C920D82010000208000000104022240A20x150A90A42915859294A40A098240940000008CA4128362A8631A4552A8AA184AA2A8A61BCD0398D30x000CC0300000C003C0000C0C00004000000000C000000030000F00000000000000000104000140010x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_02("0x040010000000040010C80C0C0000000F0F0300C00C4C000400040000003D33CFF3FC4C0C000000000x000000000000000000C000080000000F0F0300C00C4C000400000000003C12C7E1FC0C0C000000000x000000400000000000C000002158A80F0F0210810C0C000800000062949031CFD3FC0D0C000000000x000000401000000000C2018013F0000A0F0030230048030C000000D03C3008C7D2F451080030A0000x3300C030CF00C300C0F030C201B06C2F0F8080F8008E200C2C080042108E0E83E0F4AD30C1C0C0EC0x2601D0308B018601D0F030C00000001D4F4048D4004E1044201800215C051507C1F40330C44080D40x154551645515455154D010400000012945A148442504615040010500000C334D535C55154550D4410x2F8FB2487B2F8FB3B8D0104011545417CF53D80D250C110004010551545C330C030C963FCFE03CC70x2F019298990B8F0198C00000800002200B228088200000A000010800000C338EA3ACE638C32020C20x248392B8B823848398C0000002A8A8040000000004400004000100A2A88C334C030C5C30C10050CA0x05451124111905511499290902A8501B455354D5390D5160592589C06C41040170505D114511D4550x0FCB338CB3330FE33C03230312940003CEF2F0B3000D732054228402A81004806010A9208F22809B0x0204200800260210201212424220882E0A80A82A1CCA028C22218800000631CE3384AE2E022258020x270990B0BB09872190E525859000023A44D2D49D29897158551E45A2A89B2689224859194591A4580x000000000000000000400000400000000000000000C0000C00000000000C330C030C0000000000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_03("0x03070208082808510C800000030000000001381324C93240E020804384390E4390380800000000000x00010324082000D000000000030000000200000000000000000040000000000000000400000000000x0004000400340020000A2A8A811000000001541515455150500000000000000000000004001100000x00060030003C00E2888515CA810081080002A82A20000000000000A288A8000000000000000000000x35C8D1C4D70303F3CCC5140A200C0C03C803FC3F3003F3A0A30300F3CCFC00CFE228C00CC0F03CC00x33CBD2D4F30FCB33CCCE13845008381300015440000151F0F303005150000045733CC00CC0E028C10x04041018101C404144400000000404054101541515455150510540514455154551144405445054550x1C4D70787131C1C28CC51545410C0C0FC303FC3F3FCFF3F0F10DC0F3CCFF3FCFF33C4C06485098EF0x080A202C202480A2A02000000088080BC2A280280A0280A80B0382A0088220882280E82A8A20A84B0x20818084820A0202A89A2A8A800000034242A82A2A8AA2A8A6020CA288AA2A8AA2A8930A8820A8230x35C591945514445298962F0150145911454000400A8AA2040515440010022A8A80405505445150590x2F0FB33CBC3ECCF2A8B82208B1107933C7C2A8800A88000C0D39CCA2A0022A0000C07F0B8C03C0F30x0A0A2228282888A020000000204404068290008000000008022689002000000000808A12094200260x2787939C9E1E4E72B8BA2A8A9198591944E2A86A2A8AA2ACAF3B4EA298AA2A8AA2E8F72882A128C90x010101040404041010100000004000000050000000000004041005000000000000401110010000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_04("0x034041000300010000F03100000C821381324C932103A03C403003100C00330300800008000110000x030000000300000000C0000000CC0000000000000000103C001000000000000100040000000110020x030000000300000000C00000000C0015415154551141403C032003000C003000000CC000005000000x0240400042104000409010004088412A82A200000C00302C07030C01440520000000C000000220800x0080831C80208313802023078040823FC000003F33C3F00C0B130003880430C81000E6008B03303C0x30000308300003023000030230000015440000151941700C07130900040010010004DE100002E4300x154141145511411154511105514445154151545511415014423403500C40360340905508000110550x33C3C33CF333C333F0F3330FF00CCF3FC3F3FCFF33C3E03CC13003114C05314711505004000330FF0x220AA0BCE20A88B3E08A288FE0082A0280220882200AA228213003202C2032030080EF0A000220BC0x1889A228D8298A22D825260AD220962A82A2A8AA228A81D0833003002C2030030004DD09000000360x174650545716445154D61445515C59000400A8AA24041174560544515055054451605516445254150x3ECCF2FCFE3CCEF3FCBC3ECFF308F32A8800A880080C238CBD058852905A0588625050114040EC3F0x2381A028A3218822A0E1280AA00C860008000000080022B888320B20AC22320B028CAA2A0101106A0x120E32DC520E0ED3508E0EC75078382A86A2A8AA268E93E4352546517875254651587513465264940x000410400004044000040440001010000000000000040140103003001C103003000C0001030000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_05("0x00CD031000000001000004080000400541401011000002A8432001514C1004C0000C300CC20084000x01CC03080400000020100C040128880B82C0203202088000000200000C0000C0000C0000C00000000x00CC030000030000000004000314C40C83003007014551540001C0000C1004C1004C1004C10040000x028C00000003C2300003030420040005C240300A008233ACA220C0000810048100481004810040010x000C2030F03300030CC0040C002048204200302503CED0E4F33B4000002008020080200802008C1E0x000C203050230403088000040028381000000000030CC000A22BC000004010040100401004010C080x19450164551505011450108E8268192208A108402A0882A8522201514451144511445114451144150x04CF038CCA334F1330F1014D5154053208B10C4019044154F11103F3CCF33CCF33CCF33CCF33CC3F0x2A88820CCC210200B0D8008C80282800082000000A0882A8AA220AA2A8CA3A8CA3A8CA3A8CA3A0BF0x00420128A00B00022880240C0028581441009011020882A8AA2206A280E93A0E93A0E5390E53982B0x16C552444515475050591141624011110452844414411268A62449515C5615C5615C5615C56150550x140EF0ECCB2BCCF2F0F33141520011010451844414C333ECAE2EC7A2F0FE3F0FE3F0FE3F0FE3F8FF0x09CA23888A08812020820C8CA180C22ECB2030BB088220A808008AA22CA12ACA12ACA12ACA12A02A0x1684D224E4314642D8DC0949526899398651E46616499000AE264C00384E1384E1384E1384E138DD0x000040000000000040040C0C0000C00CC300703300000000040004001004010040100401004010400x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_06("0x000000300702020228081D00002020300C0000000400005000010000D00008C100000000400000420x000003000103090220003D0003202020080000000000000000000000000000C080400000020100800x150050001400010034000A00003030000C0228AA2040204402044000440004C000003000000000820x1482420086200C003C003A001028A53AC6C3045620012040120401004010040000003C23000030F00x10C32150E835C1D1C0C333C9030030130B00306C1C0E20B0E30B0E00B0E00803330C3000C0F000020x0D839030CB36C5F0CCFB030000101013070040000D04C0300C0300C0300C000311083100C0A000010x00000140040406101C101045513030300C004000054541545415454154541445515451104151040B0x154150C05D1C4E70707134CFF33030350D0154551DCF50BCFD0BCFC0BCFC08C9F0AC3731C33310170x000800800A080B202420228AA23030300C20400001CF008CF808CFA08CFA0A82F0C810200B31800B0x2A82A008A12081808882008AA0B030310D00E8AA298B62A8B62A8B62A8B42942A200B00082A008430x17C9A1543505C5D19495114551444508404068AA11455144541445514455158450545535051154140x0A8420F08F0F8F33BC3E378973C40404C0C17CA509CFC26CFC2ECFE2ECFF2E0EF0B8BF0F8F337C140x000000A00A0A0A22282822820290101884902088208A8208AA088AA088A80AC8A0A088120220A0CB0x2A8EA17CA72787939C9E170001E465264A614000094D4024D4024D7024D70382724C15248DB1C0960x000400140101010104040100007030300C10000000000000000000100001010000000000040040C30x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_07("0x00810000D0110000C0010000F0304000C82300050C00C10C00330300900320C200200014012100000x00000000C0000000C0000000C0000000C00300000C00800800200200000000C000088803801000000x00400000C0000000C0000000C0000000C00200000400800800200300000000C000000403000000010x0040004090100040901000409010001084110000000000A4092040402492208300309003000008A90x0083138020230780202307802020C720082000800800409803300C3030C330000108FF0F83120CE90x01030230000302300003020C0000C20C00001090004100000000000030C3320C00C4AA0B039144390x05411154511105515051054550504515446340050D00D20C40360301A492204512944428423210000x0FC333F0F3330FF0F0F30FCCF0F0CF3CCCD3000F0C00C25C05314750609110CF317CCC14C13104550x2388B3E08A288FE088A82FC882A82F3882A3800A2E00E00CA03A03028C0A288CA1688800883000000x178622D8292A0AD2286A0AC621648A360963000A0C00C00C20300300249A240E53E88828863228AA0x19445154D6144551D4941545D1941515C59054561145115055054451649A29C56260110944404CA40x2BCEF3FCBC3ECFF3BC3E3FCFB33CBF3F8F3058BC314A11A05A0588A1608A270FE1D83323CEC2008A0x248822A0E1280AA0E0680A88E0680A28C86320882C82C22C22320B2088200ACA1080000008B080000x390ED3508E0EC7508C8E3744838CB714838254503945915875254651649E2D84E14899290E6268AA0x10044000040440000404100001041000010300001C00C00C103003000004040040000000043000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_08("0x03C0C10003208C00145430031030030C0C0240E0000041545000C10044000C000040030C031000320x0300000003000400000000000000000000000000000000000000C00000000C0000000300000000300x0300000003000000000030000000000000000000000000000000C10040000C4010000304010000310x024040004210400000000000029026010D00A0A00B000000001081004004084010004204010010210x0080831C802080020000100802500E00CCC0F0F00C0000003C2002008C38008020CC80080230E0020x300003083000004200000108000000000000F0F32E002000100C04010C23010040C8301004308C040x1541411455118D0014543403603403180C12A0A001045154541545114415154150445514451054550x33C3C33CF3338C003CFC3003217017094D42A0A0070CF3FCF82CCE33CC3F0F83F0CCF338CF30FC3E0x220AA0BCE20A0E0028AA3803A03883200C20A808020830000E380E83A0BE0388E22CE03A0E82F80E0x18859228D8258C0028A83003003083000C00A8A40480B2A8A8360E93A82D2389E288D8394E60B48E0x174650545716415158A90544514454154151A8A9254A11544515C56150551D4651145715854154750x3ECCF2FCFE3CC162F0030588528468168291A8AB1BC9B2A8AB2A0FA3F8FF33CAF3BCFC3E8FE3FCCF0x2381A028A3218C822002320B20B08B088C820802228622A88828C290A02A0C892208A30A4280A8320x120E32DC520E0951400325465164D6154951ACAD19C990002F1484E138F5090E43BC521384E3D4240x0004104000040C0000013003003043000C00040400400000010000401040000401100001004100000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_09("0x00080388040E00C000C0010551400304011000300001000C300C4000C802040003404400030004000x00040040000000C000C0000000000300000000300000000C00000000C000000003000000030000000x00040080000003C01CC0100000000304010000310040000C10040000C401000003000000030000000x024D40404A0A03A00CB10800000042040100102100400108100400408401000102404001024040010x00CE40003F0F07C0CCC0000000F080080230E002008332002008C38008020C4E00808C1E00808C1E0x000000000F0F0382CC7700800040301004308C04010320C04010C23010040C08C0000C08C0000C080x100C12D80A0A024244490545515055144510545505411154511441515415044551444415454144150x014D42C85A0A01C1DCC71FCFF3E0B338CF30FC3E0FC333CCE33CC3F0F83F0CCFC3CCCC3FC3C3CC3F0x280C20E00A2083820C0808C00038E03A0E82F80E2388B380E83A0BE0388E22CF8228A23F8222A0BF0x080C00C00A2A43000C0002CAA2A0D83A4EA0B48E278A2360E53982D2385E188B60A4A82B48A1A82B0x154151145A2A86525455184551145715854154751944515C56150551D465114553585115475250550x16829114AA2A8DB1FCAF3ACAA2ACA83E8FE3FCCF2BCEF3F0FA3F8FF33CAF3BCFF2F0FB3FCEF0F8FF0x088C82C820200A028828048AA220A30A4280A8322488228C290A02A0C892208A8384A02A8381A02A0x1D4951945A3AC591D4971A4000BC521384E3D424390EF1484E138F5090E43B4D42383B1D423238DD0x040C00C00010400000000000000400010041000010044000040104000040110000101100001010400x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0A("0x000C40104003000010003300C1000C200840003404400030001000330C10000E02800115420020420x000C0000000300000000300000000C000000003000000030000000300000000C00800000020010010x000C4010000304010000310040000C100400003000000030000000300000000C00400000000010010x0408401001020401001021004004081004001024040010240400042104000409014000000100102A0x08008020CE00080230E002008338002008C1E00808C1E0080831C8020831380202402000020010260x03010040C8304010308C04010320C10040C08C0000C083000030830000302300000C2400003040000x054541504515445110551505411455114441545414415154141145511411154512D00115434034830x0B0F83F0CF33C8F330FC3E0FC33CCF23CCC3FC3C3CC3F33C3C33CF333C333F0F32C0033FC30030970x2E03A0E82F20CA3288F80E83A0BC8328CA23F8222A0BF220AA0BCE20A88B3E08A0E0022A8B8038830x0D83A1E88B18CA72A0B60E47922C6325C982B48A1A82B1889A228D8258622D8252C0022A830030030x154D5254151745914455354950545D164511547525055174650545716445154D6114552A845144540x3A83E2FCBF3CCEB3ECFF0F8BF2FCF33ACFB3FCEF0F8FF3ECCF2FCFE3CCEF3FCBC314AF000C5284680x0A0CA1280A230A4280A83284A0288C290A02A8381A02A2381A028A3218822A0E12C822000B20B08B0x3509324CBD124390ECD424C932F4490E43B1D423238DD120E32DC520E0ED3508E09454000E5164560x100010041000010044000040104000040110000101040000410400004044000040C00000070030030x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0B("0x00C2008400034041000300010000F0310000E02C0005513003040C00CC0C0240E00C000C001054540x00C0000000030000000300000000C0000000C00C000000300200080080080000000C000C000000000x00C1004000030000000300000000C0000000C0080000001002000800C00C0000003C013C010000000x10810040010240400042104000409010004090180000002002028C2140590088A038803B048000000x2002008C1E0080831C8020831380202307802028020000300A024C03009430CCF07C0C3D0000000F0x0C04010C0830000308300003023000030230000432000010C9000400400400CCF0782C344C0200040x154511441515414114551141115451110551506D0005513403180D00D80C0688A0242414845154550x3CCE33CC3F33C3C33CF333C333F0F3330FF0F0EC000FF33003094C11C85D1288A01C1D3C4DF3FCFE0x380E83A0BF220AA0BCE20A88B3E08A288FE0888E000AA2B803280E80E00C088A02382030808300030x360E53982B1889A228D8298A22D825260AD22468000AA220020008808008008AA13000300023A8AA0x15C5615055174650545716445154D6144551D4911546A244541541511451158AA2646515458154510x3F0FA3F8FF3ECCF2FCFE3CCEF3FCBC3ECFF3BC311ACC00C46816816214A2258AA2D8DF3ACFA3A8AA0x28C290A02A2381A028A3218822A0E1280AA0E06C220800B08B088C82C82C220200A028228042A8A20x1484E138DD120E32DC520E0ED3508E0EC7508C89154000E4561549D19459158BA3585D194DA1000B0x000040104000041040000404400004044000040C0000007003000C40C00C000101000000000000000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0C("0x0F0310000E020C003C43000840C00C30C0210C803000C00045154000C40104003000010003300C100x0C0000000C0004003C00000C00000000000000003000C00000000000C000000030000000030000000x0C0000000C0000003C03000C00000000000000033007C01000000000C401000030401000031004000x09010004090100002C00000C22409805C40288832803B048000000408401000420401001021004000x02023078020200420C08048C210034098303CCC730C3D0000000CC8008020CC80080230E002008330x00003020C00004C20C090C84004004004003CCCB22C351C02000403010040C8301004308C04010320x1505105455050D001443100D80D00D20C062888212414244551544515415044551445105455054110x0F0F30FCCF0F0C003CC3000C91C05C25C522888131C7C1DCFF3FC8B0F83F0CCF338CF30FC3E0FC330x088A82FC882A8E002823200E80E80E00C082A0232203020830000EE0388E22CE03A0E82F80E2388B0x224660AC6216480010820008008808008002A89300030000BA2A88D2389E288D83A4EA0B48E178620x1D4941545D19415174541541511451150552A8A61645515815150551D465114571585415475194450x3BC3E3FCFB33C162CCBC16816214A11A0A52A8AD2DCFA3F8BA2A8BA23CAF3BCFC3E8FE3FCCF2BCEF0x0E0680A88E068C82388B088C82C82C22C220200A028222042A2A08A0C892208A30A4280A832248820x08C8E3744838C95164361549519C59158552B8B525C591D890008F5090E43BC521384E3D424390EF0x0040410000104C000013000C00C40C00C000101000000000000001000040110000100410000100440x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0D("0x00830200903803000C00044551000C10044000C000040030C031000320081000310410000C0010000x00400100000003000C00000000000C00000000C0000000300000000300000000300000000C0000000x0040020000000F007C01000000000C10040000C4010000304010000310040000300000000C0000000x09C0504028280E8038C42000000408100400408401001020401001021004000421040004090100040x038093303C3C4F033C40000003C8002008C38008020CE00080230E00200831C802083138020230780x004001003C3CCE23349C02000100C10040C23010040C8304010308C04010308300003023000030230x00C60304A828092114241545514455114441545415045154451105515054114551141115451110550x05C25350A82807137C1D3FCFF388CF23CCC3F0F83F0CF33C8F330FC3E0FC33CF333C333F0F3330FF0x20C803082A020E203020230000EC8328CA23E03A0E82F20CA3288F80E83A0BCE20A88B3E08A288FE0x208002002A290C0030000B8AA28C6329CA82D83A1E88B18C97260B60E479228D8298A22D8292A0AD0x150550546A2A49615455214550545D16451154D5254151745914455354950545716445154D6144550x1A05A0A46A2AC6D3F8BF2B8AA2B8A33ACFB3FC3E2FCBF3CCEB3ECFF0F8BF2FCFE3CCEF3FCBC3ECFF0x22C223208200882220A0128AA0888C290A02A0CA1280A230A4280A83284A028A3218822A0E1280AA0x358552546B2B4653585D290002F4490E43B3509324CBD124390ECD424C932DC520E0ED3508E0EC750x10C003000101000000000000001000040110000100410000100440000401040000404400004044000x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0E("0x00C10044000C000040030C0310003200810000D0110000C0010000F0304000C820800334080084080x00C00000000C00000003000000003000000000C0000000C0000000C0000000C000800330080040040x00C10040000C40100003040100003100400000C0000000C0000000C0000000C000400330000040040x108100400408401000420401001021004000409010004090100040901000108410401230040140A80x2002008C38008020CC80080230E0020083138020230780202307802020C720082044A030846200940x0C04010C23010040C8301004308C0401030230000302300003020C0000C20C00004C903084E140040x154511441515415044551445105455054111545111055150510545505045154450D001140D00D80D0x2CCE33CC3F0F83F0CCF338CF30FC3E0FC333F0F3330FF0F0F30FCCF0F0CF3CCCF0C0033C0C00C85C0x380E83A0BE0388E22CE03A0E82F80E2388B3E08A288FE088A82FC882A82F3882A2E002220E00E80E0x360E93A82D2389E288D8394E60B48E178622D8292A0AD2286A0AC621648A360961800108080080080x15C56150551D46511457158541547519445154D6144551D4941545D1941515C591145715415114510x2A0FA3F8FF33CAF3BCFC3E8FE3FCCF2BCEF3FCBC3ECFF3BC3E3FCFB33CBF3F8F3314AC3BC16214A10x28C290A02A0C892208A30A4280A832248822A0E1280AA0E0680A88E0680A28C862C823288C82C82C0x1484E138F5090E43BC521384E3D424390ED3508E0EC7508C8E3744838CB7148383945613495194590x000040104000040110000100410000100440000404400004041000010410000101C000010C00C00C0x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_0F("0x000C80204000C4104000300040003C0C400038083000F10C0031030030C30084320C0030004154500x000C00000000C0000000300000003000000030003000F00C0020020020020000000C0030000000000x000C40100000C0000000300000003000000030002000F0040020030030030000000C0730040000000x04084010001084100010240400102404001024043300B01C302088025016100A2208832D020000000x38008020C7200820C4E00808C1E00808C1E008080308302032308400D0260C0F332C33340000003C0x23010040C20C0000C08C0000C08C0000C083000003083010320000000000000F3308332F402000100x15454150451544504455144441545414415154143400510C403603403483018A22041121815154540x3F0F83F0CF3CCCF0CCFC3CCCC3FC3C3CC3F33C3C3000F30C003247017057144A110C371347F3FCF80x3E03A0E82F3882A22CF8228A23F8222A0BF220AA3800A08C803803A038830280A28803208230000E0x2D8391E48A360A6288B60A4A82B4891982B1885920004208002002202002000AA240030000B2A8A80x154D52541515C5911455358511547525055174650545D150550544514454154AA2945516451154450x3FC3E2FCBF3F8F33BCFF2F0FB3FCEF0F8FF3ECCF058B32F05A0588528468294AA278FF2DCEB2A8AB0x2A0CA1280A28C86208A8384A02A8381A02A2381A3208E22C22320B20B08B088000A022028122A8880x3509324CB7148383B4D42383B1D423238DD120E3254590D8552546716456154AE2D875274690002F0x00001004100001011000010110000101040000413000004C003003103003000040400000000000010x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_10("0x000030CCD5154000CC1100030040030C000000100003100415154000300001455100030C031154440x0000208C40000000CC000003000002000000000000030000000000003004000000001300400000100x0000304080000000441000001000030404515441008310C4000000033044100000000304810000000x000000CC4000000040100002100002040800544000821004000000002040100000000204810000200x0300004C0000CC00C0230C0020CC0008006318F0300020080000CC000080200003C000080200000C0x140413740000C4C370430B0C40C8CC10000000302C0C40100000C4C0C4010000034C0C100400000C0x154471DCD5154451D4510545504455140000001115855054151544525445114551446514451154640x258473FCFF3FCCC3FCF30F0FF0CCCF3C045154733C4FE0FC3F3FCCC1FC8F33CFF3CC1F38CF33FCDC0x0C8C33FCC0000E83F0E82E0CE22C8C3A8000000B380CE23880000E80CCA3280000E80C3A0E8000020x140C33FCAA2A8863F0EA098CE2886C3900A2A8A2264CE278AA2A8860CCA72A8AA2848C394E62A8880x1545411005150551145415445114561501A294051587511445150552745D144550544715054154510x250983302F3F8FE338FE3FCCF3BCFE3F05A1402F3F0CF2BCEF3F8FE2CCE33ECFF2FC8C3E8FE3FCEB0x08481264CA2A08A26C280A0B22088B0A40822082284B22488A2A08A1B0A4288AA0889B0A4282A8900x17856198A0008F41984E3D0643BC46138500002D34864390E0008F4264390E0002F4261384E0002B0x000030CCC0000100C0041000011000014000000400000100400001000010040000100001004000010x3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_11("0x00000000000000000000000000000000000000000405514CC001C740C0070741030C01030000C0030x0000000000000000000000000000000000000003288AE28CC000C300C0030300030C00030000C0030x000000000000000000000000000000000000000F3004434CC000430040020200020C00030000C0530x00000000000000000000000000000000000000050C07134880008200C0010100030800020002C0A20x000000000000000000000000000000000000000114455140C002088080080B8A01000F320380C0000x000000000000000000000000000000000000000B3C8EA280940348C040090DCE0100540344D0C0000x0000000000000000000000000000000000000000204382045510C101D403030013045511444114510x0000000000000000000000000000000000000000000D31CCDD18C121D42303009308A512888214510x000000000000000000000000000000000000000504044160AB08C122DCA32304A3A87631814008DA0x000000000000000000000000000000000000000F288EA3C40000C100C00303000304582245C000010x000000000000000000000000000000000000000814444188D51106413804044910045516469354410x00000000000000000000000000000000000000031444C000DF310441088424411088A52688A058820x00000000000000000000000000000000000000000404515CA824C390D4932984439C2213816120570x000000000000000000000000000000000000000A3ACBE328941B8EE1A86E1ECB92685F26469254AA0x00000000000000000000000000000000000000243FC270500004C010C013030043100000000000040x00000000000000000000000000000000000000241446607CFF3FCFF3FCFF3FCFF3FCFF3FCFF3FCFF"),
            .INIT_VALUE_12("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_13("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_14("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_15("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_16("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_17("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_18("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_19("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_1F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_20("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_21("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_22("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_23("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_24("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_25("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_26("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_27("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_28("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_29("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_2F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_30("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_31("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_32("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_33("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_34("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_35("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_36("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_37("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_38("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_39("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_3F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_40("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_41("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_42("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_43("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_44("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_45("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_46("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_47("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_48("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_49("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_4F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_50("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_51("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_52("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_53("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_54("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_55("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_56("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_57("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_58("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_59("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_5F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_60("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_61("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_62("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_63("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_64("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_65("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_66("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_67("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_68("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_69("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_6F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_70("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_71("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_72("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_73("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_74("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_75("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_76("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_77("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_78("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_79("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7A("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7B("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7C("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7D("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7E("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            .INIT_VALUE_7F("0x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) lscc_ram_dp_true_inst (.clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .wr_data_a_i(wr_data_a_i[31:0]), 
                .addr_a_i(addr_a_i[13:0]), 
                .rd_data_a_o(rd_data_a_o[31:0]), 
                .wr_data_b_i(wr_data_b_i[31:0]), 
                .addr_b_i(addr_b_i[13:0]), 
                .ben_a_i(ben_a_i[3:0]), 
                .ben_b_i(ben_b_i[3:0]), 
                .rd_data_b_o(rd_data_b_o[31:0]), 
                .ecc_one_err_a_o(), 
                .ecc_two_err_a_o(), 
                .ecc_one_err_b_o(), 
                .ecc_two_err_b_o()) ; 
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2022 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem4_sim_ipgen_lscc_ram_dp_true #(parameter FAMILY = "common", 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = 9, 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter WRITE_MODE_A = "normal", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = 9, 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter WRITE_MODE_B = "normal", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "36,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    localparam T_FAMILY = ((((((FAMILY == "LFD2NX") || (FAMILY == "LFCPNX")) || (FAMILY == "LFMXO5")) || (FAMILY == "UT24C")) || (FAMILY == "UT24CP")) ? "LIFCL" : FAMILY) ; 
    eval_mem4_sim_ipgen_lscc_ram_dp_true_main #(.FAMILY(T_FAMILY),
            .ADDR_DEPTH_A(ADDR_DEPTH_A),
            .ADDR_WIDTH_A(ADDR_WIDTH_A),
            .DATA_WIDTH_A(DATA_WIDTH_A),
            .ADDR_DEPTH_B(ADDR_DEPTH_B),
            .ADDR_WIDTH_B(ADDR_WIDTH_B),
            .DATA_WIDTH_B(DATA_WIDTH_B),
            .REGMODE_A(REGMODE_A),
            .REGMODE_B(REGMODE_B),
            .GSR(GSR),
            .RESETMODE_A(RESETMODE_A),
            .RESETMODE_B(RESETMODE_B),
            .RESET_RELEASE_A(RESET_RELEASE_A),
            .RESET_RELEASE_B(RESET_RELEASE_B),
            .INIT_FILE(INIT_FILE),
            .INIT_FILE_FORMAT(INIT_FILE_FORMAT),
            .MODULE_TYPE(MODULE_TYPE),
            .INIT_MODE(INIT_MODE),
            .BYTE_ENABLE_A(BYTE_ENABLE_A),
            .BYTE_SIZE_A(BYTE_SIZE_A),
            .BYTE_WIDTH_A(BYTE_WIDTH_A),
            .BYTE_EN_POL_A(BYTE_EN_POL_A),
            .WRITE_MODE_A(WRITE_MODE_A),
            .BYTE_ENABLE_B(BYTE_ENABLE_B),
            .BYTE_SIZE_B(BYTE_SIZE_B),
            .BYTE_WIDTH_B(BYTE_WIDTH_B),
            .BYTE_EN_POL_B(BYTE_EN_POL_B),
            .WRITE_MODE_B(WRITE_MODE_B),
            .PIPELINES(PIPELINES),
            .ECC_ENABLE(ECC_ENABLE),
            .MEM_ID(MEM_ID),
            .MEM_SIZE(MEM_SIZE),
            .INIT_VALUE_00(INIT_VALUE_00),
            .INIT_VALUE_01(INIT_VALUE_01),
            .INIT_VALUE_02(INIT_VALUE_02),
            .INIT_VALUE_03(INIT_VALUE_03),
            .INIT_VALUE_04(INIT_VALUE_04),
            .INIT_VALUE_05(INIT_VALUE_05),
            .INIT_VALUE_06(INIT_VALUE_06),
            .INIT_VALUE_07(INIT_VALUE_07),
            .INIT_VALUE_08(INIT_VALUE_08),
            .INIT_VALUE_09(INIT_VALUE_09),
            .INIT_VALUE_0A(INIT_VALUE_0A),
            .INIT_VALUE_0B(INIT_VALUE_0B),
            .INIT_VALUE_0C(INIT_VALUE_0C),
            .INIT_VALUE_0D(INIT_VALUE_0D),
            .INIT_VALUE_0E(INIT_VALUE_0E),
            .INIT_VALUE_0F(INIT_VALUE_0F),
            .INIT_VALUE_10(INIT_VALUE_10),
            .INIT_VALUE_11(INIT_VALUE_11),
            .INIT_VALUE_12(INIT_VALUE_12),
            .INIT_VALUE_13(INIT_VALUE_13),
            .INIT_VALUE_14(INIT_VALUE_14),
            .INIT_VALUE_15(INIT_VALUE_15),
            .INIT_VALUE_16(INIT_VALUE_16),
            .INIT_VALUE_17(INIT_VALUE_17),
            .INIT_VALUE_18(INIT_VALUE_18),
            .INIT_VALUE_19(INIT_VALUE_19),
            .INIT_VALUE_1A(INIT_VALUE_1A),
            .INIT_VALUE_1B(INIT_VALUE_1B),
            .INIT_VALUE_1C(INIT_VALUE_1C),
            .INIT_VALUE_1D(INIT_VALUE_1D),
            .INIT_VALUE_1E(INIT_VALUE_1E),
            .INIT_VALUE_1F(INIT_VALUE_1F),
            .INIT_VALUE_20(INIT_VALUE_20),
            .INIT_VALUE_21(INIT_VALUE_21),
            .INIT_VALUE_22(INIT_VALUE_22),
            .INIT_VALUE_23(INIT_VALUE_23),
            .INIT_VALUE_24(INIT_VALUE_24),
            .INIT_VALUE_25(INIT_VALUE_25),
            .INIT_VALUE_26(INIT_VALUE_26),
            .INIT_VALUE_27(INIT_VALUE_27),
            .INIT_VALUE_28(INIT_VALUE_28),
            .INIT_VALUE_29(INIT_VALUE_29),
            .INIT_VALUE_2A(INIT_VALUE_2A),
            .INIT_VALUE_2B(INIT_VALUE_2B),
            .INIT_VALUE_2C(INIT_VALUE_2C),
            .INIT_VALUE_2D(INIT_VALUE_2D),
            .INIT_VALUE_2E(INIT_VALUE_2E),
            .INIT_VALUE_2F(INIT_VALUE_2F),
            .INIT_VALUE_30(INIT_VALUE_30),
            .INIT_VALUE_31(INIT_VALUE_31),
            .INIT_VALUE_32(INIT_VALUE_32),
            .INIT_VALUE_33(INIT_VALUE_33),
            .INIT_VALUE_34(INIT_VALUE_34),
            .INIT_VALUE_35(INIT_VALUE_35),
            .INIT_VALUE_36(INIT_VALUE_36),
            .INIT_VALUE_37(INIT_VALUE_37),
            .INIT_VALUE_38(INIT_VALUE_38),
            .INIT_VALUE_39(INIT_VALUE_39),
            .INIT_VALUE_3A(INIT_VALUE_3A),
            .INIT_VALUE_3B(INIT_VALUE_3B),
            .INIT_VALUE_3C(INIT_VALUE_3C),
            .INIT_VALUE_3D(INIT_VALUE_3D),
            .INIT_VALUE_3E(INIT_VALUE_3E),
            .INIT_VALUE_3F(INIT_VALUE_3F),
            .INIT_VALUE_40(INIT_VALUE_40),
            .INIT_VALUE_41(INIT_VALUE_41),
            .INIT_VALUE_42(INIT_VALUE_42),
            .INIT_VALUE_43(INIT_VALUE_43),
            .INIT_VALUE_44(INIT_VALUE_44),
            .INIT_VALUE_45(INIT_VALUE_45),
            .INIT_VALUE_46(INIT_VALUE_46),
            .INIT_VALUE_47(INIT_VALUE_47),
            .INIT_VALUE_48(INIT_VALUE_48),
            .INIT_VALUE_49(INIT_VALUE_49),
            .INIT_VALUE_4A(INIT_VALUE_4A),
            .INIT_VALUE_4B(INIT_VALUE_4B),
            .INIT_VALUE_4C(INIT_VALUE_4C),
            .INIT_VALUE_4D(INIT_VALUE_4D),
            .INIT_VALUE_4E(INIT_VALUE_4E),
            .INIT_VALUE_4F(INIT_VALUE_4F),
            .INIT_VALUE_50(INIT_VALUE_50),
            .INIT_VALUE_51(INIT_VALUE_51),
            .INIT_VALUE_52(INIT_VALUE_52),
            .INIT_VALUE_53(INIT_VALUE_53),
            .INIT_VALUE_54(INIT_VALUE_54),
            .INIT_VALUE_55(INIT_VALUE_55),
            .INIT_VALUE_56(INIT_VALUE_56),
            .INIT_VALUE_57(INIT_VALUE_57),
            .INIT_VALUE_58(INIT_VALUE_58),
            .INIT_VALUE_59(INIT_VALUE_59),
            .INIT_VALUE_5A(INIT_VALUE_5A),
            .INIT_VALUE_5B(INIT_VALUE_5B),
            .INIT_VALUE_5C(INIT_VALUE_5C),
            .INIT_VALUE_5D(INIT_VALUE_5D),
            .INIT_VALUE_5E(INIT_VALUE_5E),
            .INIT_VALUE_5F(INIT_VALUE_5F),
            .INIT_VALUE_60(INIT_VALUE_60),
            .INIT_VALUE_61(INIT_VALUE_61),
            .INIT_VALUE_62(INIT_VALUE_62),
            .INIT_VALUE_63(INIT_VALUE_63),
            .INIT_VALUE_64(INIT_VALUE_64),
            .INIT_VALUE_65(INIT_VALUE_65),
            .INIT_VALUE_66(INIT_VALUE_66),
            .INIT_VALUE_67(INIT_VALUE_67),
            .INIT_VALUE_68(INIT_VALUE_68),
            .INIT_VALUE_69(INIT_VALUE_69),
            .INIT_VALUE_6A(INIT_VALUE_6A),
            .INIT_VALUE_6B(INIT_VALUE_6B),
            .INIT_VALUE_6C(INIT_VALUE_6C),
            .INIT_VALUE_6D(INIT_VALUE_6D),
            .INIT_VALUE_6E(INIT_VALUE_6E),
            .INIT_VALUE_6F(INIT_VALUE_6F),
            .INIT_VALUE_70(INIT_VALUE_70),
            .INIT_VALUE_71(INIT_VALUE_71),
            .INIT_VALUE_72(INIT_VALUE_72),
            .INIT_VALUE_73(INIT_VALUE_73),
            .INIT_VALUE_74(INIT_VALUE_74),
            .INIT_VALUE_75(INIT_VALUE_75),
            .INIT_VALUE_76(INIT_VALUE_76),
            .INIT_VALUE_77(INIT_VALUE_77),
            .INIT_VALUE_78(INIT_VALUE_78),
            .INIT_VALUE_79(INIT_VALUE_79),
            .INIT_VALUE_7A(INIT_VALUE_7A),
            .INIT_VALUE_7B(INIT_VALUE_7B),
            .INIT_VALUE_7C(INIT_VALUE_7C),
            .INIT_VALUE_7D(INIT_VALUE_7D),
            .INIT_VALUE_7E(INIT_VALUE_7E),
            .INIT_VALUE_7F(INIT_VALUE_7F)) mem_main (.addr_a_i(addr_a_i), 
                .addr_b_i(addr_b_i), 
                .wr_data_a_i(wr_data_a_i), 
                .wr_data_b_i(wr_data_b_i), 
                .clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .ben_a_i(ben_a_i), 
                .ben_b_i(ben_b_i), 
                .rd_data_a_o(rd_data_a_o), 
                .rd_data_b_o(rd_data_b_o), 
                .ecc_one_err_a_o(ecc_one_err_a_o), 
                .ecc_two_err_a_o(ecc_two_err_a_o), 
                .ecc_one_err_b_o(ecc_one_err_b_o), 
                .ecc_two_err_b_o(ecc_two_err_b_o)) ; 
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2017 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_main.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem4_sim_ipgen_lscc_ram_dp_true_main #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_))), 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter WRITE_MODE_A = "normal", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter WRITE_MODE_B = "normal", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    wire [(DATA_WIDTH_A - 1):0] mem_out_a_w ; 
    wire [(DATA_WIDTH_B - 1):0] mem_out_b_w ; 
    eval_mem4_sim_ipgen_lscc_write_through #(.FAMILY(FAMILY),
            .DATA_WIDTH(DATA_WIDTH_A),
            .REGMODE(REGMODE_A),
            .WRITE_MODE(WRITE_MODE_A)) inst_wr_a (.clk_i(clk_a_i), 
                .clk_en_i(clk_en_a_i), 
                .wr_en_i(wr_en_a_i), 
                .rst_i(rst_a_i), 
                .wr_data_i(wr_data_a_i), 
                .mem_out_i(mem_out_a_w), 
                .rd_data_o(rd_data_a_o)) ; 
    eval_mem4_sim_ipgen_lscc_write_through #(.FAMILY(FAMILY),
            .DATA_WIDTH(DATA_WIDTH_B),
            .REGMODE(REGMODE_B),
            .WRITE_MODE(WRITE_MODE_B)) inst_wr_b (.clk_i(clk_b_i), 
                .clk_en_i(clk_en_b_i), 
                .wr_en_i(wr_en_b_i), 
                .rst_i(rst_b_i), 
                .wr_data_i(wr_data_b_i), 
                .mem_out_i(mem_out_b_w), 
                .rd_data_o(rd_data_b_o)) ; 
    localparam T_REG_MODE_A = ((WRITE_MODE_A == "write-through") ? "noreg" : REGMODE_A) ; 
    localparam T_REG_MODE_B = ((WRITE_MODE_B == "write-through") ? "noreg" : REGMODE_B) ; 
    eval_mem4_sim_ipgen_lscc_ram_dp_true_inst #(.FAMILY(FAMILY),
            .ADDR_DEPTH_A(ADDR_DEPTH_A),
            .ADDR_WIDTH_A(ADDR_WIDTH_A),
            .DATA_WIDTH_A(DATA_WIDTH_A),
            .ADDR_DEPTH_B(ADDR_DEPTH_B),
            .ADDR_WIDTH_B(ADDR_WIDTH_B),
            .DATA_WIDTH_B(DATA_WIDTH_B),
            .REGMODE_A(T_REG_MODE_A),
            .REGMODE_B(T_REG_MODE_B),
            .GSR(GSR),
            .RESETMODE_A(RESETMODE_A),
            .RESETMODE_B(RESETMODE_B),
            .RESET_RELEASE_A(RESET_RELEASE_A),
            .RESET_RELEASE_B(RESET_RELEASE_B),
            .INIT_FILE(INIT_FILE),
            .INIT_FILE_FORMAT(INIT_FILE_FORMAT),
            .MODULE_TYPE(MODULE_TYPE),
            .INIT_MODE(INIT_MODE),
            .BYTE_ENABLE_A(BYTE_ENABLE_A),
            .BYTE_SIZE_A(BYTE_SIZE_A),
            .BYTE_WIDTH_A(BYTE_WIDTH_A),
            .BYTE_EN_POL_A(BYTE_EN_POL_A),
            .BYTE_ENABLE_B(BYTE_ENABLE_B),
            .BYTE_SIZE_B(BYTE_SIZE_B),
            .BYTE_WIDTH_B(BYTE_WIDTH_B),
            .BYTE_EN_POL_B(BYTE_EN_POL_B),
            .PIPELINES(PIPELINES),
            .ECC_ENABLE(ECC_ENABLE),
            .MEM_ID(MEM_ID),
            .MEM_SIZE(MEM_SIZE),
            .INIT_VALUE_00(INIT_VALUE_00),
            .INIT_VALUE_01(INIT_VALUE_01),
            .INIT_VALUE_02(INIT_VALUE_02),
            .INIT_VALUE_03(INIT_VALUE_03),
            .INIT_VALUE_04(INIT_VALUE_04),
            .INIT_VALUE_05(INIT_VALUE_05),
            .INIT_VALUE_06(INIT_VALUE_06),
            .INIT_VALUE_07(INIT_VALUE_07),
            .INIT_VALUE_08(INIT_VALUE_08),
            .INIT_VALUE_09(INIT_VALUE_09),
            .INIT_VALUE_0A(INIT_VALUE_0A),
            .INIT_VALUE_0B(INIT_VALUE_0B),
            .INIT_VALUE_0C(INIT_VALUE_0C),
            .INIT_VALUE_0D(INIT_VALUE_0D),
            .INIT_VALUE_0E(INIT_VALUE_0E),
            .INIT_VALUE_0F(INIT_VALUE_0F),
            .INIT_VALUE_10(INIT_VALUE_10),
            .INIT_VALUE_11(INIT_VALUE_11),
            .INIT_VALUE_12(INIT_VALUE_12),
            .INIT_VALUE_13(INIT_VALUE_13),
            .INIT_VALUE_14(INIT_VALUE_14),
            .INIT_VALUE_15(INIT_VALUE_15),
            .INIT_VALUE_16(INIT_VALUE_16),
            .INIT_VALUE_17(INIT_VALUE_17),
            .INIT_VALUE_18(INIT_VALUE_18),
            .INIT_VALUE_19(INIT_VALUE_19),
            .INIT_VALUE_1A(INIT_VALUE_1A),
            .INIT_VALUE_1B(INIT_VALUE_1B),
            .INIT_VALUE_1C(INIT_VALUE_1C),
            .INIT_VALUE_1D(INIT_VALUE_1D),
            .INIT_VALUE_1E(INIT_VALUE_1E),
            .INIT_VALUE_1F(INIT_VALUE_1F),
            .INIT_VALUE_20(INIT_VALUE_20),
            .INIT_VALUE_21(INIT_VALUE_21),
            .INIT_VALUE_22(INIT_VALUE_22),
            .INIT_VALUE_23(INIT_VALUE_23),
            .INIT_VALUE_24(INIT_VALUE_24),
            .INIT_VALUE_25(INIT_VALUE_25),
            .INIT_VALUE_26(INIT_VALUE_26),
            .INIT_VALUE_27(INIT_VALUE_27),
            .INIT_VALUE_28(INIT_VALUE_28),
            .INIT_VALUE_29(INIT_VALUE_29),
            .INIT_VALUE_2A(INIT_VALUE_2A),
            .INIT_VALUE_2B(INIT_VALUE_2B),
            .INIT_VALUE_2C(INIT_VALUE_2C),
            .INIT_VALUE_2D(INIT_VALUE_2D),
            .INIT_VALUE_2E(INIT_VALUE_2E),
            .INIT_VALUE_2F(INIT_VALUE_2F),
            .INIT_VALUE_30(INIT_VALUE_30),
            .INIT_VALUE_31(INIT_VALUE_31),
            .INIT_VALUE_32(INIT_VALUE_32),
            .INIT_VALUE_33(INIT_VALUE_33),
            .INIT_VALUE_34(INIT_VALUE_34),
            .INIT_VALUE_35(INIT_VALUE_35),
            .INIT_VALUE_36(INIT_VALUE_36),
            .INIT_VALUE_37(INIT_VALUE_37),
            .INIT_VALUE_38(INIT_VALUE_38),
            .INIT_VALUE_39(INIT_VALUE_39),
            .INIT_VALUE_3A(INIT_VALUE_3A),
            .INIT_VALUE_3B(INIT_VALUE_3B),
            .INIT_VALUE_3C(INIT_VALUE_3C),
            .INIT_VALUE_3D(INIT_VALUE_3D),
            .INIT_VALUE_3E(INIT_VALUE_3E),
            .INIT_VALUE_3F(INIT_VALUE_3F),
            .INIT_VALUE_40(INIT_VALUE_40),
            .INIT_VALUE_41(INIT_VALUE_41),
            .INIT_VALUE_42(INIT_VALUE_42),
            .INIT_VALUE_43(INIT_VALUE_43),
            .INIT_VALUE_44(INIT_VALUE_44),
            .INIT_VALUE_45(INIT_VALUE_45),
            .INIT_VALUE_46(INIT_VALUE_46),
            .INIT_VALUE_47(INIT_VALUE_47),
            .INIT_VALUE_48(INIT_VALUE_48),
            .INIT_VALUE_49(INIT_VALUE_49),
            .INIT_VALUE_4A(INIT_VALUE_4A),
            .INIT_VALUE_4B(INIT_VALUE_4B),
            .INIT_VALUE_4C(INIT_VALUE_4C),
            .INIT_VALUE_4D(INIT_VALUE_4D),
            .INIT_VALUE_4E(INIT_VALUE_4E),
            .INIT_VALUE_4F(INIT_VALUE_4F),
            .INIT_VALUE_50(INIT_VALUE_50),
            .INIT_VALUE_51(INIT_VALUE_51),
            .INIT_VALUE_52(INIT_VALUE_52),
            .INIT_VALUE_53(INIT_VALUE_53),
            .INIT_VALUE_54(INIT_VALUE_54),
            .INIT_VALUE_55(INIT_VALUE_55),
            .INIT_VALUE_56(INIT_VALUE_56),
            .INIT_VALUE_57(INIT_VALUE_57),
            .INIT_VALUE_58(INIT_VALUE_58),
            .INIT_VALUE_59(INIT_VALUE_59),
            .INIT_VALUE_5A(INIT_VALUE_5A),
            .INIT_VALUE_5B(INIT_VALUE_5B),
            .INIT_VALUE_5C(INIT_VALUE_5C),
            .INIT_VALUE_5D(INIT_VALUE_5D),
            .INIT_VALUE_5E(INIT_VALUE_5E),
            .INIT_VALUE_5F(INIT_VALUE_5F),
            .INIT_VALUE_60(INIT_VALUE_60),
            .INIT_VALUE_61(INIT_VALUE_61),
            .INIT_VALUE_62(INIT_VALUE_62),
            .INIT_VALUE_63(INIT_VALUE_63),
            .INIT_VALUE_64(INIT_VALUE_64),
            .INIT_VALUE_65(INIT_VALUE_65),
            .INIT_VALUE_66(INIT_VALUE_66),
            .INIT_VALUE_67(INIT_VALUE_67),
            .INIT_VALUE_68(INIT_VALUE_68),
            .INIT_VALUE_69(INIT_VALUE_69),
            .INIT_VALUE_6A(INIT_VALUE_6A),
            .INIT_VALUE_6B(INIT_VALUE_6B),
            .INIT_VALUE_6C(INIT_VALUE_6C),
            .INIT_VALUE_6D(INIT_VALUE_6D),
            .INIT_VALUE_6E(INIT_VALUE_6E),
            .INIT_VALUE_6F(INIT_VALUE_6F),
            .INIT_VALUE_70(INIT_VALUE_70),
            .INIT_VALUE_71(INIT_VALUE_71),
            .INIT_VALUE_72(INIT_VALUE_72),
            .INIT_VALUE_73(INIT_VALUE_73),
            .INIT_VALUE_74(INIT_VALUE_74),
            .INIT_VALUE_75(INIT_VALUE_75),
            .INIT_VALUE_76(INIT_VALUE_76),
            .INIT_VALUE_77(INIT_VALUE_77),
            .INIT_VALUE_78(INIT_VALUE_78),
            .INIT_VALUE_79(INIT_VALUE_79),
            .INIT_VALUE_7A(INIT_VALUE_7A),
            .INIT_VALUE_7B(INIT_VALUE_7B),
            .INIT_VALUE_7C(INIT_VALUE_7C),
            .INIT_VALUE_7D(INIT_VALUE_7D),
            .INIT_VALUE_7E(INIT_VALUE_7E),
            .INIT_VALUE_7F(INIT_VALUE_7F)) uinst_0 (.addr_a_i(addr_a_i), 
                .addr_b_i(addr_b_i), 
                .wr_data_a_i(wr_data_a_i), 
                .wr_data_b_i(wr_data_b_i), 
                .clk_a_i(clk_a_i), 
                .clk_b_i(clk_b_i), 
                .clk_en_a_i(clk_en_a_i), 
                .clk_en_b_i(clk_en_b_i), 
                .wr_en_a_i(wr_en_a_i), 
                .wr_en_b_i(wr_en_b_i), 
                .rst_a_i(rst_a_i), 
                .rst_b_i(rst_b_i), 
                .ben_a_i(ben_a_i), 
                .ben_b_i(ben_b_i), 
                .rd_data_a_o(mem_out_a_w), 
                .rd_data_b_o(mem_out_b_w), 
                .ecc_one_err_a_o(ecc_one_err_a_o), 
                .ecc_two_err_a_o(ecc_two_err_a_o), 
                .ecc_one_err_b_o(ecc_one_err_b_o), 
                .ecc_two_err_b_o(ecc_two_err_b_o)) ; 
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [31:0] getByteSize ; 
        input [31:0] data_width ; 
        input [31:0] dev_code ; 
        begin
            case (dev_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((data_width % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
endmodule



module eval_mem4_sim_ipgen_lscc_write_through #(parameter FAMILY = "common", 
        parameter DATA_WIDTH = 36, 
        parameter REGMODE = "noreg", 
        parameter WRITE_MODE = "normal") (
    input clk_i, 
    input clk_en_i, 
    input wr_en_i, 
    input rst_i, 
    input [(DATA_WIDTH - 1):0] wr_data_i, 
    input [(DATA_WIDTH - 1):0] mem_out_i, 
    output [(DATA_WIDTH - 1):0] rd_data_o) ;
    if ((WRITE_MODE == "write-through")) 
        begin : WRITE_THROUGH
            reg [(DATA_WIDTH - 1):0] wr_data_p_r ; 
            reg wr_en_p_r ; 
            always
                @(posedge clk_i or 
                    posedge rst_i)
                begin
                    if (rst_i) 
                        begin
                            wr_data_p_r <=  {DATA_WIDTH{1'b0}} ;
                            wr_en_p_r <=  1'b0 ;
                        end
                    else
                        begin
                            wr_data_p_r <=  wr_data_i ;
                            wr_en_p_r <=  wr_en_i ;
                        end
                end
            if ((REGMODE == "noreg")) 
                begin : _NoRegMode
                    assign rd_data_o = (wr_en_p_r ? wr_data_p_r : mem_out_i) ; 
                end
            else
                begin : _RegMode
                    reg [(DATA_WIDTH - 1):0] rd_data_r ; 
                    wire [(DATA_WIDTH - 1):0] rd_data_nxt_w = (wr_en_p_r ? wr_data_p_r : mem_out_i) ; 
                    assign rd_data_o = rd_data_r ; 
                    always
                        @(posedge clk_i or 
                            posedge rst_i)
                        begin
                            if (rst_i) 
                                begin
                                    rd_data_r <=  {DATA_WIDTH{1'b0}} ;
                                end
                            else
                                begin
                                    rd_data_r <=  rd_data_nxt_w ;
                                end
                        end
                end
        end
    else
        begin : NORMAL
            assign rd_data_o = mem_out_i ; 
        end
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2017 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_inst.v
// Title                 :
// Dependencies          :
// Description           : Implements a true Dual Port RAM using EBR.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem4_sim_ipgen_lscc_ram_dp_true_inst #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_))), 
        parameter ADDR_DEPTH_A = 1024, 
        parameter ADDR_WIDTH_A = clog2(ADDR_DEPTH_A), 
        parameter DATA_WIDTH_A = 36, 
        parameter ADDR_DEPTH_B = 1024, 
        parameter ADDR_WIDTH_B = clog2(ADDR_DEPTH_B), 
        parameter DATA_WIDTH_B = 36, 
        parameter REGMODE_A = "reg", 
        parameter REGMODE_B = "reg", 
        parameter GSR = "enable", 
        parameter RESETMODE_A = "sync", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter INIT_FILE = "none", 
        parameter INIT_FILE_FORMAT = "binary", 
        parameter MODULE_TYPE = "ram_dp_true", 
        parameter INIT_MODE = "none", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 1) ? roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A) : 1), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 1) ? roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B) : 1), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter PIPELINES = 0, 
        parameter ECC_ENABLE = 0, 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter INIT_VALUE_00 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_01 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_02 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_03 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_04 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_05 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_06 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_07 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_08 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_09 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_0F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_10 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_11 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_12 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_13 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_14 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_15 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_16 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_17 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_18 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_19 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_1F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_20 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_21 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_22 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_23 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_24 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_25 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_26 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_27 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_28 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_29 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_2F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_30 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_31 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_32 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_33 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_34 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_35 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_36 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_37 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_38 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_39 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_3F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_40 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_41 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_42 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_43 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_44 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_45 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_46 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_47 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_48 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_49 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_4F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_50 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_51 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_52 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_53 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_54 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_55 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_56 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_57 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_58 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_59 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_5F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_60 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_61 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_62 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_63 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_64 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_65 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_66 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_67 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_68 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_69 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_6F = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_70 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_71 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_72 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_73 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_74 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_75 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_76 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_77 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_78 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_79 = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7A = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7B = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7C = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7D = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7E = "0x0000000000000000000000000000000000000000000000000000000000000000", 
        parameter INIT_VALUE_7F = "0x0000000000000000000000000000000000000000000000000000000000000000") (
    // -----------------------------------------------------------------------------
    // Input/Output Ports
    // -----------------------------------------------------------------------------
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    input clk_a_i, 
    input clk_b_i, 
    input clk_en_a_i, 
    input clk_en_b_i, 
    input wr_en_a_i, 
    input wr_en_b_i, 
    input rst_a_i, 
    input rst_b_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o, 
    output ecc_one_err_a_o, 
    output ecc_two_err_a_o, 
    output ecc_one_err_b_o, 
    output ecc_two_err_b_o) ;
    localparam STRING_LENGTH = 82 ; 
    genvar i0, 
        i1, 
        i_0, 
        i_1 ; 
    generate
        if ((FAMILY == "common")) 
            begin : behavioral
                (* syn_ramstyle="block_ram" *) reg [(DATA_WIDTH_A - 1):0] mem [((2 ** ADDR_WIDTH_A) - 1):0] ; 
                integer mem_i0 ; 
                initial
                    begin
                        if (((INIT_MODE == "mem_file") && (INIT_FILE != "none"))) 
                            begin
                                if ((INIT_FILE_FORMAT == "hex")) 
                                    begin
                                        $readmemh (INIT_FILE,
                                                mem,
                                                0,
                                                (ADDR_DEPTH_A - 1)) ;
                                    end
                                else
                                    begin
                                        $readmemb (INIT_FILE,
                                                mem,
                                                0,
                                                (ADDR_DEPTH_A - 1)) ;
                                    end
                            end
                    end
                reg [(DATA_WIDTH_A - 1):0] dataout_reg_a_r = {DATA_WIDTH_A{1'b0}} ; 
                reg [(DATA_WIDTH_A - 1):0] dataout_reg_buff_a_r = {DATA_WIDTH_A{1'b0}} ; 
                assign rd_data_a_o = ((REGMODE_A == "reg") ? dataout_reg_a_r : dataout_reg_buff_a_r) ; 
                always
                    @(posedge clk_a_i)
                    begin
                        if ((clk_en_a_i == 1'b1)) 
                            begin
                                if ((wr_en_a_i == 1'b1)) 
                                    begin
                                        mem[addr_a_i] <=  wr_data_a_i ;
                                    end
                                else
                                    begin
                                        dataout_reg_buff_a_r <=  mem[addr_a_i] ;
                                    end
                            end
                    end
                if ((REGMODE_A == "reg")) 
                    begin : _reg_a
                        if ((RESETMODE_A == "sync")) 
                            begin : _sync_rst_a
                                always
                                    @(posedge clk_a_i)
                                    begin
                                        if ((rst_a_i == 1'b1)) 
                                            begin
                                                dataout_reg_a_r <=  'h0 ;
                                            end
                                        else
                                            if ((wr_en_a_i == 1'b0)) 
                                                begin
                                                    dataout_reg_a_r <=  dataout_reg_buff_a_r ;
                                                end
                                    end
                            end
                        else
                            if ((RESET_RELEASE_A == "sync")) 
                                begin : _sync_rel_a
                                    always
                                        @(posedge clk_a_i or 
                                            posedge rst_a_i)
                                        begin
                                            if ((rst_a_i == 1'b1)) 
                                                begin
                                                    dataout_reg_a_r <=  'h0 ;
                                                end
                                            else
                                                if ((wr_en_a_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_a_r <=  dataout_reg_buff_a_r ;
                                                    end
                                        end
                                end
                            else
                                begin : _async_rel_a
                                    reg [(DATA_WIDTH_A - 1):0] dataout_reg_a_buffered_r = {DATA_WIDTH_A{1'b0}} ; 
                                    always
                                        @(*)
                                        begin
                                            if ((rst_a_i == 1'b1)) 
                                                begin
                                                    dataout_reg_a_r = 'h0 ;
                                                end
                                            else
                                                if ((wr_en_a_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_a_r = dataout_reg_a_buffered_r ;
                                                    end
                                        end
                                    always
                                        @(posedge clk_a_i)
                                        begin
                                            dataout_reg_a_buffered_r <=  dataout_reg_buff_a_r ;
                                        end
                                end
                    end
                reg [(DATA_WIDTH_B - 1):0] dataout_reg_b_r = {DATA_WIDTH_B{1'b0}} ; 
                reg [(DATA_WIDTH_B - 1):0] dataout_reg_buff_b_r = {DATA_WIDTH_B{1'b0}} ; 
                assign rd_data_b_o = ((REGMODE_B == "reg") ? dataout_reg_b_r : dataout_reg_buff_b_r) ; 
                always
                    @(posedge clk_b_i)
                    begin
                        if ((clk_en_b_i == 1'b1)) 
                            begin
                                if ((wr_en_b_i == 1'b1)) 
                                    begin
                                        mem[addr_b_i] <=  wr_data_b_i ;
                                    end
                                else
                                    begin
                                        dataout_reg_buff_b_r <=  mem[addr_b_i] ;
                                    end
                            end
                    end
                if ((REGMODE_B == "reg")) 
                    begin : _reg_b
                        if ((RESETMODE_B == "sync")) 
                            begin : _sync_rst_b
                                always
                                    @(posedge clk_b_i)
                                    begin
                                        if ((rst_b_i == 1'b1)) 
                                            begin
                                                dataout_reg_b_r <=  'h0 ;
                                            end
                                        else
                                            if ((wr_en_b_i == 1'b0)) 
                                                begin
                                                    dataout_reg_b_r <=  dataout_reg_buff_b_r ;
                                                end
                                    end
                            end
                        else
                            if ((RESET_RELEASE_B == "sync")) 
                                begin : _sync_rel_b
                                    always
                                        @(posedge clk_b_i or 
                                            posedge rst_b_i)
                                        begin
                                            if ((rst_b_i == 1'b1)) 
                                                begin
                                                    dataout_reg_b_r <=  'h0 ;
                                                end
                                            else
                                                if ((wr_en_b_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_b_r <=  dataout_reg_buff_b_r ;
                                                    end
                                        end
                                end
                            else
                                begin : _async_rel_b
                                    reg [(DATA_WIDTH_B - 1):0] dataout_reg_b_buffered_r = {DATA_WIDTH_B{1'b0}} ; 
                                    always
                                        @(*)
                                        begin
                                            if ((rst_b_i == 1'b1)) 
                                                begin
                                                    dataout_reg_b_r = 'h0 ;
                                                end
                                            else
                                                if ((wr_en_b_i == 1'b0)) 
                                                    begin
                                                        dataout_reg_b_r = dataout_reg_b_buffered_r ;
                                                    end
                                        end
                                    always
                                        @(posedge clk_b_i)
                                        begin
                                            dataout_reg_b_buffered_r <=  dataout_reg_buff_b_r ;
                                        end
                                end
                    end
            end
        else
            begin : prim
                // ---------------------------------------
                // ------ SAME WIDTH Implementation ------
                // ---------------------------------------
                if (((ADDR_DEPTH_A == ADDR_DEPTH_B) && (DATA_WIDTH_A == DATA_WIDTH_B))) 
                    begin : NON_MIX
                        // ---------------------------------------------------
                        // ------ Local Parameters for EBR Optimization ------
                        // ---------------------------------------------------
                        localparam OPT_DATA_WIDTH = getMinimaData(ADDR_DEPTH_A,
                                    DATA_WIDTH_A,
                                    (BYTE_ENABLE_A || BYTE_ENABLE_B),
                                    BYTE_SIZE_A,
                                    FAMILY_CODE) ; 
                        localparam OPT_ADDR_DEPTH = data_to_addr(OPT_DATA_WIDTH,
                                    FAMILY_CODE) ; 
                        localparam OPT_ADDR_WIDTH = clog2(OPT_ADDR_DEPTH) ; 
                        localparam EBR_DATA = roundUP(DATA_WIDTH_A,
                                    OPT_DATA_WIDTH) ; 
                        localparam EBR_ADDR = roundUP(ADDR_DEPTH_A,
                                    OPT_ADDR_DEPTH) ; 
                        //Set the value of BWID to 1 when BYTE_ENABLE is disabled 
                        localparam BWID_A = ((BYTE_ENABLE_A == 0) ? 1 : (((OPT_DATA_WIDTH == 36) || (OPT_DATA_WIDTH == 32)) ? 4 : (((OPT_DATA_WIDTH == 18) || (OPT_DATA_WIDTH == 16)) ? 2 : 1))) ; 
                        localparam BWID_B = ((BYTE_ENABLE_B == 0) ? 1 : (((OPT_DATA_WIDTH == 36) || (OPT_DATA_WIDTH == 32)) ? 4 : (((OPT_DATA_WIDTH == 18) || (OPT_DATA_WIDTH == 16)) ? 2 : 1))) ; 
                        /* localparam BWID_A   = (OPT_DATA_WIDTH == 36 || OPT_DATA_WIDTH == 32) ? 4 :
                                  (OPT_DATA_WIDTH == 18 || OPT_DATA_WIDTH == 16) ? 2 : 1;
            localparam BWID_B   = (OPT_DATA_WIDTH == 36 || OPT_DATA_WIDTH == 32) ? 4 :
                                  (OPT_DATA_WIDTH == 18 || OPT_DATA_WIDTH == 16) ? 2 : 1; */
                        // ------ PORT A & B Output MUX ------
                        wire [(DATA_WIDTH_A - 1):0] rd_data_raw_a_w [(EBR_ADDR - 1):0] ; 
                        wire [(DATA_WIDTH_B - 1):0] rd_data_raw_b_w [(EBR_ADDR - 1):0] ; 
                        // ------ PORT A Address Wiring ------
                        wire [(OPT_ADDR_WIDTH - 1):0] addr_a_w ; 
                        if ((OPT_ADDR_WIDTH > ADDR_WIDTH_A)) 
                            begin : port_a_wiring
                                assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                assign addr_a_w[(OPT_ADDR_WIDTH - 1):ADDR_WIDTH_A] = {(OPT_ADDR_WIDTH - ADDR_WIDTH_A){1'b0}} ; 
                            end
                        else
                            begin : genblk1
                                assign addr_a_w = addr_a_i[(OPT_ADDR_WIDTH - 1):0] ; 
                            end
                        // ------ PORT B Address Wiring ------
                        wire [(OPT_ADDR_WIDTH - 1):0] addr_b_w ; 
                        if ((OPT_ADDR_WIDTH > ADDR_WIDTH_B)) 
                            begin : port_b_wiring
                                assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                assign addr_b_w[(OPT_ADDR_WIDTH - 1):ADDR_WIDTH_B] = {(OPT_ADDR_WIDTH - ADDR_WIDTH_B){1'b0}} ; 
                            end
                        else
                            begin : genblk2
                                assign addr_b_w = addr_b_i[(OPT_ADDR_WIDTH - 1):0] ; 
                            end
                        // ------ Address Loop (Same Width) ------
                        for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                        begin : xADDR
                            // ------ PORT A output ports ------
                            wire [(DATA_WIDTH_A - 1):0] raw_out_a_w ; 
                            assign rd_data_raw_a_w[i0] = raw_out_a_w ; 
                            // ------ PORT A Address Control Signal ------
                            wire chk_addr_a_w ; 
                            if ((EBR_ADDR > 1)) 
                                begin : genblk1
                                    assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):OPT_ADDR_WIDTH] == i0) ? 1'b1 : 1'b0) ; 
                                end
                            else
                                begin : genblk1
                                    assign chk_addr_a_w = 1'b1 ; 
                                end
                            // ------ PORT B output ports ------
                            wire [(DATA_WIDTH_B - 1):0] raw_out_b_w ; 
                            assign rd_data_raw_b_w[i0] = raw_out_b_w ; 
                            // ------ PORT B Address Control Signal ------
                            wire chk_addr_b_w ; 
                            if ((EBR_ADDR > 1)) 
                                begin : genblk2
                                    assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):OPT_ADDR_WIDTH] == i0) ? 1'b1 : 1'b0) ; 
                                end
                            else
                                begin : genblk2
                                    assign chk_addr_b_w = 1'b1 ; 
                                end
                            // ------ Data Loop (Same Width) ------
                            for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                            begin : xDATA
                                localparam ECO_POSX = (i1 * OPT_DATA_WIDTH) ; 
                                localparam ECO_POSY = (i0 * OPT_ADDR_DEPTH) ; 
                                // ------ PORT A Data Wiring ------
                                wire [(OPT_DATA_WIDTH - 1):0] in_a_w ; 
                                wire [(OPT_DATA_WIDTH - 1):0] out_a_w ; 
                                if (((OPT_DATA_WIDTH * (i1 + 1)) < DATA_WIDTH_A)) 
                                    begin : ASSIGN_A
                                        assign in_a_w = wr_data_a_i[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        assign raw_out_a_w[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] = out_a_w ; 
                                    end
                                else
                                    begin : genblk1
                                        assign in_a_w[(DATA_WIDTH_A - (1 + (OPT_DATA_WIDTH * i1))):0] = wr_data_a_i[(DATA_WIDTH_A - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        if ((OPT_DATA_WIDTH > (DATA_WIDTH_A - (OPT_DATA_WIDTH * i1)))) 
                                            begin : genblk1
                                                assign in_a_w[(OPT_DATA_WIDTH - 1):(DATA_WIDTH_A - (OPT_DATA_WIDTH * i1))] = {(OPT_DATA_WIDTH - (DATA_WIDTH_A - (OPT_DATA_WIDTH * i1))){1'b0}} ; 
                                            end
                                        assign raw_out_a_w[(DATA_WIDTH_A - 1):(OPT_DATA_WIDTH * i1)] = out_a_w[(DATA_WIDTH_A - (1 + (OPT_DATA_WIDTH * i1))):0] ; 
                                    end
                                // ------ PORT B Data Wiring ------
                                wire [(OPT_DATA_WIDTH - 1):0] in_b_w ; 
                                wire [(OPT_DATA_WIDTH - 1):0] out_b_w ; 
                                if (((OPT_DATA_WIDTH * (i1 + 1)) < DATA_WIDTH_B)) 
                                    begin : ASSIGN_B
                                        assign in_b_w = wr_data_b_i[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        assign raw_out_b_w[((OPT_DATA_WIDTH * (i1 + 1)) - 1):(OPT_DATA_WIDTH * i1)] = out_b_w ; 
                                    end
                                else
                                    begin : genblk2
                                        assign in_b_w[(DATA_WIDTH_B - (1 + (OPT_DATA_WIDTH * i1))):0] = wr_data_b_i[(DATA_WIDTH_B - 1):(OPT_DATA_WIDTH * i1)] ; 
                                        if ((OPT_DATA_WIDTH > (DATA_WIDTH_B - (OPT_DATA_WIDTH * i1)))) 
                                            begin : genblk1
                                                assign in_b_w[(OPT_DATA_WIDTH - 1):(DATA_WIDTH_B - (OPT_DATA_WIDTH * i1))] = {(OPT_DATA_WIDTH - (DATA_WIDTH_B - (OPT_DATA_WIDTH * i1))){1'b0}} ; 
                                            end
                                        assign raw_out_b_w[(DATA_WIDTH_B - 1):(OPT_DATA_WIDTH * i1)] = out_b_w[(DATA_WIDTH_B - (1 + (OPT_DATA_WIDTH * i1))):0] ; 
                                    end
                                wire [(BWID_A - 1):0] ben_a_w ; 
                                wire [(BWID_B - 1):0] ben_b_w ; 
                                // ------ Byte-Enable Wiring ------
                                if (((BWID_A == 2) || (BWID_A == 4))) 
                                    begin : BEN_MULT_A
                                        if ((BYTE_ENABLE_A == 1)) 
                                            begin : genblk1
                                                if ((((i1 + 1) * BWID_A) < BYTE_WIDTH_A)) 
                                                    begin : _A
                                                        assign ben_a_w = ben_a_i[(((i1 + 1) * BWID_A) - 1):(i1 * BWID_A)] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_a_w[(BYTE_WIDTH_A - (1 + (i1 * BWID_A))):0] = ben_a_i[(BYTE_WIDTH_A - 1):(i1 * BWID_A)] ; 
                                                        if ((((i1 + 1) * BWID_A) > BYTE_WIDTH_A)) 
                                                            begin : genblk1
                                                                assign ben_a_w[(BWID_A - 1):(BYTE_WIDTH_A - (i1 * BWID_A))] = {(BWID_A - (BYTE_WIDTH_A - (i1 * BWID_A))){1'b0}} ; 
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_a_w = {BWID_A{1'b1}} ; 
                                            end
                                    end
                                else
                                    begin : BEN_SING_A
                                        if ((BYTE_ENABLE_A == 1)) 
                                            begin : genblk1
                                                if ((OPT_DATA_WIDTH >= 8)) 
                                                    begin : genblk1
                                                        assign ben_a_w = ben_a_i[i1] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_a_w = ben_a_i[(((i1 * OPT_DATA_WIDTH) * BYTE_WIDTH_A) / DATA_WIDTH_A)] ; 
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_a_w = {BWID_A{1'b1}} ; 
                                            end
                                    end
                                if (((BWID_B == 2) || (BWID_B == 4))) 
                                    begin : BEN_MULT_B
                                        if ((BYTE_ENABLE_B == 1)) 
                                            begin : genblk1
                                                if ((((i1 + 1) * 2) < BYTE_WIDTH_B)) 
                                                    begin : _B
                                                        assign ben_b_w = ben_b_i[(((i1 + 1) * BWID_B) - 1):(i1 * BWID_B)] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_b_w[(BYTE_WIDTH_B - (1 + (i1 * BWID_B))):0] = ben_b_i[(BYTE_WIDTH_B - 1):(i1 * BWID_B)] ; 
                                                        if ((((i1 + 1) * BWID_B) > BYTE_WIDTH_B)) 
                                                            begin : genblk1
                                                                assign ben_b_w[(BWID_B - 1):(BYTE_WIDTH_B - (i1 * BWID_B))] = {(BWID_B - (BYTE_WIDTH_B - (i1 * BWID_B))){1'b0}} ; 
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_b_w = {BWID_B{1'b1}} ; 
                                            end
                                    end
                                else
                                    begin : BEN_SING_B
                                        if ((BYTE_ENABLE_B == 1)) 
                                            begin : genblk1
                                                if ((OPT_DATA_WIDTH >= 8)) 
                                                    begin : genblk1
                                                        assign ben_b_w = ben_b_i[i1] ; 
                                                    end
                                                else
                                                    begin : genblk1
                                                        assign ben_b_w = ben_b_i[(((i1 * OPT_DATA_WIDTH) * BYTE_WIDTH_B) / DATA_WIDTH_B)] ; 
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                assign ben_b_w = {BWID_B{1'b1}} ; 
                                            end
                                    end
                                // ------------------------------------
                                // ------ SINGLE MEMORY INSTANCE ------
                                // ------------------------------------
                                if ((INIT_MODE == "mem_file")) 
                                    begin : mem_file
                                        eval_mem4_sim_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                ._FCODE_AP6_(_FCODE_AP6_),
                                                ._FCODE_COMMON_(_FCODE_COMMON_),
                                                .FAMILY(FAMILY),
                                                .INIT_MODE(INIT_MODE),
                                                .MEM_SIZE(MEM_SIZE),
                                                .MEM_ID(MEM_ID),
                                                .POSx(ECO_POSX),
                                                .POSy(ECO_POSY),
                                                .DATA_WIDTH_A(OPT_DATA_WIDTH),
                                                .REGMODE_A(REGMODE_A),
                                                .RESETMODE_A(RESETMODE_A),
                                                .RESET_RELEASE_A(RESET_RELEASE_A),
                                                .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                .DATA_WIDTH_B(OPT_DATA_WIDTH),
                                                .REGMODE_B(REGMODE_B),
                                                .RESETMODE_B(RESETMODE_B),
                                                .RESET_RELEASE_B(RESET_RELEASE_B),
                                                .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                .BYTE_EN_POL_B(BYTE_EN_POL_B),
                                                .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                // ------ PORT A PARAMETERS ------
                                                // ------ PORT B PARAMETERS ------
                                                // ------ INIT PARAMETERS ------
                                                // ------ PORT A signals ------
                                                .clk_a_i(clk_a_i), 
                                                    .clk_en_a_i(clk_en_a_i), 
                                                    .rst_a_i(rst_a_i), 
                                                    .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                    .ben_a_i(ben_a_w), 
                                                    .addr_a_i(addr_a_w), 
                                                    .wr_data_a_i(in_a_w), 
                                                    .rd_data_a_o(out_a_w), 
                                                    // ------ PORT B signals ------
                                                .clk_b_i(clk_b_i), 
                                                    .clk_en_b_i(clk_en_b_i), 
                                                    .rst_b_i(rst_b_i), 
                                                    .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                    .ben_b_i(ben_b_w), 
                                                    .addr_b_i(addr_b_w), 
                                                    .wr_data_b_i(in_b_w), 
                                                    .rd_data_b_o(out_b_w)) ; 
                                    end
                                else
                                    begin : no_mem_file
                                        eval_mem4_sim_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                ._FCODE_AP6_(_FCODE_AP6_),
                                                ._FCODE_COMMON_(_FCODE_COMMON_),
                                                .FAMILY(FAMILY),
                                                .INIT_MODE(INIT_MODE),
                                                .MEM_SIZE(MEM_SIZE),
                                                .MEM_ID(MEM_ID),
                                                .POSx(ECO_POSX),
                                                .POSy(ECO_POSY),
                                                .DATA_WIDTH_A(OPT_DATA_WIDTH),
                                                .REGMODE_A(REGMODE_A),
                                                .RESETMODE_A(RESETMODE_A),
                                                .RESET_RELEASE_A(RESET_RELEASE_A),
                                                .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                .DATA_WIDTH_B(OPT_DATA_WIDTH),
                                                .REGMODE_B(REGMODE_B),
                                                .RESETMODE_B(RESETMODE_B),
                                                .RESET_RELEASE_B(RESET_RELEASE_B),
                                                .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                .BYTE_EN_POL_B(BYTE_EN_POL_B)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                // ------ PORT A PARAMETERS ------
                                                // ------ PORT B PARAMETERS ------
                                                // ------ PORT A signals ------
                                                .clk_a_i(clk_a_i), 
                                                    .clk_en_a_i(clk_en_a_i), 
                                                    .rst_a_i(rst_a_i), 
                                                    .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                    .ben_a_i(ben_a_w), 
                                                    .addr_a_i(addr_a_w), 
                                                    .wr_data_a_i(in_a_w), 
                                                    .rd_data_a_o(out_a_w), 
                                                    // ------ PORT B signals ------
                                                .clk_b_i(clk_b_i), 
                                                    .clk_en_b_i(clk_en_b_i), 
                                                    .rst_b_i(rst_b_i), 
                                                    .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                    .ben_b_i(ben_b_w), 
                                                    .addr_b_i(addr_b_w), 
                                                    .wr_data_b_i(in_b_w), 
                                                    .rd_data_b_o(out_b_w)) ; 
                                    end
                            end
                        end
                        if ((EBR_ADDR == 1)) 
                            begin : ONE_OUT
                                assign rd_data_a_o = rd_data_raw_a_w[0] ; 
                                assign rd_data_b_o = rd_data_raw_b_w[0] ; 
                            end
                        else
                            begin : MULT_OUT
                                // ------ PORT A output assignment
                                reg [(DATA_WIDTH_A - 1):0] a_out_buff_r ; 
                                reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                assign rd_data_a_o = a_out_buff_r ; 
                                always
                                    @(*)
                                    begin
                                        a_out_buff_r = rd_data_raw_a_w[addr_a_p_r[(ADDR_WIDTH_A - 1):OPT_ADDR_WIDTH]] ;
                                    end
                                if ((REGMODE_A == "noreg")) 
                                    begin : genblk1
                                        if ((RESETMODE_A == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_a_p_r <=  addr_a_i ;
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i or 
                                                        posedge rst_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_a_p_r <=  addr_a_i ;
                                                            end
                                                    end
                                            end
                                    end
                                else
                                    begin : genblk1
                                        reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r ; 
                                        if ((RESETMODE_A == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_a_p2_r <=  addr_a_i ;
                                                                addr_a_p_r <=  addr_a_p2_r ;
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_a_i or 
                                                        posedge rst_a_i)
                                                    begin
                                                        if (rst_a_i) 
                                                            begin
                                                                addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_a_p2_r <=  addr_a_i ;
                                                                addr_a_p_r <=  addr_a_p2_r ;
                                                            end
                                                    end
                                            end
                                    end
                                // ------ PORT B output assignment
                                reg [(DATA_WIDTH_B - 1):0] b_out_buff_r ; 
                                reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r ; 
                                assign rd_data_b_o = b_out_buff_r ; 
                                always
                                    @(*)
                                    begin
                                        b_out_buff_r = rd_data_raw_b_w[addr_b_p_r[(ADDR_WIDTH_B - 1):OPT_ADDR_WIDTH]] ;
                                    end
                                if ((REGMODE_B == "noreg")) 
                                    begin : genblk2
                                        if ((RESETMODE_B == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_b_p_r <=  addr_b_i ;
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i or 
                                                        posedge rst_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_b_p_r <=  addr_b_i ;
                                                            end
                                                    end
                                            end
                                    end
                                else
                                    begin : genblk2
                                        reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r ; 
                                        if ((RESETMODE_B == "sync")) 
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_b_p2_r <=  addr_b_i ;
                                                                addr_b_p_r <=  addr_b_p2_r ;
                                                            end
                                                    end
                                            end
                                        else
                                            begin : genblk1
                                                always
                                                    @(posedge clk_b_i or 
                                                        posedge rst_b_i)
                                                    begin
                                                        if (rst_b_i) 
                                                            begin
                                                                addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                            end
                                                        else
                                                            begin
                                                                addr_b_p2_r <=  addr_b_i ;
                                                                addr_b_p_r <=  addr_b_p2_r ;
                                                            end
                                                    end
                                            end
                                    end
                            end
                    end
                else
                    // ---------------------------------------------------------
                    // ------ Mixed WIDTH Implementation (no Byte-Enable) ------
                    // ---------------------------------------------------------
                    if (((BYTE_ENABLE_A == 0) && (BYTE_ENABLE_B == 0))) 
                        begin : MIX_N_BEN
                            // ---------------------------------------------------
                            // ------ Local Parameters for EBR Optimization ------
                            // ---------------------------------------------------
                            localparam Q_FACTOR = ((DATA_WIDTH_A > DATA_WIDTH_B) ? (DATA_WIDTH_A / DATA_WIDTH_B) : (DATA_WIDTH_B / DATA_WIDTH_A)) ; 
                            localparam MAX_DATA = ((DATA_WIDTH_A > DATA_WIDTH_B) ? DATA_WIDTH_A : DATA_WIDTH_B) ; 
                            localparam MAX_PORT = ((DATA_WIDTH_A > DATA_WIDTH_B) ? "A" : "B") ; 
                            localparam MIN_DEPTH = ((MAX_PORT == "A") ? ADDR_DEPTH_A : ADDR_DEPTH_B) ; 
                            localparam PROC_MAX_DATA = procData(MAX_DATA,
                                        FAMILY_CODE) ; 
                            localparam PROC_MIN_DEPTH = (2 ** clog2(MIN_DEPTH)) ; 
                            localparam PROC_MIN_DATA = (PROC_MAX_DATA / Q_FACTOR) ; 
                            localparam PROC_MAX_DEPTH = (PROC_MIN_DEPTH * Q_FACTOR) ; 
                            localparam PORT_A_DATA_USE = ((MAX_PORT == "A") ? PROC_MAX_DATA : PROC_MIN_DATA) ; 
                            localparam PORT_A_DEPTH_USE = ((MAX_PORT == "A") ? PROC_MIN_DEPTH : PROC_MAX_DEPTH) ; 
                            localparam PORT_A_DEPTH_WIDTH = clog2(PORT_A_DEPTH_USE) ; 
                            localparam PORT_B_DATA_USE = ((MAX_PORT == "B") ? PROC_MAX_DATA : PROC_MIN_DATA) ; 
                            localparam PORT_B_DEPTH_USE = ((MAX_PORT == "B") ? PROC_MIN_DEPTH : PROC_MAX_DEPTH) ; 
                            localparam PORT_B_DEPTH_WIDTH = clog2(PORT_B_DEPTH_USE) ; 
                            localparam A_DWID_IMPL = getCASE1DataImpl(PORT_A_DEPTH_USE,
                                        PORT_A_DATA_USE,
                                        PORT_B_DEPTH_USE,
                                        PORT_B_DATA_USE,
                                        1'b1,
                                        0,
                                        FAMILY_CODE) ; 
                            localparam A_DEPTH_IMPL = data_to_addr(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam A_AWID_IMPL = clog2(A_DEPTH_IMPL) ; 
                            localparam B_DWID_IMPL = getCASE1DataImpl(PORT_A_DEPTH_USE,
                                        PORT_A_DATA_USE,
                                        PORT_B_DEPTH_USE,
                                        PORT_B_DATA_USE,
                                        1'b0,
                                        0,
                                        FAMILY_CODE) ; 
                            localparam B_DEPTH_IMPL = data_to_addr(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_AWID_IMPL = clog2(B_DEPTH_IMPL) ; 
                            localparam EBR_ADDR = roundUP(PORT_A_DEPTH_USE,
                                        A_DEPTH_IMPL) ; 
                            localparam EBR_DATA = roundUP(PORT_A_DATA_USE,
                                        A_DWID_IMPL) ; 
                            // ------ Port A address truncation ------
                            wire [(A_AWID_IMPL - 1):0] addr_a_w ; 
                            if ((A_AWID_IMPL > ADDR_WIDTH_A)) 
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):ADDR_WIDTH_A] = {(A_AWID_IMPL - ADDR_WIDTH_A){1'b0}} ; 
                                    assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                end
                            else
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):0] = addr_a_i[(A_AWID_IMPL - 1):0] ; 
                                end
                            // ------ Port B address truncation ------
                            wire [(B_AWID_IMPL - 1):0] addr_b_w ; 
                            if ((B_AWID_IMPL > ADDR_WIDTH_B)) 
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):ADDR_WIDTH_B] = {(B_AWID_IMPL - ADDR_WIDTH_B){1'b0}} ; 
                                    assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                end
                            else
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):0] = addr_b_i[(B_AWID_IMPL - 1):0] ; 
                                end
                            // ------ TOP level wiring ports ------
                            wire [(PORT_A_DATA_USE - 1):0] in_a_top_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] in_b_top_w ; 
                            wire [(PORT_A_DATA_USE - 1):0] out_a_top_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_top_w ; 
                            // ------ EBR level wiring ports ------
                            wire [(PORT_A_DATA_USE - 1):0] in_a_ebr_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] in_b_ebr_w ; 
                            wire [(PORT_A_DATA_USE - 1):0] out_a_ebr_w ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_ebr_w ; 
                            // ------ Output Port MUX ------
                            wire [(PORT_A_DATA_USE - 1):0] out_a_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            wire [(PORT_B_DATA_USE - 1):0] out_b_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            // ------------------------------------------------
                            // ------ WIRING translation from TOP to EBR ------
                            // ------------------------------------------------
                            if ((PORT_A_DATA_USE > PORT_B_DATA_USE)) 
                                begin : A_OVR_B
                                    // ------ PORT B (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    if ((PORT_B_DATA_USE > DATA_WIDTH_B)) 
                                        begin : genblk1
                                            assign in_b_top_w[(PORT_B_DATA_USE - 1):DATA_WIDTH_B] = {(PORT_B_DATA_USE - DATA_WIDTH_B){1'b0}} ; 
                                        end
                                    assign in_b_top_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_top_w[(DATA_WIDTH_B - 1):0] ; 
                                    // ------ PORT A (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(PORT_B_DATA_USE - 1):0] inp_a_buff_seg_w [((PORT_A_DATA_USE / PORT_B_DATA_USE) - 1):0] ; 
                                    wire [(PORT_B_DATA_USE - 1):0] out_a_buff_seg_w [((PORT_A_DATA_USE / PORT_B_DATA_USE) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign inp_a_buff_seg_w[i_0] = wr_data_a_i[((DATA_WIDTH_B * (i_0 + 1)) - 1):(DATA_WIDTH_B * i_0)] ; 
                                        assign rd_data_a_o[((DATA_WIDTH_B * (i_0 + 1)) - 1):(DATA_WIDTH_B * i_0)] = out_a_buff_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        assign in_a_top_w[(((i_0 * PORT_B_DATA_USE) + PORT_B_DATA_USE) - 1):(i_0 * PORT_B_DATA_USE)] = inp_a_buff_seg_w[i_0] ; 
                                        assign out_a_buff_seg_w[i_0] = out_a_top_w[(((i_0 * PORT_B_DATA_USE) + PORT_B_DATA_USE) - 1):(i_0 * PORT_B_DATA_USE)] ; 
                                    end
                                    // ------ PORT B (TOP level to EBR level splt) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    assign in_b_ebr_w = in_b_top_w ; 
                                    assign out_b_top_w = out_b_ebr_w ; 
                                    // ------ PORT A (TOP level to EBR level splt) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(B_DWID_IMPL - 1):0] in_a_ebr_seg_w [((PORT_A_DATA_USE / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_DWID_IMPL - 1):0] out_a_ebr_seg_w [((PORT_A_DATA_USE / B_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk4
                                        for (i_1 = 0;(i_1 < (PORT_A_DATA_USE / (B_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_a_ebr_seg_w[(((PORT_A_DATA_USE / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = in_a_top_w[((((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk5
                                        assign in_a_ebr_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = in_a_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / PORT_B_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk6
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_a_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_a_ebr_w[((((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_A_DATA_USE / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk7
                                        assign out_a_top_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = out_a_ebr_seg_w[i_0] ; 
                                    end
                                end
                            else
                                begin : B_OVR_A
                                    // ------ PORT A (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    if ((PORT_A_DATA_USE > DATA_WIDTH_A)) 
                                        begin : genblk1
                                            assign in_a_top_w[(PORT_A_DATA_USE - 1):DATA_WIDTH_A] = {(PORT_A_DATA_USE - DATA_WIDTH_A){1'b0}} ; 
                                        end
                                    assign in_a_top_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_top_w ; 
                                    // ------ PORT B (TOP wrapper to TOP level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(PORT_A_DATA_USE - 1):0] inp_b_buff_seg_w [((PORT_B_DATA_USE / PORT_A_DATA_USE) - 1):0] ; 
                                    wire [(PORT_A_DATA_USE - 1):0] out_b_buff_seg_w [((PORT_B_DATA_USE / PORT_A_DATA_USE) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign inp_b_buff_seg_w[i_0] = wr_data_b_i[((DATA_WIDTH_A * (i_0 + 1)) - 1):(DATA_WIDTH_A * i_0)] ; 
                                        assign rd_data_b_o[((DATA_WIDTH_A * (i_0 + 1)) - 1):(DATA_WIDTH_A * i_0)] = out_b_buff_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        assign in_b_top_w[(((i_0 * PORT_A_DATA_USE) + PORT_A_DATA_USE) - 1):(i_0 * PORT_A_DATA_USE)] = inp_b_buff_seg_w[i_0] ; 
                                        assign out_b_buff_seg_w[i_0] = out_b_top_w[(((i_0 * PORT_A_DATA_USE) + PORT_A_DATA_USE) - 1):(i_0 * PORT_A_DATA_USE)] ; 
                                    end
                                    // ------ PORT A (TOP level to EBR level splt) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    assign in_a_ebr_w = in_a_top_w ; 
                                    assign out_a_top_w = out_a_ebr_w ; 
                                    // ------ PORT B (TOP level to EBR level splt) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(A_DWID_IMPL - 1):0] in_b_ebr_seg_w [((PORT_B_DATA_USE / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_DWID_IMPL - 1):0] out_b_ebr_seg_w [((PORT_B_DATA_USE / A_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk4
                                        for (i_1 = 0;(i_1 < (PORT_B_DATA_USE / (A_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_b_ebr_seg_w[(((PORT_B_DATA_USE / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = in_b_top_w[((((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk5
                                        assign in_b_ebr_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = in_b_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / PORT_A_DATA_USE));i_0 = (i_0 + 1))
                                    begin : genblk6
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_b_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_b_ebr_w[((((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (PORT_B_DATA_USE / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk7
                                        assign out_b_top_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = out_b_ebr_seg_w[i_0] ; 
                                    end
                                end
                            // ------ Address Loop (Mixed Width no Byte-Enable) ------
                            for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                            begin : xADDR
                                // ------ PORT A output ports ------
                                wire [(PORT_A_DATA_USE - 1):0] raw_out_a_w ; 
                                assign out_a_ebr_raw_w[i0] = raw_out_a_w ; 
                                // ------ PORT A Address Control Signal ------
                                wire chk_addr_a_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk1
                                        assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):A_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk1
                                        assign chk_addr_a_w = 1'b1 ; 
                                    end
                                // ------ PORT B output ports ------
                                wire [(PORT_B_DATA_USE - 1):0] raw_out_b_w ; 
                                assign out_b_ebr_raw_w[i0] = raw_out_b_w ; 
                                // ------ PORT B Address Control Signal ------
                                wire chk_addr_b_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk2
                                        assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):B_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk2
                                        assign chk_addr_b_w = 1'b1 ; 
                                    end
                                // ------ Data Loop (Mixed Width no Byte-Enable) ------                
                                for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                                begin : xDATA
                                    localparam ECO_POSX = (i1 * A_DWID_IMPL) ; 
                                    localparam ECO_POSY = (i0 * A_DEPTH_IMPL) ; 
                                    // ------ PORT A Data Wiring ------
                                    wire [(A_DWID_IMPL - 1):0] in_a_w ; 
                                    wire [(A_DWID_IMPL - 1):0] out_a_w ; 
                                    if ((PORT_A_DATA_USE > (A_DWID_IMPL * (i1 + 1)))) 
                                        begin : genblk1
                                            assign in_a_w = in_a_ebr_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] ; 
                                            assign raw_out_a_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] = out_a_w ; 
                                        end
                                    else
                                        begin : genblk1
                                            assign in_a_w[(PORT_A_DATA_USE - (1 + (A_DWID_IMPL * i1))):0] = in_a_ebr_w[(PORT_A_DATA_USE - 1):(A_DWID_IMPL * i1)] ; 
                                            if ((A_DWID_IMPL > (PORT_A_DATA_USE - (A_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_a_w[(A_DWID_IMPL - 1):(PORT_A_DATA_USE - (A_DWID_IMPL * i1))] = {(A_DWID_IMPL - (PORT_A_DATA_USE - (A_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            assign raw_out_a_w[(PORT_A_DATA_USE - 1):(A_DWID_IMPL * i1)] = out_a_w[(PORT_A_DATA_USE - (1 + (A_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------ PORT B Data Wiring ------
                                    wire [(B_DWID_IMPL - 1):0] in_b_w ; 
                                    wire [(B_DWID_IMPL - 1):0] out_b_w ; 
                                    if ((PORT_B_DATA_USE > (B_DWID_IMPL * (i1 + 1)))) 
                                        begin : genblk2
                                            assign in_b_w = in_b_ebr_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] ; 
                                            assign raw_out_b_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] = out_b_w ; 
                                        end
                                    else
                                        begin : genblk2
                                            assign in_b_w[(PORT_B_DATA_USE - (1 + (B_DWID_IMPL * i1))):0] = in_b_ebr_w[(PORT_B_DATA_USE - 1):(B_DWID_IMPL * i1)] ; 
                                            if ((B_DWID_IMPL > (PORT_B_DATA_USE - (B_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_b_w[(B_DWID_IMPL - 1):(PORT_B_DATA_USE - (B_DWID_IMPL * i1))] = {(B_DWID_IMPL - (PORT_B_DATA_USE - (B_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            assign raw_out_b_w[(PORT_B_DATA_USE - 1):(B_DWID_IMPL * i1)] = out_b_w[(PORT_B_DATA_USE - (1 + (B_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------------------------------------
                                    // ------ SINGLE MEMORY INSTANCE ------
                                    // ------------------------------------
                                    if ((INIT_MODE == "mem_file")) 
                                        begin : mem_file
                                            eval_mem4_sim_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(0),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(0),
                                                    .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ INIT PARAMETERS ------
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(1'b1), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(1'b1), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                    else
                                        begin : no_mem_file
                                            eval_mem4_sim_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(0),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(0)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(1'b1), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(1'b1), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                end
                            end
                            if ((EBR_ADDR == 1)) 
                                begin : genblk5
                                    assign out_a_ebr_w = out_a_ebr_raw_w[0] ; 
                                    assign out_b_ebr_w = out_b_ebr_raw_w[0] ; 
                                end
                            else
                                begin : genblk5
                                    // ------ PORT A output assignment ------
                                    reg [(PORT_A_DATA_USE - 1):0] a_out_buff_r ; 
                                    reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                    assign out_a_ebr_w = a_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            a_out_buff_r = out_a_ebr_raw_w[addr_a_p_r[(ADDR_WIDTH_A - 1):A_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_A == "noreg")) 
                                        begin : genblk1
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk1
                                            reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r ; 
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                        end
                                                end
                                        end
                                    // ------ PORT B output assignment ------
                                    reg [(PORT_B_DATA_USE - 1):0] b_out_buff_r ; 
                                    reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r ; 
                                    assign out_b_ebr_w = b_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            b_out_buff_r = out_b_ebr_raw_w[addr_b_p_r[(ADDR_WIDTH_B - 1):B_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_B == "noreg")) 
                                        begin : genblk2
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk2
                                            reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r ; 
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                        end
                                                end
                                        end
                                end
                        end
                    else
                        begin : MIX_Y_BEN
                            // ---------------------------------------------------
                            // ------ Local Parameters for EBR Optimization ------
                            // ---------------------------------------------------
                            localparam A_DWID_IMPL = getCASE1DataImpl_wBEN(ADDR_DEPTH_A,
                                        DATA_WIDTH_A,
                                        ADDR_DEPTH_B,
                                        DATA_WIDTH_B,
                                        1'b1,
                                        FAMILY_CODE) ; 
                            localparam A_DEPTH_IMPL = data_to_addr(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam A_AWID_IMPL = clog2(A_DEPTH_IMPL) ; 
                            localparam A_BWID_IMPL = getImplByteWidth(A_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_DWID_IMPL = getCASE1DataImpl_wBEN(ADDR_DEPTH_A,
                                        DATA_WIDTH_A,
                                        ADDR_DEPTH_B,
                                        DATA_WIDTH_B,
                                        1'b0,
                                        FAMILY_CODE) ; 
                            localparam B_DEPTH_IMPL = data_to_addr(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam B_AWID_IMPL = clog2(B_DEPTH_IMPL) ; 
                            localparam B_BWID_IMPL = getImplByteWidth(B_DWID_IMPL,
                                        FAMILY_CODE) ; 
                            localparam EBR_ADDR = roundUP(ADDR_DEPTH_A,
                                        A_DEPTH_IMPL) ; 
                            localparam EBR_DATA = roundUP(DATA_WIDTH_A,
                                        A_DWID_IMPL) ; 
                            // ------ Port A address truncation ------
                            wire [(A_AWID_IMPL - 1):0] addr_a_w ; 
                            if ((A_AWID_IMPL > ADDR_WIDTH_A)) 
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):ADDR_WIDTH_A] = {(A_AWID_IMPL - ADDR_WIDTH_A){1'b0}} ; 
                                    assign addr_a_w[(ADDR_WIDTH_A - 1):0] = addr_a_i ; 
                                end
                            else
                                begin : genblk1
                                    assign addr_a_w[(A_AWID_IMPL - 1):0] = addr_a_i[(A_AWID_IMPL - 1):0] ; 
                                end
                            // ------ Port B address truncation ------
                            wire [(B_AWID_IMPL - 1):0] addr_b_w ; 
                            if ((B_AWID_IMPL > ADDR_WIDTH_B)) 
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):ADDR_WIDTH_B] = {(B_AWID_IMPL - ADDR_WIDTH_B){1'b0}} ; 
                                    assign addr_b_w[(ADDR_WIDTH_B - 1):0] = addr_b_i ; 
                                end
                            else
                                begin : genblk2
                                    assign addr_b_w[(B_AWID_IMPL - 1):0] = addr_b_i[(B_AWID_IMPL - 1):0] ; 
                                end
                            // ------ EBR level wiring ports ------
                            wire [(DATA_WIDTH_A - 1):0] in_a_ebr_w ; 
                            wire [(DATA_WIDTH_B - 1):0] in_b_ebr_w ; 
                            wire [(DATA_WIDTH_A - 1):0] out_a_ebr_w ; 
                            wire [(DATA_WIDTH_B - 1):0] out_b_ebr_w ; 
                            wire [(BYTE_WIDTH_A - 1):0] ben_a_ebr_w ; 
                            wire [(BYTE_WIDTH_B - 1):0] ben_b_ebr_w ; 
                            // ------ Output Port MUX ------
                            wire [(DATA_WIDTH_A - 1):0] out_a_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            wire [(DATA_WIDTH_B - 1):0] out_b_ebr_raw_w [(EBR_ADDR - 1):0] ; 
                            if ((DATA_WIDTH_A > DATA_WIDTH_B)) 
                                begin : A_OVR_B
                                    // ------ PORT B (TOP to EBR level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    assign in_b_ebr_w = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_ebr_w ; 
                                    assign ben_b_ebr_w = ben_b_i ; 
                                    // ------ PORT A (TOP to EBR level split) Wiring : (DATA_WIDTH_A > DATA_WIDTH_B) ------
                                    wire [(B_DWID_IMPL - 1):0] in_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_BWID_IMPL - 1):0] ben_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    wire [(B_DWID_IMPL - 1):0] out_a_ebr_seg_w [((DATA_WIDTH_A / B_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk1
                                        for (i_1 = 0;(i_1 < (DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_a_ebr_seg_w[(((DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = wr_data_a_i[((((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_0 * B_DWID_IMPL) + ((i_1 * EBR_DATA) * B_DWID_IMPL))] ; 
                                            assign ben_a_ebr_seg_w[(((DATA_WIDTH_A / (B_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = ben_a_i[((((i_0 * B_BWID_IMPL) + ((i_1 * EBR_DATA) * B_BWID_IMPL)) + B_BWID_IMPL) - 1):((i_0 * B_BWID_IMPL) + ((i_1 * EBR_DATA) * B_BWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign in_a_ebr_w[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = in_a_ebr_seg_w[i_0] ; 
                                        assign ben_a_ebr_w[(((i_0 * B_BWID_IMPL) + B_BWID_IMPL) - 1):(i_0 * B_BWID_IMPL)] = ben_a_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / DATA_WIDTH_B));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_a_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_a_ebr_w[((((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL)) + B_DWID_IMPL) - 1):((i_1 * A_DWID_IMPL) + (i_0 * B_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_A / B_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk4
                                        assign rd_data_a_o[(((i_0 * B_DWID_IMPL) + B_DWID_IMPL) - 1):(i_0 * B_DWID_IMPL)] = out_a_ebr_seg_w[i_0] ; 
                                    end
                                end
                            else
                                begin : B_OVR_A
                                    // ------ PORT A (TOP to EBR level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    assign in_a_ebr_w = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_ebr_w ; 
                                    assign ben_a_ebr_w = ben_a_i ; 
                                    // ------ PORT B (TOP to EBR level split) Wiring : (DATA_WIDTH_B > DATA_WIDTH_A) ------
                                    wire [(A_DWID_IMPL - 1):0] in_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_BWID_IMPL - 1):0] ben_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    wire [(A_DWID_IMPL - 1):0] out_b_ebr_seg_w [((DATA_WIDTH_B / A_DWID_IMPL) - 1):0] ; 
                                    for (i_0 = 0;(i_0 < EBR_DATA);i_0 = (i_0 + 1))
                                    begin : genblk1
                                        for (i_1 = 0;(i_1 < (DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)));i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign in_b_ebr_seg_w[(((DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = wr_data_b_i[((((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_0 * A_DWID_IMPL) + ((i_1 * EBR_DATA) * A_DWID_IMPL))] ; 
                                            assign ben_b_ebr_seg_w[(((DATA_WIDTH_B / (A_DWID_IMPL * EBR_DATA)) * i_0) + i_1)] = ben_b_i[((((i_0 * A_BWID_IMPL) + ((i_1 * EBR_DATA) * A_BWID_IMPL)) + A_BWID_IMPL) - 1):((i_0 * A_BWID_IMPL) + ((i_1 * EBR_DATA) * A_BWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk2
                                        assign in_b_ebr_w[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = in_b_ebr_seg_w[i_0] ; 
                                        assign ben_b_ebr_w[(((i_0 * A_BWID_IMPL) + A_BWID_IMPL) - 1):(i_0 * A_BWID_IMPL)] = ben_b_ebr_seg_w[i_0] ; 
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / DATA_WIDTH_A));i_0 = (i_0 + 1))
                                    begin : genblk3
                                        for (i_1 = 0;(i_1 < EBR_DATA);i_1 = (i_1 + 1))
                                        begin : genblk1
                                            assign out_b_ebr_seg_w[((i_0 * EBR_DATA) + i_1)] = out_b_ebr_w[((((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL)) + A_DWID_IMPL) - 1):((i_1 * B_DWID_IMPL) + (i_0 * A_DWID_IMPL))] ; 
                                        end
                                    end
                                    for (i_0 = 0;(i_0 < (DATA_WIDTH_B / A_DWID_IMPL));i_0 = (i_0 + 1))
                                    begin : genblk4
                                        assign rd_data_b_o[(((i_0 * A_DWID_IMPL) + A_DWID_IMPL) - 1):(i_0 * A_DWID_IMPL)] = out_b_ebr_seg_w[i_0] ; 
                                    end
                                end
                            // ------ Address Loop (Mixed Width w/ Byte-Enable) ------
                            for (i0 = 0;(i0 < EBR_ADDR);i0 = (i0 + 1))
                            begin : xADDR
                                // ------ PORT A output ports ------
                                wire [(DATA_WIDTH_A - 1):0] raw_out_a_w ; 
                                assign out_a_ebr_raw_w[i0] = raw_out_a_w ; 
                                // ------ PORT A Address Control Signal ------
                                wire chk_addr_a_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk1
                                        assign chk_addr_a_w = ((addr_a_i[(ADDR_WIDTH_A - 1):A_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk1
                                        assign chk_addr_a_w = 1'b1 ; 
                                    end
                                // ------ PORT B output ports ------
                                wire [(DATA_WIDTH_B - 1):0] raw_out_b_w ; 
                                assign out_b_ebr_raw_w[i0] = raw_out_b_w ; 
                                // ------ PORT B Address Control Signal ------
                                wire chk_addr_b_w ; 
                                if ((EBR_ADDR > 1)) 
                                    begin : genblk2
                                        assign chk_addr_b_w = ((addr_b_i[(ADDR_WIDTH_B - 1):B_AWID_IMPL] == i0) ? 1'b1 : 1'b0) ; 
                                    end
                                else
                                    begin : genblk2
                                        assign chk_addr_b_w = 1'b1 ; 
                                    end
                                // ------ Data Loop (Mixed Width w/ Byte-Enable) ------     
                                for (i1 = 0;(i1 < EBR_DATA);i1 = (i1 + 1))
                                begin : xDATA
                                    localparam ECO_POSX = (i1 * A_DWID_IMPL) ; 
                                    localparam ECO_POSY = (i0 * A_DEPTH_IMPL) ; 
                                    // ------ PORT A Data Wiring ------
                                    wire [(A_DWID_IMPL - 1):0] in_a_w ; 
                                    wire [(A_BWID_IMPL - 1):0] ben_a_w ; 
                                    wire [(A_DWID_IMPL - 1):0] out_a_w ; 
                                    if (((A_DWID_IMPL * (i1 + 1)) < DATA_WIDTH_A)) 
                                        begin : genblk1
                                            assign in_a_w = in_a_ebr_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] ; 
                                            assign raw_out_a_w[((A_DWID_IMPL * (i1 + 1)) - 1):(A_DWID_IMPL * i1)] = out_a_w ; 
                                            assign ben_a_w = ((BYTE_ENABLE_A == 1) ? ben_a_ebr_w[((A_BWID_IMPL * (i1 + 1)) - 1):(A_BWID_IMPL * i1)] : {A_BWID_IMPL{1'b1}}) ; 
                                        end
                                    else
                                        begin : genblk1
                                            assign in_a_w[(DATA_WIDTH_A - (1 + (A_DWID_IMPL * i1))):0] = in_a_ebr_w[(DATA_WIDTH_A - 1):(A_DWID_IMPL * i1)] ; 
                                            if ((A_DWID_IMPL > (DATA_WIDTH_A - (A_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_a_w[(A_DWID_IMPL - 1):(DATA_WIDTH_A - (A_DWID_IMPL * i1))] = {(A_DWID_IMPL - (DATA_WIDTH_A - (A_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            if ((BYTE_ENABLE_A == 1)) 
                                                begin : genblk2
                                                    assign ben_a_w[(BYTE_WIDTH_A - (1 + (A_BWID_IMPL * i1))):0] = ben_a_ebr_w[(BYTE_WIDTH_A - 1):(A_BWID_IMPL * i1)] ; 
                                                    if ((A_BWID_IMPL > (BYTE_WIDTH_A - (A_BWID_IMPL * i1)))) 
                                                        begin : genblk1
                                                            assign ben_a_w[(A_BWID_IMPL - 1):(BYTE_WIDTH_A - (A_BWID_IMPL * i1))] = {(A_BWID_IMPL - (BYTE_WIDTH_A - (A_BWID_IMPL * i1))){1'b1}} ; 
                                                        end
                                                end
                                            else
                                                begin : genblk2
                                                    assign ben_a_w = {A_BWID_IMPL{1'b1}} ; 
                                                end
                                            assign raw_out_a_w[(DATA_WIDTH_A - 1):(A_DWID_IMPL * i1)] = out_a_w[(DATA_WIDTH_A - (1 + (A_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------ PORT B Data Wiring ------
                                    wire [(B_DWID_IMPL - 1):0] in_b_w ; 
                                    wire [(B_BWID_IMPL - 1):0] ben_b_w ; 
                                    wire [(B_DWID_IMPL - 1):0] out_b_w ; 
                                    if (((B_DWID_IMPL * (i1 + 1)) < DATA_WIDTH_B)) 
                                        begin : genblk2
                                            assign in_b_w = in_b_ebr_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] ; 
                                            assign raw_out_b_w[((B_DWID_IMPL * (i1 + 1)) - 1):(B_DWID_IMPL * i1)] = out_b_w ; 
                                            assign ben_b_w = ((BYTE_ENABLE_B == 1) ? ben_b_ebr_w[((B_BWID_IMPL * (i1 + 1)) - 1):(B_BWID_IMPL * i1)] : {B_BWID_IMPL{1'b1}}) ; 
                                        end
                                    else
                                        begin : genblk2
                                            assign in_b_w[(DATA_WIDTH_B - (1 + (B_DWID_IMPL * i1))):0] = in_b_ebr_w[(DATA_WIDTH_B - 1):(B_DWID_IMPL * i1)] ; 
                                            if ((B_DWID_IMPL > (DATA_WIDTH_B - (B_DWID_IMPL * i1)))) 
                                                begin : genblk1
                                                    assign in_b_w[(B_DWID_IMPL - 1):(DATA_WIDTH_B - (B_DWID_IMPL * i1))] = {(B_DWID_IMPL - (DATA_WIDTH_B - (B_DWID_IMPL * i1))){1'b0}} ; 
                                                end
                                            if ((BYTE_ENABLE_B == 1)) 
                                                begin : genblk2
                                                    assign ben_b_w[(BYTE_WIDTH_B - (1 + (B_BWID_IMPL * i1))):0] = ben_b_ebr_w[(BYTE_WIDTH_B - 1):(B_BWID_IMPL * i1)] ; 
                                                    if ((B_BWID_IMPL > (DATA_WIDTH_B - (B_BWID_IMPL * i1)))) 
                                                        begin : genblk1
                                                            assign ben_b_w[(B_BWID_IMPL - 1):(BYTE_WIDTH_B - (B_BWID_IMPL * i1))] = {(B_BWID_IMPL - (BYTE_WIDTH_B - (B_BWID_IMPL * i1))){1'b1}} ; 
                                                        end
                                                end
                                            else
                                                begin : genblk2
                                                    assign ben_b_w = {B_BWID_IMPL{1'b1}} ; 
                                                end
                                            assign raw_out_b_w[(DATA_WIDTH_B - 1):(B_DWID_IMPL * i1)] = out_b_w[(DATA_WIDTH_B - (1 + (B_DWID_IMPL * i1))):0] ; 
                                        end
                                    // ------------------------------------
                                    // ------ SINGLE MEMORY INSTANCE ------
                                    // ------------------------------------
                                    if ((INIT_MODE == "mem_file")) 
                                        begin : mem_file
                                            eval_mem4_sim_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                    .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                    .BYTE_EN_POL_B(BYTE_EN_POL_B),
                                                    .INITVAL_00(INIT_VALUE_00[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_01(INIT_VALUE_01[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_02(INIT_VALUE_02[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_03(INIT_VALUE_03[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_04(INIT_VALUE_04[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_05(INIT_VALUE_05[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_06(INIT_VALUE_06[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_07(INIT_VALUE_07[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_08(INIT_VALUE_08[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_09(INIT_VALUE_09[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0A(INIT_VALUE_0A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0B(INIT_VALUE_0B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0C(INIT_VALUE_0C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0D(INIT_VALUE_0D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0E(INIT_VALUE_0E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_0F(INIT_VALUE_0F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)]),
                                                    .INITVAL_10(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_10[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_11(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_11[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_12(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_12[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_13(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_13[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_14(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_14[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_15(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_15[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_16(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_16[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_17(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_17[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_18(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_18[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_19(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_19[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_1F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_1F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_20(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_20[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_21(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_21[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_22(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_22[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_23(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_23[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_24(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_24[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_25(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_25[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_26(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_26[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_27(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_27[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_28(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_28[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_29(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_29[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_2F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_2F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_30(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_30[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_31(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_31[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_32(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_32[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_33(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_33[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_34(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_34[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_35(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_35[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_36(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_36[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_37(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_37[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_38(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_38[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_39(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_39[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3A(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3B(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3C(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3D(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3E(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_3F(((checkINIT(FAMILY_CODE) >= 1) ? INIT_VALUE_3F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_40(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_40[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_41(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_41[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_42(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_42[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_43(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_43[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_44(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_44[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_45(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_45[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_46(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_46[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_47(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_47[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_48(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_48[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_49(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_49[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_4F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_4F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_50(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_50[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_51(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_51[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_52(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_52[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_53(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_53[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_54(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_54[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_55(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_55[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_56(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_56[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_57(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_57[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_58(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_58[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_59(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_59[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_5F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_5F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_60(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_60[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_61(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_61[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_62(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_62[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_63(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_63[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_64(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_64[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_65(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_65[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_66(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_66[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_67(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_67[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_68(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_68[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_69(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_69[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_6F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_6F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_70(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_70[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_71(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_71[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_72(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_72[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_73(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_73[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_74(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_74[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_75(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_75[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_76(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_76[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_77(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_77[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_78(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_78[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_79(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_79[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7A(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7A[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7B(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7B[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7C(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7C[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7D(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7D[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7E(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7E[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00")),
                                                    .INITVAL_7F(((checkINIT(FAMILY_CODE) >= 2) ? INIT_VALUE_7F[((((((i0 * EBR_DATA) + i1) + 1) * STRING_LENGTH) * 8) - 1):((((i0 * EBR_DATA) + i1) * STRING_LENGTH) * 8)] : "0x00"))) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ INIT PARAMETERS ------
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(ben_a_w), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(ben_b_w), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                    else
                                        begin : no_mem_file
                                            eval_mem4_sim_ipgen_lscc_ram_dp_true_core #(._FCODE_LIFCL_(_FCODE_LIFCL_),
                                                    ._FCODE_AP6_(_FCODE_AP6_),
                                                    ._FCODE_COMMON_(_FCODE_COMMON_),
                                                    .FAMILY(FAMILY),
                                                    .INIT_MODE(INIT_MODE),
                                                    .MEM_SIZE(MEM_SIZE),
                                                    .MEM_ID(MEM_ID),
                                                    .POSx(ECO_POSX),
                                                    .POSy(ECO_POSY),
                                                    .DATA_WIDTH_A(A_DWID_IMPL),
                                                    .REGMODE_A(REGMODE_A),
                                                    .RESETMODE_A(RESETMODE_A),
                                                    .RESET_RELEASE_A(RESET_RELEASE_A),
                                                    .BYTE_ENABLE_A(BYTE_ENABLE_A),
                                                    .BYTE_EN_POL_A(BYTE_EN_POL_A),
                                                    .DATA_WIDTH_B(B_DWID_IMPL),
                                                    .REGMODE_B(REGMODE_B),
                                                    .RESETMODE_B(RESETMODE_B),
                                                    .RESET_RELEASE_B(RESET_RELEASE_B),
                                                    .BYTE_ENABLE_B(BYTE_ENABLE_B),
                                                    .BYTE_EN_POL_B(BYTE_EN_POL_B)) u_mem0 (// ------ COMMON PARAMETERS ------
                                                    // ------ PORT A PARAMETERS ------
                                                    // ------ PORT B PARAMETERS ------                        
                                                    // ------ PORT A signals ------
                                                    .clk_a_i(clk_a_i), 
                                                        .clk_en_a_i(clk_en_a_i), 
                                                        .rst_a_i(rst_a_i), 
                                                        .wr_en_a_i((wr_en_a_i & chk_addr_a_w)), 
                                                        .ben_a_i(ben_a_w), 
                                                        .addr_a_i(addr_a_w), 
                                                        .wr_data_a_i(in_a_w), 
                                                        .rd_data_a_o(out_a_w), 
                                                        // ------ PORT B signals ------
                                                    .clk_b_i(clk_b_i), 
                                                        .clk_en_b_i(clk_en_b_i), 
                                                        .rst_b_i(rst_b_i), 
                                                        .wr_en_b_i((wr_en_b_i & chk_addr_b_w)), 
                                                        .ben_b_i(ben_b_w), 
                                                        .addr_b_i(addr_b_w), 
                                                        .wr_data_b_i(in_b_w), 
                                                        .rd_data_b_o(out_b_w)) ; 
                                        end
                                end
                            end
                            if ((EBR_ADDR == 1)) 
                                begin : genblk5
                                    assign out_a_ebr_w = out_a_ebr_raw_w[0] ; 
                                    assign out_b_ebr_w = out_b_ebr_raw_w[0] ; 
                                end
                            else
                                begin : genblk5
                                    // ------ PORT A output assignment ------
                                    reg [(DATA_WIDTH_A - 1):0] a_out_buff_r ; 
                                    reg [(ADDR_WIDTH_A - 1):0] addr_a_p_r ; 
                                    assign out_a_ebr_w = a_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            a_out_buff_r = out_a_ebr_raw_w[addr_a_p_r[(ADDR_WIDTH_A - 1):A_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_A == "noreg")) 
                                        begin : genblk1
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p_r <=  addr_a_i ;
                                                                end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk1
                                            reg [(ADDR_WIDTH_A - 1):0] addr_a_p2_r = {ADDR_WIDTH_A{1'b0}} ; 
                                            if ((RESETMODE_A == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_a_i or 
                                                            posedge rst_a_i)
                                                        begin
                                                            if (rst_a_i) 
                                                                begin
                                                                    addr_a_p2_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                    addr_a_p_r <=  {ADDR_WIDTH_A{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_a_p2_r <=  addr_a_i ;
                                                                    addr_a_p_r <=  addr_a_p2_r ;
                                                                end
                                                        end
                                                end
                                        end
                                    // ------ PORT B output assignment ------
                                    reg [(DATA_WIDTH_B - 1):0] b_out_buff_r = {DATA_WIDTH_B{1'b0}} ; 
                                    reg [(ADDR_WIDTH_B - 1):0] addr_b_p_r = {ADDR_WIDTH_B{1'b0}} ; 
                                    assign out_b_ebr_w = b_out_buff_r ; 
                                    always
                                        @(*)
                                        begin
                                            b_out_buff_r = out_b_ebr_raw_w[addr_b_p_r[(ADDR_WIDTH_B - 1):B_AWID_IMPL]] ;
                                        end
                                    if ((REGMODE_B == "noreg")) 
                                        begin : genblk2
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p_r <=  addr_b_i ;
                                                                end
                                                        end
                                                end
                                        end
                                    else
                                        begin : genblk2
                                            reg [(ADDR_WIDTH_B - 1):0] addr_b_p2_r = {ADDR_WIDTH_B{1'b0}} ; 
                                            if ((RESETMODE_B == "sync")) 
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                        end
                                                end
                                            else
                                                begin : genblk1
                                                    always
                                                        @(posedge clk_b_i or 
                                                            posedge rst_b_i)
                                                        begin
                                                            if (rst_b_i) 
                                                                begin
                                                                    addr_b_p2_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                    addr_b_p_r <=  {ADDR_WIDTH_B{1'b0}} ;
                                                                end
                                                            else
                                                                begin
                                                                    addr_b_p2_r <=  addr_b_i ;
                                                                    addr_b_p_r <=  addr_b_p2_r ;
                                                                end
                                                        end
                                                end
                                        end
                                end
                        end
            end
    endgenerate
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [1:0] checkINIT ; 
        input [31:0] val ; 
        begin
            case (val)
            _FCODE_LIFCL_ : 
                checkINIT = 1 ;
            _FCODE_AP6_ : 
                checkINIT = 2 ;
            default : 
                checkINIT = 0 ;
            endcase 
        end
    endfunction
    function [31:0] getImplByteWidth ; 
        input [31:0] dwid ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (dwid)
                    18 : 
                        getImplByteWidth = 2 ;
                    16 : 
                        getImplByteWidth = 2 ;
                    9 : 
                        getImplByteWidth = 1 ;
                    default : 
                        getImplByteWidth = 1 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (dwid)
                    36 : 
                        getImplByteWidth = 4 ;
                    32 : 
                        getImplByteWidth = 4 ;
                    18 : 
                        getImplByteWidth = 2 ;
                    16 : 
                        getImplByteWidth = 2 ;
                    9 : 
                        getImplByteWidth = 1 ;
                    default : 
                        getImplByteWidth = 1 ;
                    endcase 
                end
            default : 
                getImplByteWidth = 1 ;
            endcase 
        end
    endfunction
    function [31:0] getDatabase ; 
        input [31:0] base_count ; 
        input [31:0] index ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (base_count)
                    9 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 9 ;
                            default : 
                                getDatabase = 18 ;
                            endcase 
                        end
                    8 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 1 ;
                            1 : 
                                getDatabase = 2 ;
                            2 : 
                                getDatabase = 4 ;
                            3 : 
                                getDatabase = 8 ;
                            default : 
                                getDatabase = 16 ;
                            endcase 
                        end
                    default : 
                        getDatabase = 16 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (base_count)
                    9 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 9 ;
                            1 : 
                                getDatabase = 18 ;
                            default : 
                                getDatabase = 36 ;
                            endcase 
                        end
                    8 : 
                        begin
                            case (index)
                            0 : 
                                getDatabase = 1 ;
                            1 : 
                                getDatabase = 2 ;
                            2 : 
                                getDatabase = 4 ;
                            3 : 
                                getDatabase = 8 ;
                            4 : 
                                getDatabase = 16 ;
                            default : 
                                getDatabase = 32 ;
                            endcase 
                        end
                    default : 
                        getDatabase = 16 ;
                    endcase 
                end
            default : 
                getDatabase = base_count ;
            endcase 
        end
    endfunction
    function [31:0] getCASE1DataImpl_wBEN ; 
        input [31:0] addr_a_depth ; 
        input [31:0] data_a_width ; 
        input [31:0] addr_b_depth ; 
        input [31:0] data_b_width ; 
        input is_taking_port_a ; 
        input [31:0] family_code ; 
        reg [31:0] max_width, 
            min_width, 
            byte_size ; 
        reg [31:0] temp_00, 
            temp_01, 
            upper_factor, 
            lower_factor ; 
        reg [31:0] wr_addr_chk, 
            wr_data_chk, 
            rd_addr_chk, 
            rd_data_chk, 
            wr_data_div, 
            rd_data_div ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    if ((data_a_width > data_b_width)) 
                        begin
                            if (is_taking_port_a) 
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 18 ;
                                    else
                                        getCASE1DataImpl_wBEN = 16 ;
                                end
                            else
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 9 ;
                                    else
                                        getCASE1DataImpl_wBEN = 8 ;
                                end
                        end
                    else
                        begin
                            if (is_taking_port_a) 
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 9 ;
                                    else
                                        getCASE1DataImpl_wBEN = 8 ;
                                end
                            else
                                begin
                                    if (((data_a_width % 9) == 0)) 
                                        getCASE1DataImpl_wBEN = 18 ;
                                    else
                                        getCASE1DataImpl_wBEN = 16 ;
                                end
                        end
                end
            _FCODE_AP6_ : 
                begin
                    max_width = ((data_a_width > data_b_width) ? data_a_width : data_b_width) ;
                    min_width = ((data_a_width < data_b_width) ? data_a_width : data_b_width) ;
                    byte_size = (((max_width % 9) == 0) ? 9 : 8) ;
                    if (((max_width / min_width) == 4)) 
                        begin
                            if ((data_a_width > data_b_width)) 
                                begin
                                    if ((is_taking_port_a == 1)) 
                                        getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                    else
                                        getCASE1DataImpl_wBEN = byte_size ;
                                end
                            else
                                begin
                                    if ((is_taking_port_a == 1)) 
                                        getCASE1DataImpl_wBEN = byte_size ;
                                    else
                                        getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                end
                        end
                    else
                        begin
                            if ((data_a_width > data_b_width)) 
                                begin
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(36,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 36 : 32) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_00 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_00 = 32'hffffffff ;
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(9,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 9 : 8) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_01 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_01 = 32'hffffffff ;
                                    if ((temp_00 < temp_01)) 
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                        end
                                    else
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = byte_size ;
                                        end
                                end
                            else
                                begin
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(36,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 36 : 32) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_00 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_00 = 32'hffffffff ;
                                    wr_addr_chk = roundUP(addr_a_depth,
                                            data_to_addr(9,
                                                family_code)) ;
                                    wr_data_div = ((byte_size == 9) ? 9 : 8) ;
                                    wr_data_chk = roundUP(data_a_width,
                                            wr_data_div) ;
                                    rd_addr_chk = roundUP(addr_b_depth,
                                            data_to_addr(18,
                                                family_code)) ;
                                    rd_data_div = ((byte_size == 9) ? 18 : 16) ;
                                    rd_data_chk = roundUP(data_b_width,
                                            rd_data_div) ;
                                    if (((((wr_addr_chk == rd_addr_chk) && (wr_data_chk == rd_data_chk)) && ((data_a_width % wr_data_div) == 0)) && ((data_b_width % rd_data_div) == 0))) 
                                        temp_01 = (wr_addr_chk * wr_data_chk) ;
                                    else
                                        temp_01 = 32'hffffffff ;
                                    if ((temp_00 < temp_01)) 
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                            else
                                                getCASE1DataImpl_wBEN = (4 * byte_size) ;
                                        end
                                    else
                                        begin
                                            if ((is_taking_port_a == 1)) 
                                                getCASE1DataImpl_wBEN = byte_size ;
                                            else
                                                getCASE1DataImpl_wBEN = (2 * byte_size) ;
                                        end
                                end
                        end
                end
            default : 
                getCASE1DataImpl_wBEN = 8 ;
            endcase 
        end
    endfunction
    function [31:0] getCASE1DataImpl ; 
        input [31:0] addr_a_depth ; 
        input [31:0] data_a_width ; 
        input [31:0] addr_b_depth ; 
        input [31:0] data_b_width ; 
        input is_taking_port_a ; 
        input is_taking_total_ebr ; 
        input [31:0] family_code ; 
        reg [5:0] num0, 
            num1, 
            limit ; 
        reg [31:0] divisor, 
            addr_div_prtA, 
            data_div_prtA, 
            addr_div_prtB, 
            data_div_prtB ; 
        reg [31:0] portA_addr_chk, 
            portA_data_chk, 
            portB_addr_chk, 
            portB_data_chk ; 
        reg [31:0] EBR_usage, 
            PROD ; 
        begin
            divisor = ((addr_a_depth > addr_b_depth) ? (addr_a_depth / addr_b_depth) : (addr_b_depth / addr_a_depth)) ;
            EBR_usage = {32{1'b1}} ;
            getCASE1DataImpl = 0 ;
            if ((((family_code == _FCODE_LIFCL_) && (divisor <= 2)) || ((family_code == _FCODE_AP6_) && (divisor <= 4)))) 
                begin
                    limit = ((family_code == _FCODE_LIFCL_) ? 2 : 3) ;
                    for (num0 = 0 ; (num0 < limit) ; num0 = (num0 + 1))
                        begin
                            data_div_prtA = getDatabase(9,
                                    num0,
                                    family_code) ;
                            addr_div_prtA = data_to_addr(data_div_prtA,
                                    family_code) ;
                            portA_addr_chk = roundUP(addr_a_depth,
                                    addr_div_prtA) ;
                            portA_data_chk = roundUP(data_a_width,
                                    data_div_prtA) ;
                            for (num1 = 0 ; (num1 < limit) ; num1 = (num1 + 1))
                                begin
                                    data_div_prtB = getDatabase(9,
                                            num1,
                                            family_code) ;
                                    addr_div_prtB = data_to_addr(data_div_prtB,
                                            family_code) ;
                                    portB_addr_chk = roundUP(addr_b_depth,
                                            addr_div_prtB) ;
                                    portB_data_chk = roundUP(data_b_width,
                                            data_div_prtB) ;
                                    if (((portA_addr_chk == portB_addr_chk) && (portA_data_chk == portB_data_chk))) 
                                        begin
                                            if ((((data_a_width % data_div_prtA) == 0) && ((data_b_width % data_div_prtB) == 0))) 
                                                begin
                                                    PROD = (portA_addr_chk * portA_data_chk) ;
                                                    if ((PROD < EBR_usage)) 
                                                        begin
                                                            EBR_usage = PROD ;
                                                            if ((is_taking_total_ebr == 1'b1)) 
                                                                getCASE1DataImpl = EBR_usage ;
                                                            else
                                                                if ((is_taking_port_a == 1'b1)) 
                                                                    getCASE1DataImpl = data_div_prtA ;
                                                                else
                                                                    getCASE1DataImpl = data_div_prtB ;
                                                        end
                                                end
                                        end
                                end
                        end
                end
            limit = ((family_code == _FCODE_LIFCL_) ? 5 : 6) ;
            for (num0 = 0 ; (num0 < limit) ; num0 = (num0 + 1))
                begin
                    data_div_prtA = getDatabase(8,
                            num0,
                            family_code) ;
                    addr_div_prtA = data_to_addr(data_div_prtA,
                            family_code) ;
                    portA_addr_chk = roundUP(addr_a_depth,
                            addr_div_prtA) ;
                    portA_data_chk = roundUP(data_a_width,
                            data_div_prtA) ;
                    for (num1 = 0 ; (num1 < limit) ; num1 = (num1 + 1))
                        begin
                            data_div_prtB = getDatabase(8,
                                    num1,
                                    family_code) ;
                            addr_div_prtB = data_to_addr(data_div_prtB,
                                    family_code) ;
                            portB_addr_chk = roundUP(addr_b_depth,
                                    addr_div_prtB) ;
                            portB_data_chk = roundUP(data_b_width,
                                    data_div_prtB) ;
                            if (((portA_addr_chk == portB_addr_chk) && (portA_data_chk == portB_data_chk))) 
                                begin
                                    if ((((data_a_width % data_div_prtA) == 0) && ((data_b_width % data_div_prtB) == 0))) 
                                        begin
                                            PROD = (portA_addr_chk * portA_data_chk) ;
                                            if ((PROD < EBR_usage)) 
                                                begin
                                                    EBR_usage = PROD ;
                                                    if ((is_taking_total_ebr == 1'b1)) 
                                                        getCASE1DataImpl = EBR_usage ;
                                                    else
                                                        if ((is_taking_port_a == 1'b1)) 
                                                            getCASE1DataImpl = data_div_prtA ;
                                                        else
                                                            getCASE1DataImpl = data_div_prtB ;
                                                end
                                        end
                                end
                        end
                end
        end
    endfunction
    function [31:0] procData ; 
        input [31:0] max_data ; 
        input [31:0] family_code ; 
        begin
            procData = 1 ;
            while ((procData < max_data))
                begin
                    case (family_code)
                    _FCODE_LIFCL_,
                            _FCODE_AP6_ : 
                        begin
                            if ((procData < 8)) 
                                begin
                                    procData = (procData * 2) ;
                                end
                            else
                                begin
                                    if ((procData == 8)) 
                                        begin
                                            procData = 9 ;
                                        end
                                    else
                                        if (((procData % 9) == 0)) 
                                            begin
                                                procData = ((procData / 9) * 16) ;
                                            end
                                        else
                                            begin
                                                procData = ((procData / 8) * 9) ;
                                            end
                                end
                        end
                    default : 
                        procData = max_data ;
                    endcase 
                end
        end
    endfunction
    function [31:0] data_to_addr ; 
        input [31:0] data_size ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (data_size)
                    18 : 
                        data_to_addr = 1024 ;
                    16 : 
                        data_to_addr = 1024 ;
                    9 : 
                        data_to_addr = 2048 ;
                    8 : 
                        data_to_addr = 2048 ;
                    4 : 
                        data_to_addr = 4096 ;
                    2 : 
                        data_to_addr = 8192 ;
                    default : 
                        data_to_addr = 16384 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (data_size)
                    36 : 
                        data_to_addr = 1024 ;
                    32 : 
                        data_to_addr = 1024 ;
                    18 : 
                        data_to_addr = 2048 ;
                    16 : 
                        data_to_addr = 2048 ;
                    9 : 
                        data_to_addr = 4096 ;
                    8 : 
                        data_to_addr = 4096 ;
                    4 : 
                        data_to_addr = 8192 ;
                    2 : 
                        data_to_addr = 16384 ;
                    default : 
                        data_to_addr = 32768 ;
                    endcase 
                end
            default : 
                data_to_addr = 1024 ;
            endcase 
        end
    endfunction
    function [31:0] getMinimaData ; 
        input [31:0] depth_impl ; 
        input [31:0] width_impl ; 
        input is_byte_en ; 
        input [31:0] byte_size ; 
        input [31:0] family_code ; 
        reg [31:0] temp_00, 
            temp_01, 
            temp_02, 
            temp_03, 
            temp_04, 
            temp_05 ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    temp_00 = EBR_impl(depth_impl,
                            width_impl,
                            1024,
                            18) ;
                    temp_01 = EBR_impl(depth_impl,
                            width_impl,
                            2048,
                            9) ;
                    temp_02 = EBR_impl(depth_impl,
                            width_impl,
                            4096,
                            4) ;
                    temp_03 = EBR_impl(depth_impl,
                            width_impl,
                            8192,
                            2) ;
                    temp_04 = EBR_impl(depth_impl,
                            width_impl,
                            16384,
                            1) ;
                    if (((is_byte_en == 1) && ((width_impl % 9) != 0))) 
                        begin
                            temp_00 = EBR_impl(depth_impl,
                                    width_impl,
                                    1024,
                                    16) ;
                            temp_01 = EBR_impl(depth_impl,
                                    width_impl,
                                    2048,
                                    8) ;
                            if (((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04))) 
                                getMinimaData = 16 ;
                            else
                                if ((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04))) 
                                    getMinimaData = 8 ;
                                else
                                    if (((temp_02 < temp_03) && (temp_02 < temp_04))) 
                                        getMinimaData = 4 ;
                                    else
                                        if ((temp_03 < temp_04)) 
                                            getMinimaData = 2 ;
                                        else
                                            getMinimaData = 1 ;
                        end
                    else
                        begin
                            if (((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04))) 
                                getMinimaData = 18 ;
                            else
                                if ((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04))) 
                                    getMinimaData = 9 ;
                                else
                                    if (((temp_02 < temp_03) && (temp_02 < temp_04))) 
                                        getMinimaData = 4 ;
                                    else
                                        if ((temp_03 < temp_04)) 
                                            getMinimaData = 2 ;
                                        else
                                            getMinimaData = 1 ;
                        end
                end
            _FCODE_AP6_ : 
                begin
                    temp_00 = EBR_impl(depth_impl,
                            width_impl,
                            1024,
                            36) ;
                    temp_01 = EBR_impl(depth_impl,
                            width_impl,
                            2048,
                            18) ;
                    temp_02 = EBR_impl(depth_impl,
                            width_impl,
                            4096,
                            9) ;
                    temp_03 = EBR_impl(depth_impl,
                            width_impl,
                            8192,
                            4) ;
                    temp_04 = EBR_impl(depth_impl,
                            width_impl,
                            16384,
                            2) ;
                    temp_05 = EBR_impl(depth_impl,
                            width_impl,
                            32768,
                            1) ;
                    if (((is_byte_en == 1) && ((width_impl % 9) != 0))) 
                        begin
                            temp_00 = EBR_impl(depth_impl,
                                    width_impl,
                                    1024,
                                    32) ;
                            temp_01 = EBR_impl(depth_impl,
                                    width_impl,
                                    2048,
                                    16) ;
                            temp_02 = EBR_impl(depth_impl,
                                    width_impl,
                                    4096,
                                    8) ;
                            if ((((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04)) && (temp_00 < temp_05))) 
                                getMinimaData = 32 ;
                            else
                                if (((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04)) && (temp_01 < temp_05))) 
                                    getMinimaData = 16 ;
                                else
                                    if ((((temp_02 < temp_03) && (temp_02 < temp_04)) && (temp_02 < temp_05))) 
                                        getMinimaData = 8 ;
                                    else
                                        if (((temp_03 < temp_04) && (temp_03 < temp_05))) 
                                            getMinimaData = 4 ;
                                        else
                                            if ((temp_04 < temp_05)) 
                                                getMinimaData = 2 ;
                                            else
                                                getMinimaData = 1 ;
                        end
                    else
                        begin
                            if ((((((temp_00 < temp_01) && (temp_00 < temp_02)) && (temp_00 < temp_03)) && (temp_00 < temp_04)) && (temp_00 < temp_05))) 
                                getMinimaData = 36 ;
                            else
                                if (((((temp_01 < temp_02) && (temp_01 < temp_03)) && (temp_01 < temp_04)) && (temp_01 < temp_05))) 
                                    getMinimaData = 18 ;
                                else
                                    if ((((temp_02 < temp_03) && (temp_02 < temp_04)) && (temp_02 < temp_05))) 
                                        getMinimaData = 9 ;
                                    else
                                        if (((temp_03 < temp_04) && (temp_03 < temp_05))) 
                                            getMinimaData = 4 ;
                                        else
                                            if ((temp_04 < temp_05)) 
                                                getMinimaData = 2 ;
                                            else
                                                getMinimaData = 1 ;
                        end
                end
            default : 
                getMinimaData = 8 ;
            endcase 
        end
    endfunction
    function [31:0] getByteSize ; 
        input [31:0] data_width ; 
        input [31:0] dev_code ; 
        begin
            case (dev_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((data_width % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
    function [31:0] EBR_impl ; 
        input [31:0] DEPTH_IMPL ; 
        input [31:0] WIDTH_IMPL ; 
        input [31:0] ADDR_DEPTH_X ; 
        input [31:0] DATA_WIDTH_X ; 
        begin
            EBR_impl = (roundUP(DEPTH_IMPL,
                    ADDR_DEPTH_X) * roundUP(WIDTH_IMPL,
                    DATA_WIDTH_X)) ;
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] clog2 ; 
        input [31:0] value ; 
        reg [31:0] num ; 
        begin
            num = (value - 1) ;
            for (clog2 = 0 ; (num > 0) ; clog2 = (clog2 + 1))
                num = (num >> 1) ;
        end
    endfunction
endmodule



// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2017 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : Radiant Software 1.1
// File                  : lscc_ram_dp_true_core.v
// Title                 :
// Dependencies          :
// Description           : Implements a single true dual port EBR primitive.
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0.
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module eval_mem4_sim_ipgen_lscc_ram_dp_true_core #(parameter _FCODE_LIFCL_ = 1, 
        parameter _FCODE_AP6_ = 2, 
        parameter _FCODE_COMMON_ = 0, 
        parameter FAMILY = "common", 
        parameter MEM_ID = "MEM0", 
        parameter MEM_SIZE = "18,1024", 
        parameter FAMILY_CODE = ((FAMILY == "LIFCL") ? _FCODE_LIFCL_ : ((FAMILY == "LATG1") ? _FCODE_AP6_ : ((FAMILY == "LAV-AT") ? _FCODE_AP6_ : _FCODE_COMMON_))), 
        parameter DATA_WIDTH_A = 18, 
        parameter ADDR_WIDTH_A = getAddrWidth(DATA_WIDTH_A,
                FAMILY_CODE), 
        parameter REGMODE_A = "reg", 
        parameter RESETMODE_A = "sync", 
        parameter RESET_RELEASE_A = "sync", 
        parameter BYTE_ENABLE_A = 0, 
        parameter BYTE_SIZE_A = getByteSize(FAMILY_CODE,
                DATA_WIDTH_A), 
        parameter BYTE_WIDTH_A = ((BYTE_ENABLE_A == 0) ? 1 : roundUP(DATA_WIDTH_A,
                BYTE_SIZE_A)), 
        parameter BYTE_EN_POL_A = "active-high", 
        parameter DATA_WIDTH_B = 18, 
        parameter ADDR_WIDTH_B = getAddrWidth(DATA_WIDTH_B,
                FAMILY_CODE), 
        parameter REGMODE_B = "reg", 
        parameter RESETMODE_B = "sync", 
        parameter RESET_RELEASE_B = "sync", 
        parameter BYTE_ENABLE_B = 0, 
        parameter BYTE_SIZE_B = getByteSize(FAMILY_CODE,
                DATA_WIDTH_B), 
        parameter BYTE_WIDTH_B = ((BYTE_ENABLE_B == 0) ? 1 : roundUP(DATA_WIDTH_B,
                BYTE_SIZE_B)), 
        parameter BYTE_EN_POL_B = "active-high", 
        parameter POSx = 0, 
        parameter POSy = 0, 
        parameter STRING_SIZE = calculateStringSize(POSx,
                POSy), 
        parameter INIT_MODE = "none", 
        parameter INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_20 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_21 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_22 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_23 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_24 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_25 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_26 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_27 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_28 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_29 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_2F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_30 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_31 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_32 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_33 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_34 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_35 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_36 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_37 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_38 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_39 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_3F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_40 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_41 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_42 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_43 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_44 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_45 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_46 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_47 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_48 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_49 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_4F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_50 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_51 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_52 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_53 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_54 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_55 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_56 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_57 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_58 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_59 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_5F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_60 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_61 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_62 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_63 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_64 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_65 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_66 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_67 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_68 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_69 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_6F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_70 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_71 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_72 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_73 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_74 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_75 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_76 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_77 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_78 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_79 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000", 
        parameter INITVAL_7F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000") (
    // ---------------------------
    // --------- Family parameters
    // ---------------------------
    // ---------------------------
    // --------- PORT A parameters
    // ---------------------------
    // ---------------------------
    // --------- PORT B parameters
    // ---------------------------
    // ---------------------------
    // --------- Common parameters
    // ---------------------------
    // ---------------------------
    // - PORT A input/output ports
    // ---------------------------
    input clk_a_i, 
    input clk_en_a_i, 
    input rst_a_i, 
    input wr_en_a_i, 
    input [(BYTE_WIDTH_A - 1):0] ben_a_i, 
    input [(ADDR_WIDTH_A - 1):0] addr_a_i, 
    input [(DATA_WIDTH_A - 1):0] wr_data_a_i, 
    output [(DATA_WIDTH_A - 1):0] rd_data_a_o, 
    // ---------------------------
    // - PORT B input/output ports
    // ---------------------------
    input clk_b_i, 
    input clk_en_b_i, 
    input rst_b_i, 
    input wr_en_b_i, 
    input [(BYTE_WIDTH_B - 1):0] ben_b_i, 
    input [(ADDR_WIDTH_B - 1):0] addr_b_i, 
    input [(DATA_WIDTH_B - 1):0] wr_data_b_i, 
    output [(DATA_WIDTH_B - 1):0] rd_data_b_o) ;
    // -----------------------------------------------------------------------------
    // Local Parameters
    // -----------------------------------------------------------------------------
    localparam POS_X0 = (POSx % 10) ; 
    localparam POS_X1 = ((POSx / 10) % 10) ; 
    localparam POS_X2 = ((POSx / 100) % 10) ; 
    localparam POS_X3 = ((POSx / 1000) % 10) ; 
    localparam POS_X4 = ((POSx / 10000) % 10) ; 
    localparam POS_X5 = ((POSx / 100000) % 10) ; 
    localparam POS_X6 = ((POSx / 1000000) % 10) ; 
    localparam POS_X7 = ((POSx / 10000000) % 10) ; 
    localparam POS_Y0 = (POSy % 10) ; 
    localparam POS_Y1 = ((POSy / 10) % 10) ; 
    localparam POS_Y2 = ((POSy / 100) % 10) ; 
    localparam POS_Y3 = ((POSy / 1000) % 10) ; 
    localparam POS_Y4 = ((POSy / 10000) % 10) ; 
    localparam POS_Y5 = ((POSy / 100000) % 10) ; 
    localparam POS_Y6 = ((POSy / 1000000) % 10) ; 
    localparam POS_Y7 = ((POSy / 10000000) % 10) ; 
    localparam [79:0] NUM_STRING = "9876543210" ; 
    localparam BLOCK_POS = getStringFromPos(POSx,
                POSy) ; 
    localparam BLOCK_SIZE = ((DATA_WIDTH_A == 36) ? "[36,1024]" : ((DATA_WIDTH_A == 32) ? "[32,1024]" : ((DATA_WIDTH_A == 18) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[18,1024]" : "[18,2048]") : ((DATA_WIDTH_A == 16) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[16,1024]" : "[16,2048]") : ((DATA_WIDTH_A == 9) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[9,2048]" : "[9,4096]") : ((DATA_WIDTH_A == 8) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[8,2048]" : "[8,4096]") : ((DATA_WIDTH_A == 4) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[4,4096]" : "[4,8192]") : ((DATA_WIDTH_A == 2) ? (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[2,8192]" : "[2,16384]") : (((FAMILY == "LATG1") || (FAMILY == "LAV-AT")) ? "[1,16384]" : "[1,32768]"))))))))) ; 
    if ((FAMILY_CODE == _FCODE_LIFCL_)) 
        begin : LIFCL
            wire [13:0] addr_a_w ; 
            wire [17:0] in_a_w ; 
            wire [17:0] out_a_w ; 
            wire [13:0] addr_b_w ; 
            wire [17:0] in_b_w ; 
            wire [17:0] out_b_w ; 
            if (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16))) 
                begin : genblk1
                    assign addr_a_w[13:4] = addr_a_i ; 
                    assign addr_a_w[3:2] = 2'b11 ; 
                    assign addr_a_w[1:0] = ((BYTE_ENABLE_A == 1) ? ben_a_i : 2'b11) ; 
                    if ((DATA_WIDTH_A == 18)) 
                        begin : genblk1
                            assign in_a_w = wr_data_a_i ; 
                            assign rd_data_a_o = out_a_w ; 
                        end
                    else
                        begin : genblk1
                            assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                            assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                            assign in_a_w[8] = 1'b0 ; 
                            assign in_a_w[17] = 1'b0 ; 
                            assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                            assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                        end
                end
            else
                begin : genblk1
                    assign addr_a_w[13:(14 - ADDR_WIDTH_A)] = addr_a_i ; 
                    if ((ADDR_WIDTH_A != 14)) 
                        begin : genblk1
                            assign addr_a_w[(14 - (ADDR_WIDTH_A + 1)):0] = {(14 - ADDR_WIDTH_A){1'b1}} ; 
                        end
                    assign in_a_w[17:DATA_WIDTH_A] = {(18 - DATA_WIDTH_A){1'b0}} ; 
                    assign in_a_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                    assign rd_data_a_o = out_a_w[(DATA_WIDTH_A - 1):0] ; 
                end
            if (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16))) 
                begin : genblk2
                    assign addr_b_w[13:4] = addr_b_i ; 
                    assign addr_b_w[3:2] = 2'b11 ; 
                    assign addr_b_w[1:0] = ((BYTE_ENABLE_B == 1) ? ben_b_i : 2'b11) ; 
                    if ((DATA_WIDTH_B == 18)) 
                        begin : genblk1
                            assign in_b_w = wr_data_b_i ; 
                            assign rd_data_b_o = out_b_w ; 
                        end
                    else
                        begin : genblk1
                            assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                            assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                            assign in_b_w[8] = 1'b0 ; 
                            assign in_b_w[17] = 1'b0 ; 
                            assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                            assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                        end
                end
            else
                begin : genblk2
                    assign addr_b_w[13:(14 - ADDR_WIDTH_B)] = addr_b_i ; 
                    if ((ADDR_WIDTH_B != 14)) 
                        begin : genblk1
                            assign addr_b_w[(14 - (ADDR_WIDTH_B + 1)):0] = {(14 - ADDR_WIDTH_B){1'b1}} ; 
                        end
                    assign in_b_w[17:DATA_WIDTH_B] = {(18 - DATA_WIDTH_B){1'b0}} ; 
                    assign in_b_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                    assign rd_data_b_o = out_b_w[(DATA_WIDTH_B - 1):0] ; 
                end
            wire t_wr_en_a_i = (((BYTE_ENABLE_A == 0) || (BYTE_WIDTH_A > 1)) ? wr_en_a_i : (wr_en_a_i & ben_a_i)) ; 
            wire t_wr_en_b_i = (((BYTE_ENABLE_B == 0) || (BYTE_WIDTH_B > 1)) ? wr_en_b_i : (wr_en_b_i & ben_b_i)) ; 
            wire [17:0] DIA = in_a_w ; 
            wire [17:0] DIB = in_b_w ; 
            wire [13:0] ADA = addr_a_w ; 
            wire [13:0] ADB = addr_b_w ; 
            wire CLKA = clk_a_i ; 
            wire CLKB = clk_b_i ; 
            wire CEA = clk_en_a_i ; 
            wire CEB = clk_en_b_i ; 
            wire WEA = t_wr_en_a_i ; 
            wire WEB = t_wr_en_b_i ; 
            wire [2:0] CSA = {clk_en_a_i,
                        clk_en_a_i,
                        clk_en_a_i} ; 
            wire [2:0] CSB = {clk_en_b_i,
                        clk_en_b_i,
                        clk_en_b_i} ; 
            wire RSTA = rst_a_i ; 
            wire RSTB = rst_b_i ; 
            localparam DW_A = (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16)) ? "X18" : (((DATA_WIDTH_A == 9) || (DATA_WIDTH_A == 8)) ? "X9" : ((DATA_WIDTH_A == 4) ? "X4" : ((DATA_WIDTH_A == 2) ? "X2" : "X1")))) ; 
            localparam REG_A = ((REGMODE_A == "reg") ? "USED" : "BYPASSED") ; 
            localparam RST_A = ((RESETMODE_A == "sync") ? "SYNC" : "ASYNC") ; 
            localparam CSC_A = "000" ; 
            localparam RST_REL_A = ((RESET_RELEASE_A == "sync") ? "SYNC" : "ASYNC") ; 
            localparam DW_B = (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16)) ? "X18" : (((DATA_WIDTH_B == 9) || (DATA_WIDTH_B == 8)) ? "X9" : ((DATA_WIDTH_B == 4) ? "X4" : ((DATA_WIDTH_B == 2) ? "X2" : "X1")))) ; 
            localparam REG_B = ((REGMODE_B == "reg") ? "USED" : "BYPASSED") ; 
            localparam RST_B = ((RESETMODE_B == "sync") ? "SYNC" : "ASYNC") ; 
            localparam CSC_B = "000" ; 
            localparam RST_REL_B = ((RESET_RELEASE_B == "sync") ? "SYNC" : "ASYNC") ; 
            localparam MEM_TYPE = "EBR" ; 
            localparam T_MEM_SIZE = {"[",
                        MEM_SIZE,
                        "]"} ; 
            (* ECO_MEM_TYPE=MEM_TYPE, ECO_MEM_ID=MEM_ID, ECO_MEM_SIZE=T_MEM_SIZE, ECO_MEM_BLOCK_SIZE=BLOCK_SIZE, ECO_MEM_BLOCK_POS=BLOCK_POS *) DP16K dp16k (.DIA(DIA), 
                        .DIB(DIB), 
                        .ADA(ADA), 
                        .ADB(ADB), 
                        .CLKA(CLKA), 
                        .CLKB(CLKB), 
                        .WEA(WEA), 
                        .WEB(WEB), 
                        .CEA(CEA), 
                        .CEB(CEB), 
                        .RSTA(RSTA), 
                        .RSTB(RSTB), 
                        .CSA(CSA), 
                        .CSB(CSB), 
                        .DOA(out_a_w), 
                        .DOB(out_b_w)) ; 
            defparam dp16k.DATA_WIDTH_A = DW_A ; 
            defparam dp16k.DATA_WIDTH_B = DW_B ; 
            defparam dp16k.OUTREG_A = REG_A ; 
            defparam dp16k.OUTREG_B = REG_B ; 
            defparam dp16k.RESETMODE_A = RST_A ; 
            defparam dp16k.RESETMODE_B = RST_B ; 
            defparam dp16k.CSDECODE_A = CSC_A ; 
            defparam dp16k.CSDECODE_B = CSC_B ; 
            defparam dp16k.ASYNC_RST_RELEASE_A = RST_REL_A ; 
            defparam dp16k.ASYNC_RST_RELEASE_B = RST_REL_B ; 
            defparam dp16k.INIT_DATA = "DYNAMIC" ; 
            defparam dp16k.INITVAL_00 = ((INIT_MODE == "mem_file") ? INITVAL_00 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_01 = ((INIT_MODE == "mem_file") ? INITVAL_01 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_02 = ((INIT_MODE == "mem_file") ? INITVAL_02 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_03 = ((INIT_MODE == "mem_file") ? INITVAL_03 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_04 = ((INIT_MODE == "mem_file") ? INITVAL_04 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_05 = ((INIT_MODE == "mem_file") ? INITVAL_05 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_06 = ((INIT_MODE == "mem_file") ? INITVAL_06 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_07 = ((INIT_MODE == "mem_file") ? INITVAL_07 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_08 = ((INIT_MODE == "mem_file") ? INITVAL_08 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_09 = ((INIT_MODE == "mem_file") ? INITVAL_09 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0A = ((INIT_MODE == "mem_file") ? INITVAL_0A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0B = ((INIT_MODE == "mem_file") ? INITVAL_0B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0C = ((INIT_MODE == "mem_file") ? INITVAL_0C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0D = ((INIT_MODE == "mem_file") ? INITVAL_0D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0E = ((INIT_MODE == "mem_file") ? INITVAL_0E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_0F = ((INIT_MODE == "mem_file") ? INITVAL_0F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_10 = ((INIT_MODE == "mem_file") ? INITVAL_10 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_11 = ((INIT_MODE == "mem_file") ? INITVAL_11 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_12 = ((INIT_MODE == "mem_file") ? INITVAL_12 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_13 = ((INIT_MODE == "mem_file") ? INITVAL_13 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_14 = ((INIT_MODE == "mem_file") ? INITVAL_14 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_15 = ((INIT_MODE == "mem_file") ? INITVAL_15 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_16 = ((INIT_MODE == "mem_file") ? INITVAL_16 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_17 = ((INIT_MODE == "mem_file") ? INITVAL_17 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_18 = ((INIT_MODE == "mem_file") ? INITVAL_18 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_19 = ((INIT_MODE == "mem_file") ? INITVAL_19 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1A = ((INIT_MODE == "mem_file") ? INITVAL_1A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1B = ((INIT_MODE == "mem_file") ? INITVAL_1B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1C = ((INIT_MODE == "mem_file") ? INITVAL_1C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1D = ((INIT_MODE == "mem_file") ? INITVAL_1D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1E = ((INIT_MODE == "mem_file") ? INITVAL_1E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_1F = ((INIT_MODE == "mem_file") ? INITVAL_1F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_20 = ((INIT_MODE == "mem_file") ? INITVAL_20 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_21 = ((INIT_MODE == "mem_file") ? INITVAL_21 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_22 = ((INIT_MODE == "mem_file") ? INITVAL_22 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_23 = ((INIT_MODE == "mem_file") ? INITVAL_23 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_24 = ((INIT_MODE == "mem_file") ? INITVAL_24 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_25 = ((INIT_MODE == "mem_file") ? INITVAL_25 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_26 = ((INIT_MODE == "mem_file") ? INITVAL_26 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_27 = ((INIT_MODE == "mem_file") ? INITVAL_27 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_28 = ((INIT_MODE == "mem_file") ? INITVAL_28 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_29 = ((INIT_MODE == "mem_file") ? INITVAL_29 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2A = ((INIT_MODE == "mem_file") ? INITVAL_2A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2B = ((INIT_MODE == "mem_file") ? INITVAL_2B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2C = ((INIT_MODE == "mem_file") ? INITVAL_2C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2D = ((INIT_MODE == "mem_file") ? INITVAL_2D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2E = ((INIT_MODE == "mem_file") ? INITVAL_2E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_2F = ((INIT_MODE == "mem_file") ? INITVAL_2F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_30 = ((INIT_MODE == "mem_file") ? INITVAL_30 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_31 = ((INIT_MODE == "mem_file") ? INITVAL_31 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_32 = ((INIT_MODE == "mem_file") ? INITVAL_32 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_33 = ((INIT_MODE == "mem_file") ? INITVAL_33 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_34 = ((INIT_MODE == "mem_file") ? INITVAL_34 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_35 = ((INIT_MODE == "mem_file") ? INITVAL_35 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_36 = ((INIT_MODE == "mem_file") ? INITVAL_36 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_37 = ((INIT_MODE == "mem_file") ? INITVAL_37 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_38 = ((INIT_MODE == "mem_file") ? INITVAL_38 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_39 = ((INIT_MODE == "mem_file") ? INITVAL_39 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3A = ((INIT_MODE == "mem_file") ? INITVAL_3A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3B = ((INIT_MODE == "mem_file") ? INITVAL_3B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3C = ((INIT_MODE == "mem_file") ? INITVAL_3C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3D = ((INIT_MODE == "mem_file") ? INITVAL_3D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3E = ((INIT_MODE == "mem_file") ? INITVAL_3E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            defparam dp16k.INITVAL_3F = ((INIT_MODE == "mem_file") ? INITVAL_3F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
        end
    else
        if ((FAMILY_CODE == _FCODE_AP6_)) 
            begin : AP6
                wire [14:0] addr_a_w ; 
                wire [35:0] in_a_w ; 
                wire [35:0] out_a_w ; 
                wire [14:0] addr_b_w ; 
                wire [35:0] in_b_w ; 
                wire [35:0] out_b_w ; 
                if (((DATA_WIDTH_A == 36) || (DATA_WIDTH_A == 32))) 
                    begin : genblk1
                        assign addr_a_w[14:5] = addr_a_i ; 
                        assign addr_a_w[4] = 1'b1 ; 
                        assign addr_a_w[3:0] = ((BYTE_ENABLE_A == 1) ? ben_a_i : 4'b1111) ; 
                        if ((DATA_WIDTH_A == 36)) 
                            begin : genblk1
                                assign in_a_w = wr_data_a_i ; 
                                assign rd_data_a_o = out_a_w ; 
                            end
                        else
                            begin : genblk1
                                assign in_a_w[34:27] = wr_data_a_i[31:24] ; 
                                assign in_a_w[25:18] = wr_data_a_i[23:16] ; 
                                assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                                assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                                assign in_a_w[8] = 1'b0 ; 
                                assign in_a_w[17] = 1'b0 ; 
                                assign in_a_w[26] = 1'b0 ; 
                                assign in_a_w[35] = 1'b0 ; 
                                assign rd_data_a_o[31:24] = out_a_w[34:27] ; 
                                assign rd_data_a_o[23:16] = out_a_w[25:18] ; 
                                assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                                assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                            end
                    end
                else
                    if (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16))) 
                        begin : genblk1
                            assign addr_a_w[14:4] = addr_a_i ; 
                            assign addr_a_w[3:2] = 2'b11 ; 
                            assign addr_a_w[1:0] = ((BYTE_ENABLE_A == 1) ? ben_a_i : 2'b11) ; 
                            if ((DATA_WIDTH_A == 18)) 
                                begin : genblk1
                                    assign in_a_w[17:0] = wr_data_a_i ; 
                                    assign rd_data_a_o = out_a_w[17:0] ; 
                                end
                            else
                                begin : genblk1
                                    assign in_a_w[16:9] = wr_data_a_i[15:8] ; 
                                    assign in_a_w[7:0] = wr_data_a_i[7:0] ; 
                                    assign in_a_w[8] = 1'b0 ; 
                                    assign in_a_w[17] = 1'b0 ; 
                                    assign in_a_w[35:18] = {18{1'b0}} ; 
                                    assign rd_data_a_o[15:8] = out_a_w[16:9] ; 
                                    assign rd_data_a_o[7:0] = out_a_w[7:0] ; 
                                end
                        end
                    else
                        begin : genblk1
                            assign addr_a_w[14:(15 - ADDR_WIDTH_A)] = addr_a_i ; 
                            if ((ADDR_WIDTH_A != 15)) 
                                begin : genblk1
                                    assign addr_a_w[(15 - (ADDR_WIDTH_A + 1)):0] = {(15 - ADDR_WIDTH_A){1'b1}} ; 
                                end
                            assign in_a_w[35:DATA_WIDTH_A] = {(36 - DATA_WIDTH_A){1'b0}} ; 
                            assign in_a_w[(DATA_WIDTH_A - 1):0] = wr_data_a_i ; 
                            assign rd_data_a_o = out_a_w[(DATA_WIDTH_A - 1):0] ; 
                        end
                if (((DATA_WIDTH_B == 36) || (DATA_WIDTH_B == 32))) 
                    begin : genblk2
                        assign addr_b_w[14:5] = addr_b_i ; 
                        assign addr_b_w[4] = 1'b1 ; 
                        assign addr_b_w[3:0] = ((BYTE_ENABLE_B == 1) ? ben_b_i : 4'b1111) ; 
                        if ((DATA_WIDTH_B == 36)) 
                            begin : genblk1
                                assign in_b_w = wr_data_b_i ; 
                                assign rd_data_b_o = out_b_w ; 
                            end
                        else
                            begin : genblk1
                                assign in_b_w[34:27] = wr_data_b_i[31:24] ; 
                                assign in_b_w[25:18] = wr_data_b_i[23:16] ; 
                                assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                                assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                                assign in_b_w[8] = 1'b0 ; 
                                assign in_b_w[17] = 1'b0 ; 
                                assign in_b_w[26] = 1'b0 ; 
                                assign in_b_w[35] = 1'b0 ; 
                                assign rd_data_b_o[31:24] = out_b_w[34:27] ; 
                                assign rd_data_b_o[23:16] = out_b_w[25:18] ; 
                                assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                                assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                            end
                    end
                else
                    if (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16))) 
                        begin : genblk2
                            assign addr_b_w[14:4] = addr_b_i ; 
                            assign addr_b_w[3:2] = 2'b11 ; 
                            assign addr_b_w[1:0] = ((BYTE_ENABLE_B == 1) ? ben_b_i : 2'b11) ; 
                            if ((DATA_WIDTH_B == 18)) 
                                begin : genblk1
                                    assign in_b_w[17:0] = wr_data_b_i ; 
                                    assign rd_data_b_o = out_b_w[17:0] ; 
                                end
                            else
                                begin : genblk1
                                    assign in_b_w[16:9] = wr_data_b_i[15:8] ; 
                                    assign in_b_w[7:0] = wr_data_b_i[7:0] ; 
                                    assign in_b_w[8] = 1'b0 ; 
                                    assign in_b_w[17] = 1'b0 ; 
                                    assign in_b_w[35:18] = {18{1'b0}} ; 
                                    assign rd_data_b_o[15:8] = out_b_w[16:9] ; 
                                    assign rd_data_b_o[7:0] = out_b_w[7:0] ; 
                                end
                        end
                    else
                        begin : genblk2
                            assign addr_b_w[14:(15 - ADDR_WIDTH_B)] = addr_b_i ; 
                            if ((ADDR_WIDTH_B != 15)) 
                                begin : genblk1
                                    assign addr_b_w[(15 - (ADDR_WIDTH_B + 1)):0] = {(15 - ADDR_WIDTH_B){1'b1}} ; 
                                end
                            assign in_b_w[35:DATA_WIDTH_B] = {(36 - DATA_WIDTH_B){1'b0}} ; 
                            assign in_b_w[(DATA_WIDTH_B - 1):0] = wr_data_b_i ; 
                            assign rd_data_b_o = out_b_w[(DATA_WIDTH_B - 1):0] ; 
                        end
                wire t_wr_en_a_i = (((BYTE_ENABLE_A == 0) || (BYTE_WIDTH_A > 1)) ? wr_en_a_i : (wr_en_a_i & ben_a_i)) ; 
                wire t_wr_en_b_i = (((BYTE_ENABLE_B == 0) || (BYTE_WIDTH_B > 1)) ? wr_en_b_i : (wr_en_b_i & ben_b_i)) ; 
                wire [35:0] DIA = in_a_w ; 
                wire [35:0] DIB = in_b_w ; 
                wire [14:0] ADA = addr_a_w ; 
                wire [14:0] ADB = addr_b_w ; 
                wire CLKA = clk_a_i ; 
                wire CLKB = clk_b_i ; 
                wire CEA = clk_en_a_i ; 
                wire CEB = clk_en_b_i ; 
                wire WEA = t_wr_en_a_i ; 
                wire WEB = t_wr_en_b_i ; 
                wire [2:0] CSA = {clk_en_a_i,
                            clk_en_a_i,
                            clk_en_a_i} ; 
                wire [2:0] CSB = {clk_en_b_i,
                            clk_en_b_i,
                            clk_en_b_i} ; 
                wire RSTA = rst_a_i ; 
                wire RSTB = rst_b_i ; 
                wire OCEA = 1'b1 ; 
                wire OCEB = 1'b1 ; 
                localparam DW_A = (((DATA_WIDTH_A == 36) || (DATA_WIDTH_A == 32)) ? "X36" : (((DATA_WIDTH_A == 18) || (DATA_WIDTH_A == 16)) ? "X18" : (((DATA_WIDTH_A == 9) || (DATA_WIDTH_A == 8)) ? "X9" : ((DATA_WIDTH_A == 4) ? "X4" : ((DATA_WIDTH_A == 2) ? "X2" : "X1"))))) ; 
                localparam REG_A = ((REGMODE_A == "reg") ? "USED" : "BYPASSED") ; 
                localparam RST_A = ((RESETMODE_A == "sync") ? "SYNC" : "ASYNC") ; 
                localparam CSC_A = "000" ; 
                localparam RST_REL_A = ((RESET_RELEASE_A == "sync") ? "SYNC" : "ASYNC") ; 
                localparam DW_B = (((DATA_WIDTH_B == 36) || (DATA_WIDTH_B == 32)) ? "X36" : (((DATA_WIDTH_B == 18) || (DATA_WIDTH_B == 16)) ? "X18" : (((DATA_WIDTH_B == 9) || (DATA_WIDTH_B == 8)) ? "X9" : ((DATA_WIDTH_B == 4) ? "X4" : ((DATA_WIDTH_B == 2) ? "X2" : "X1"))))) ; 
                localparam REG_B = ((REGMODE_B == "reg") ? "USED" : "BYPASSED") ; 
                localparam RST_B = ((RESETMODE_B == "sync") ? "SYNC" : "ASYNC") ; 
                localparam CSC_B = "000" ; 
                localparam RST_REL_B = ((RESET_RELEASE_B == "sync") ? "SYNC" : "ASYNC") ; 
                localparam MEM_TYPE = "EBR" ; 
                localparam T_MEM_SIZE = {"[",
                            MEM_SIZE,
                            "]"} ; 
                (* ECO_MEM_TYPE=MEM_TYPE, ECO_MEM_ID=MEM_ID, ECO_MEM_SIZE=T_MEM_SIZE, ECO_MEM_BLOCK_SIZE=BLOCK_SIZE, ECO_MEM_BLOCK_POS=BLOCK_POS *) DP32K dp32k (.DIA(DIA), 
                            .DIB(DIB), 
                            .ADA(ADA), 
                            .ADB(ADB), 
                            .CLKA(CLKA), 
                            .CLKB(CLKB), 
                            .WEA(WEA), 
                            .WEB(WEB), 
                            .CEA(CEA), 
                            .CEB(CEB), 
                            .OCEA(OCEA), 
                            .OCEB(OCEB), 
                            .RSTA(RSTA), 
                            .RSTB(RSTB), 
                            .CSA(CSA), 
                            .CSB(CSB), 
                            .DOA(out_a_w), 
                            .DOB(out_b_w)) ; 
                defparam dp32k.DATA_WIDTH_A = DW_A ; 
                defparam dp32k.DATA_WIDTH_B = DW_B ; 
                defparam dp32k.OUTREG_A = REG_A ; 
                defparam dp32k.OUTREG_B = REG_B ; 
                defparam dp32k.RESETMODE_A = RST_A ; 
                defparam dp32k.RESETMODE_B = RST_B ; 
                defparam dp32k.CSDECODE_A = CSC_A ; 
                defparam dp32k.CSDECODE_B = CSC_B ; 
                defparam dp32k.ASYNC_RST_RELEASE_A = RST_REL_A ; 
                defparam dp32k.ASYNC_RST_RELEASE_B = RST_REL_B ; 
                defparam dp32k.INIT_DATA = "DYNAMIC" ; 
                defparam dp32k.INITVAL_00 = ((INIT_MODE == "mem_file") ? INITVAL_00 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_01 = ((INIT_MODE == "mem_file") ? INITVAL_01 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_02 = ((INIT_MODE == "mem_file") ? INITVAL_02 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_03 = ((INIT_MODE == "mem_file") ? INITVAL_03 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_04 = ((INIT_MODE == "mem_file") ? INITVAL_04 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_05 = ((INIT_MODE == "mem_file") ? INITVAL_05 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_06 = ((INIT_MODE == "mem_file") ? INITVAL_06 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_07 = ((INIT_MODE == "mem_file") ? INITVAL_07 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_08 = ((INIT_MODE == "mem_file") ? INITVAL_08 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_09 = ((INIT_MODE == "mem_file") ? INITVAL_09 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0A = ((INIT_MODE == "mem_file") ? INITVAL_0A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0B = ((INIT_MODE == "mem_file") ? INITVAL_0B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0C = ((INIT_MODE == "mem_file") ? INITVAL_0C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0D = ((INIT_MODE == "mem_file") ? INITVAL_0D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0E = ((INIT_MODE == "mem_file") ? INITVAL_0E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_0F = ((INIT_MODE == "mem_file") ? INITVAL_0F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_10 = ((INIT_MODE == "mem_file") ? INITVAL_10 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_11 = ((INIT_MODE == "mem_file") ? INITVAL_11 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_12 = ((INIT_MODE == "mem_file") ? INITVAL_12 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_13 = ((INIT_MODE == "mem_file") ? INITVAL_13 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_14 = ((INIT_MODE == "mem_file") ? INITVAL_14 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_15 = ((INIT_MODE == "mem_file") ? INITVAL_15 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_16 = ((INIT_MODE == "mem_file") ? INITVAL_16 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_17 = ((INIT_MODE == "mem_file") ? INITVAL_17 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_18 = ((INIT_MODE == "mem_file") ? INITVAL_18 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_19 = ((INIT_MODE == "mem_file") ? INITVAL_19 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1A = ((INIT_MODE == "mem_file") ? INITVAL_1A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1B = ((INIT_MODE == "mem_file") ? INITVAL_1B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1C = ((INIT_MODE == "mem_file") ? INITVAL_1C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1D = ((INIT_MODE == "mem_file") ? INITVAL_1D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1E = ((INIT_MODE == "mem_file") ? INITVAL_1E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_1F = ((INIT_MODE == "mem_file") ? INITVAL_1F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_20 = ((INIT_MODE == "mem_file") ? INITVAL_20 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_21 = ((INIT_MODE == "mem_file") ? INITVAL_21 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_22 = ((INIT_MODE == "mem_file") ? INITVAL_22 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_23 = ((INIT_MODE == "mem_file") ? INITVAL_23 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_24 = ((INIT_MODE == "mem_file") ? INITVAL_24 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_25 = ((INIT_MODE == "mem_file") ? INITVAL_25 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_26 = ((INIT_MODE == "mem_file") ? INITVAL_26 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_27 = ((INIT_MODE == "mem_file") ? INITVAL_27 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_28 = ((INIT_MODE == "mem_file") ? INITVAL_28 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_29 = ((INIT_MODE == "mem_file") ? INITVAL_29 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2A = ((INIT_MODE == "mem_file") ? INITVAL_2A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2B = ((INIT_MODE == "mem_file") ? INITVAL_2B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2C = ((INIT_MODE == "mem_file") ? INITVAL_2C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2D = ((INIT_MODE == "mem_file") ? INITVAL_2D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2E = ((INIT_MODE == "mem_file") ? INITVAL_2E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_2F = ((INIT_MODE == "mem_file") ? INITVAL_2F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_30 = ((INIT_MODE == "mem_file") ? INITVAL_30 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_31 = ((INIT_MODE == "mem_file") ? INITVAL_31 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_32 = ((INIT_MODE == "mem_file") ? INITVAL_32 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_33 = ((INIT_MODE == "mem_file") ? INITVAL_33 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_34 = ((INIT_MODE == "mem_file") ? INITVAL_34 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_35 = ((INIT_MODE == "mem_file") ? INITVAL_35 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_36 = ((INIT_MODE == "mem_file") ? INITVAL_36 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_37 = ((INIT_MODE == "mem_file") ? INITVAL_37 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_38 = ((INIT_MODE == "mem_file") ? INITVAL_38 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_39 = ((INIT_MODE == "mem_file") ? INITVAL_39 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3A = ((INIT_MODE == "mem_file") ? INITVAL_3A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3B = ((INIT_MODE == "mem_file") ? INITVAL_3B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3C = ((INIT_MODE == "mem_file") ? INITVAL_3C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3D = ((INIT_MODE == "mem_file") ? INITVAL_3D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3E = ((INIT_MODE == "mem_file") ? INITVAL_3E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_3F = ((INIT_MODE == "mem_file") ? INITVAL_3F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_40 = ((INIT_MODE == "mem_file") ? INITVAL_40 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_41 = ((INIT_MODE == "mem_file") ? INITVAL_41 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_42 = ((INIT_MODE == "mem_file") ? INITVAL_42 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_43 = ((INIT_MODE == "mem_file") ? INITVAL_43 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_44 = ((INIT_MODE == "mem_file") ? INITVAL_44 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_45 = ((INIT_MODE == "mem_file") ? INITVAL_45 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_46 = ((INIT_MODE == "mem_file") ? INITVAL_46 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_47 = ((INIT_MODE == "mem_file") ? INITVAL_47 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_48 = ((INIT_MODE == "mem_file") ? INITVAL_48 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_49 = ((INIT_MODE == "mem_file") ? INITVAL_49 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4A = ((INIT_MODE == "mem_file") ? INITVAL_4A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4B = ((INIT_MODE == "mem_file") ? INITVAL_4B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4C = ((INIT_MODE == "mem_file") ? INITVAL_4C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4D = ((INIT_MODE == "mem_file") ? INITVAL_4D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4E = ((INIT_MODE == "mem_file") ? INITVAL_4E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_4F = ((INIT_MODE == "mem_file") ? INITVAL_4F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_50 = ((INIT_MODE == "mem_file") ? INITVAL_50 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_51 = ((INIT_MODE == "mem_file") ? INITVAL_51 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_52 = ((INIT_MODE == "mem_file") ? INITVAL_52 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_53 = ((INIT_MODE == "mem_file") ? INITVAL_53 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_54 = ((INIT_MODE == "mem_file") ? INITVAL_54 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_55 = ((INIT_MODE == "mem_file") ? INITVAL_55 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_56 = ((INIT_MODE == "mem_file") ? INITVAL_56 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_57 = ((INIT_MODE == "mem_file") ? INITVAL_57 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_58 = ((INIT_MODE == "mem_file") ? INITVAL_58 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_59 = ((INIT_MODE == "mem_file") ? INITVAL_59 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5A = ((INIT_MODE == "mem_file") ? INITVAL_5A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5B = ((INIT_MODE == "mem_file") ? INITVAL_5B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5C = ((INIT_MODE == "mem_file") ? INITVAL_5C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5D = ((INIT_MODE == "mem_file") ? INITVAL_5D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5E = ((INIT_MODE == "mem_file") ? INITVAL_5E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_5F = ((INIT_MODE == "mem_file") ? INITVAL_5F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_60 = ((INIT_MODE == "mem_file") ? INITVAL_60 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_61 = ((INIT_MODE == "mem_file") ? INITVAL_61 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_62 = ((INIT_MODE == "mem_file") ? INITVAL_62 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_63 = ((INIT_MODE == "mem_file") ? INITVAL_63 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_64 = ((INIT_MODE == "mem_file") ? INITVAL_64 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_65 = ((INIT_MODE == "mem_file") ? INITVAL_65 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_66 = ((INIT_MODE == "mem_file") ? INITVAL_66 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_67 = ((INIT_MODE == "mem_file") ? INITVAL_67 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_68 = ((INIT_MODE == "mem_file") ? INITVAL_68 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_69 = ((INIT_MODE == "mem_file") ? INITVAL_69 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6A = ((INIT_MODE == "mem_file") ? INITVAL_6A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6B = ((INIT_MODE == "mem_file") ? INITVAL_6B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6C = ((INIT_MODE == "mem_file") ? INITVAL_6C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6D = ((INIT_MODE == "mem_file") ? INITVAL_6D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6E = ((INIT_MODE == "mem_file") ? INITVAL_6E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_6F = ((INIT_MODE == "mem_file") ? INITVAL_6F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_70 = ((INIT_MODE == "mem_file") ? INITVAL_70 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_71 = ((INIT_MODE == "mem_file") ? INITVAL_71 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_72 = ((INIT_MODE == "mem_file") ? INITVAL_72 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_73 = ((INIT_MODE == "mem_file") ? INITVAL_73 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_74 = ((INIT_MODE == "mem_file") ? INITVAL_74 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_75 = ((INIT_MODE == "mem_file") ? INITVAL_75 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_76 = ((INIT_MODE == "mem_file") ? INITVAL_76 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_77 = ((INIT_MODE == "mem_file") ? INITVAL_77 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_78 = ((INIT_MODE == "mem_file") ? INITVAL_78 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_79 = ((INIT_MODE == "mem_file") ? INITVAL_79 : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7A = ((INIT_MODE == "mem_file") ? INITVAL_7A : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7B = ((INIT_MODE == "mem_file") ? INITVAL_7B : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7C = ((INIT_MODE == "mem_file") ? INITVAL_7C : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7D = ((INIT_MODE == "mem_file") ? INITVAL_7D : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7E = ((INIT_MODE == "mem_file") ? INITVAL_7E : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
                defparam dp32k.INITVAL_7F = ((INIT_MODE == "mem_file") ? INITVAL_7F : ((INIT_MODE == "all_one") ? "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" : "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000")) ; 
            end
    //------------------------------------------------------------------------------
    // Function Definition
    //------------------------------------------------------------------------------
    function [31:0] calculateStringSize ; 
        input [31:0] x_calc ; 
        input [31:0] y_calc ; 
        reg [31:0] x_func ; 
        reg [31:0] y_func ; 
        begin
            if ((x_calc >= 10000000)) 
                begin
                    x_func = 8 ;
                end
            else
                if ((x_calc >= 1000000)) 
                    begin
                        x_func = 7 ;
                    end
                else
                    if ((x_calc >= 100000)) 
                        begin
                            x_func = 6 ;
                        end
                    else
                        if ((x_calc >= 10000)) 
                            begin
                                x_func = 5 ;
                            end
                        else
                            if ((x_calc >= 1000)) 
                                begin
                                    x_func = 4 ;
                                end
                            else
                                if ((x_calc >= 100)) 
                                    begin
                                        x_func = 3 ;
                                    end
                                else
                                    if ((x_calc >= 10)) 
                                        begin
                                            x_func = 2 ;
                                        end
                                    else
                                        begin
                                            x_func = 1 ;
                                        end
            if ((y_calc >= 10000000)) 
                begin
                    y_func = 8 ;
                end
            else
                if ((y_calc >= 1000000)) 
                    begin
                        y_func = 7 ;
                    end
                else
                    if ((y_calc >= 100000)) 
                        begin
                            y_func = 6 ;
                        end
                    else
                        if ((y_calc >= 10000)) 
                            begin
                                y_func = 5 ;
                            end
                        else
                            if ((y_calc >= 1000)) 
                                begin
                                    y_func = 4 ;
                                end
                            else
                                if ((y_calc >= 100)) 
                                    begin
                                        y_func = 3 ;
                                    end
                                else
                                    if ((y_calc >= 10)) 
                                        begin
                                            y_func = 2 ;
                                        end
                                    else
                                        begin
                                            y_func = 1 ;
                                        end
            calculateStringSize = (((3 + x_func) + y_func) * 8) ;
        end
    endfunction
    function [(STRING_SIZE - 1):0] getStringFromPos ; 
        input [31:0] x ; 
        input [31:0] y ; 
        begin
            if ((y >= 10000000)) 
                begin
                    if ((x >= 10000000)) 
                        begin
                            getStringFromPos = {"[",
                                    NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                    ",",
                                    NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                    "]"} ;
                        end
                    else
                        if ((x >= 1000000)) 
                            begin
                                getStringFromPos = {"[",
                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                        ",",
                                        NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                        "]"} ;
                            end
                        else
                            if ((x >= 100000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 10000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 1000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 100)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 10)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y7 * 8) + 7):(POS_Y7 * 8)],
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                end
            else
                if ((y >= 1000000)) 
                    begin
                        if ((x >= 10000000)) 
                            begin
                                getStringFromPos = {"[",
                                        NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                        ",",
                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                        "]"} ;
                            end
                        else
                            if ((x >= 1000000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 100000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 10000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 1000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 100)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 10)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y6 * 8) + 7):(POS_Y6 * 8)],
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                    end
                else
                    if ((y >= 100000)) 
                        begin
                            if ((x >= 10000000)) 
                                begin
                                    getStringFromPos = {"[",
                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                            ",",
                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                            "]"} ;
                                end
                            else
                                if ((x >= 1000000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 100000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 10000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 1000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 100)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 10)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y5 * 8) + 7):(POS_Y5 * 8)],
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                        end
                    else
                        if ((y >= 10000)) 
                            begin
                                if ((x >= 10000000)) 
                                    begin
                                        getStringFromPos = {"[",
                                                NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                ",",
                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                "]"} ;
                                    end
                                else
                                    if ((x >= 1000000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 100000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 10000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y4 * 8) + 7):(POS_Y4 * 8)],
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                            end
                        else
                            if ((y >= 1000)) 
                                begin
                                    if ((x >= 10000000)) 
                                        begin
                                            getStringFromPos = {"[",
                                                    NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                    NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                    ",",
                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                    "]"} ;
                                        end
                                    else
                                        if ((x >= 1000000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 100000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 10000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 1000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 100)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 10)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y3 * 8) + 7):(POS_Y3 * 8)],
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                end
                            else
                                if ((y >= 100)) 
                                    begin
                                        if ((x >= 10000000)) 
                                            begin
                                                getStringFromPos = {"[",
                                                        NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                        NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                        NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                        ",",
                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                        "]"} ;
                                            end
                                        else
                                            if ((x >= 1000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 100000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 10000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 1000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 100)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 10)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y2 * 8) + 7):(POS_Y2 * 8)],
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                    end
                                else
                                    if ((y >= 10)) 
                                        begin
                                            if ((x >= 10000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 1000)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 100)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    if ((x >= 10)) 
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                                                    else
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y1 * 8) + 7):(POS_Y1 * 8)],
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                        end
                                    else
                                        begin
                                            if ((x >= 10000000)) 
                                                begin
                                                    getStringFromPos = {"[",
                                                            NUM_STRING[((POS_X7 * 8) + 7):(POS_X7 * 8)],
                                                            NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                            NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                            NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                            ",",
                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                            "]"} ;
                                                end
                                            else
                                                if ((x >= 1000000)) 
                                                    begin
                                                        getStringFromPos = {"[",
                                                                NUM_STRING[((POS_X6 * 8) + 7):(POS_X6 * 8)],
                                                                NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                ",",
                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                "]"} ;
                                                    end
                                                else
                                                    if ((x >= 100000)) 
                                                        begin
                                                            getStringFromPos = {"[",
                                                                    NUM_STRING[((POS_X5 * 8) + 7):(POS_X5 * 8)],
                                                                    NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                    NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                    NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                    NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                    NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                    ",",
                                                                    NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                    "]"} ;
                                                        end
                                                    else
                                                        if ((x >= 10000)) 
                                                            begin
                                                                getStringFromPos = {"[",
                                                                        NUM_STRING[((POS_X4 * 8) + 7):(POS_X4 * 8)],
                                                                        NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                        NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                        NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                        NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                        ",",
                                                                        NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                        "]"} ;
                                                            end
                                                        else
                                                            if ((x >= 1000)) 
                                                                begin
                                                                    getStringFromPos = {"[",
                                                                            NUM_STRING[((POS_X3 * 8) + 7):(POS_X3 * 8)],
                                                                            NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                            NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                            NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                            ",",
                                                                            NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                            "]"} ;
                                                                end
                                                            else
                                                                if ((x >= 100)) 
                                                                    begin
                                                                        getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X2 * 8) + 7):(POS_X2 * 8)],
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                    end
                                                                else
                                                                    if ((x >= 10)) 
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X1 * 8) + 7):(POS_X1 * 8)],
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                                                    else
                                                                        begin
                                                                            getStringFromPos = {"[",
                                                                                NUM_STRING[((POS_X0 * 8) + 7):(POS_X0 * 8)],
                                                                                ",",
                                                                                NUM_STRING[((POS_Y0 * 8) + 7):(POS_Y0 * 8)],
                                                                                "]"} ;
                                                                        end
                                        end
        end
    endfunction
    function [31:0] roundUP ; 
        input [31:0] dividend ; 
        input [31:0] divisor ; 
        begin
            if ((divisor == 1)) 
                begin
                    roundUP = dividend ;
                end
            else
                if ((divisor == dividend)) 
                    begin
                        roundUP = 1 ;
                    end
                else
                    begin
                        roundUP = ((dividend / divisor) + (((dividend % divisor) == 0) ? 0 : 1)) ;
                    end
        end
    endfunction
    function [31:0] getAddrWidth ; 
        input [31:0] dwid ; 
        input [31:0] family_code ; 
        begin
            case (family_code)
            _FCODE_LIFCL_ : 
                begin
                    case (dwid)
                    18 : 
                        getAddrWidth = 10 ;
                    16 : 
                        getAddrWidth = 10 ;
                    9 : 
                        getAddrWidth = 11 ;
                    8 : 
                        getAddrWidth = 11 ;
                    4 : 
                        getAddrWidth = 12 ;
                    2 : 
                        getAddrWidth = 13 ;
                    default : 
                        getAddrWidth = 14 ;
                    endcase 
                end
            _FCODE_AP6_ : 
                begin
                    case (dwid)
                    36 : 
                        getAddrWidth = 10 ;
                    32 : 
                        getAddrWidth = 10 ;
                    18 : 
                        getAddrWidth = 11 ;
                    16 : 
                        getAddrWidth = 11 ;
                    9 : 
                        getAddrWidth = 12 ;
                    8 : 
                        getAddrWidth = 12 ;
                    4 : 
                        getAddrWidth = 13 ;
                    2 : 
                        getAddrWidth = 14 ;
                    default : 
                        getAddrWidth = 15 ;
                    endcase 
                end
            default : 
                getAddrWidth = 8 ;
            endcase 
        end
    endfunction
    function [9:0] getByteSize ; 
        input [31:0] family_code ; 
        input [31:0] dwidth_impl ; 
        begin
            case (family_code)
            _FCODE_LIFCL_,
                    _FCODE_AP6_ : 
                begin
                    if (((dwidth_impl % 9) == 0)) 
                        getByteSize = 9 ;
                    else
                        getByteSize = 8 ;
                end
            default : 
                getByteSize = 8 ;
            endcase 
        end
    endfunction
endmodule


